"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[737],{2212:function(a,b,c){c.d(b,{"$V":function(){return hD},CP7:function(){return dR},D1R:function(){return q},EJi:function(){return fV},F5T:function(){return ba},FM8:function(){return E},IOt:function(){return x},Ilk:function(){return a7},Kj0:function(){return bP},M8C:function(){return D},Mig:function(){return gY},"N$j":function(){return ek},NMF:function(){return t},OdW:function(){return ej},OoA:function(){return k},Ox3:function(){return gX},PMe:function(){return gS},Pa4:function(){return O},QRU:function(){return g6},QmN:function(){return e},ROQ:function(){return eK},RsA:function(){return d},Syv:function(){return s},TUv:function(){return eg},TlE:function(){return be},Tme:function(){return aN},TyD:function(){return l},UCm:function(){return r},UY4:function(){return eB},UlW:function(){return u},Wid:function(){return fU},Wl3:function(){return f},YLQ:function(){return m},ZAu:function(){return dN},Zp0:function(){return g1},ZzF:function(){return R},"_C8":function(){return f2},"_fP":function(){return N},aH4:function(){return n},aLr:function(){return af},aNw:function(){return gi},blk:function(){return eA},cPb:function(){return bY},cek:function(){return gU},dUE:function(){return f9},dpR:function(){return gq},ehD:function(){return h},ejS:function(){return ez},hH6:function(){return gk},iKG:function(){return gV},iLg:function(){return gb},iUV:function(){return hu},kB5:function(){return dY},knz:function(){return w},m7l:function(){return ge},nls:function(){return eq},pBf:function(){return z},qyh:function(){return p},rpg:function(){return i},u9r:function(){return bx},uWy:function(){return j},vBJ:function(){return bb},vpT:function(){return dW},wem:function(){return o},woe:function(){return eG},x12:function(){return ew},xsS:function(){return dV},yC1:function(){return gd},yGw:function(){return ao},"z$h":function(){return v}});let d={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},e={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},f=0,g=1,h=2,i=1e3,j=1001,k=1002,l=1003,m=1004,n=1005,o=1006,p=1007,q=1008,r=1022,s=2300,t=2301,u=1,v=2,w=3001,x=0,y="300 es";function z(){}Object.assign(z.prototype,{addEventListener:function(a,b){void 0===this._listeners&&(this._listeners={});let c=this._listeners;void 0===c[a]&&(c[a]=[]),-1===c[a].indexOf(b)&&c[a].push(b)},hasEventListener:function(a,b){if(void 0===this._listeners)return!1;let c=this._listeners;return void 0!==c[a]&& -1!==c[a].indexOf(b)},removeEventListener:function(a,b){if(void 0===this._listeners)return;let c=this._listeners,d=c[a];if(void 0!==d){let e=d.indexOf(b);-1!==e&&d.splice(e,1)}},dispatchEvent:function(a){if(void 0===this._listeners)return;let b=this._listeners,c=b[a.type];if(void 0!==c){a.target=this;let d=c.slice(0);for(let e=0,f=d.length;e<f;e++)d[e].call(this,a)}}});let A=[];for(let B=0;B<256;B++)A[B]=(B<16?"0":"")+B.toString(16);let C=1234567,D={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){let a=4294967295*Math.random()|0,b=4294967295*Math.random()|0,c=4294967295*Math.random()|0,d=4294967295*Math.random()|0,e=A[255&a]+A[a>>8&255]+A[a>>16&255]+A[a>>24&255]+"-"+A[255&b]+A[b>>8&255]+"-"+A[b>>16&15|64]+A[b>>24&255]+"-"+A[63&c|128]+A[c>>8&255]+"-"+A[c>>16&255]+A[c>>24&255]+A[255&d]+A[d>>8&255]+A[d>>16&255]+A[d>>24&255];return e.toUpperCase()},clamp:function(a,b,c){return Math.max(b,Math.min(c,a))},euclideanModulo:function(a,b){return(a%b+b)%b},mapLinear:function(a,b,c,d,e){return d+(a-b)*(e-d)/(c-b)},lerp:function(a,b,c){return(1-c)*a+c*b},smoothstep:function(a,b,c){return a<=b?0:a>=c?1:(a=(a-b)/(c-b))*a*(3-2*a)},smootherstep:function(a,b,c){return a<=b?0:a>=c?1:(a=(a-b)/(c-b))*a*a*(a*(6*a-15)+10)},randInt:function(a,b){return a+Math.floor(Math.random()*(b-a+1))},randFloat:function(a,b){return a+Math.random()*(b-a)},randFloatSpread:function(a){return a*(.5-Math.random())},seededRandom:function(a){return void 0!==a&&(C=a%2147483647),((C=16807*C%2147483647)-1)/2147483646},degToRad:function(a){return a*D.DEG2RAD},radToDeg:function(a){return a*D.RAD2DEG},isPowerOfTwo:function(a){return(a&a-1)==0&&0!==a},ceilPowerOfTwo:function(a){return Math.pow(2,Math.ceil(Math.log(a)/Math.LN2))},floorPowerOfTwo:function(a){return Math.pow(2,Math.floor(Math.log(a)/Math.LN2))},setQuaternionFromProperEuler:function(a,b,c,d,e){let f=Math.cos,g=Math.sin,h=f(c/2),i=g(c/2),j=f((b+d)/2),k=g((b+d)/2),l=f((b-d)/2),m=g((b-d)/2),n=f((d-b)/2),o=g((d-b)/2);switch(e){case"XYX":a.set(h*k,i*l,i*m,h*j);break;case"YZY":a.set(i*m,h*k,i*l,h*j);break;case"ZXZ":a.set(i*l,i*m,h*k,h*j);break;case"XZX":a.set(h*k,i*o,i*n,h*j);break;case"YXY":a.set(i*n,h*k,i*o,h*j);break;case"ZYZ":a.set(i*o,i*n,h*k,h*j);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+e)}}};class E{constructor(a=0,b=0){Object.defineProperty(this,"isVector2",{value:!0}),this.x=a,this.y=b}get width(){return this.x}set width(a){this.x=a}get height(){return this.y}set height(a){this.y=a}set(a,b){return this.x=a,this.y=b,this}setScalar(a){return this.x=a,this.y=a,this}setX(a){return this.x=a,this}setY(a){return this.y=a,this}setComponent(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;default:throw Error("index is out of range: "+a)}return this}getComponent(a){switch(a){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+a)}}clone(){return new this.constructor(this.x,this.y)}copy(a){return this.x=a.x,this.y=a.y,this}add(a,b){return void 0!==b?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b)):(this.x+=a.x,this.y+=a.y,this)}addScalar(a){return this.x+=a,this.y+=a,this}addVectors(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this}addScaledVector(a,b){return this.x+=a.x*b,this.y+=a.y*b,this}sub(a,b){return void 0!==b?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b)):(this.x-=a.x,this.y-=a.y,this)}subScalar(a){return this.x-=a,this.y-=a,this}subVectors(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this}multiply(a){return this.x*=a.x,this.y*=a.y,this}multiplyScalar(a){return this.x*=a,this.y*=a,this}divide(a){return this.x/=a.x,this.y/=a.y,this}divideScalar(a){return this.multiplyScalar(1/a)}applyMatrix3(a){let b=this.x,c=this.y,d=a.elements;return this.x=d[0]*b+d[3]*c+d[6],this.y=d[1]*b+d[4]*c+d[7],this}min(a){return this.x=Math.min(this.x,a.x),this.y=Math.min(this.y,a.y),this}max(a){return this.x=Math.max(this.x,a.x),this.y=Math.max(this.y,a.y),this}clamp(a,b){return this.x=Math.max(a.x,Math.min(b.x,this.x)),this.y=Math.max(a.y,Math.min(b.y,this.y)),this}clampScalar(a,b){return this.x=Math.max(a,Math.min(b,this.x)),this.y=Math.max(a,Math.min(b,this.y)),this}clampLength(a,b){let c=this.length();return this.divideScalar(c||1).multiplyScalar(Math.max(a,Math.min(b,c)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(a){return this.x*a.x+this.y*a.y}cross(a){return this.x*a.y-this.y*a.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){let a=Math.atan2(-this.y,-this.x)+Math.PI;return a}distanceTo(a){return Math.sqrt(this.distanceToSquared(a))}distanceToSquared(a){let b=this.x-a.x,c=this.y-a.y;return b*b+c*c}manhattanDistanceTo(a){return Math.abs(this.x-a.x)+Math.abs(this.y-a.y)}setLength(a){return this.normalize().multiplyScalar(a)}lerp(a,b){return this.x+=(a.x-this.x)*b,this.y+=(a.y-this.y)*b,this}lerpVectors(a,b,c){return this.x=a.x+(b.x-a.x)*c,this.y=a.y+(b.y-a.y)*c,this}equals(a){return a.x===this.x&&a.y===this.y}fromArray(a,b){return void 0===b&&(b=0),this.x=a[b],this.y=a[b+1],this}toArray(a,b){return void 0===a&&(a=[]),void 0===b&&(b=0),a[b]=this.x,a[b+1]=this.y,a}fromBufferAttribute(a,b,c){return void 0!==c&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=a.getX(b),this.y=a.getY(b),this}rotateAround(a,b){let c=Math.cos(b),d=Math.sin(b),e=this.x-a.x,f=this.y-a.y;return this.x=e*c-f*d+a.x,this.y=e*d+f*c+a.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}}class F{constructor(){Object.defineProperty(this,"isMatrix3",{value:!0}),this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(a,b,c,d,e,f,g,h,i){let j=this.elements;return j[0]=a,j[1]=d,j[2]=g,j[3]=b,j[4]=e,j[5]=h,j[6]=c,j[7]=f,j[8]=i,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}clone(){return new this.constructor().fromArray(this.elements)}copy(a){let b=this.elements,c=a.elements;return b[0]=c[0],b[1]=c[1],b[2]=c[2],b[3]=c[3],b[4]=c[4],b[5]=c[5],b[6]=c[6],b[7]=c[7],b[8]=c[8],this}extractBasis(a,b,c){return a.setFromMatrix3Column(this,0),b.setFromMatrix3Column(this,1),c.setFromMatrix3Column(this,2),this}setFromMatrix4(a){let b=a.elements;return this.set(b[0],b[4],b[8],b[1],b[5],b[9],b[2],b[6],b[10]),this}multiply(a){return this.multiplyMatrices(this,a)}premultiply(a){return this.multiplyMatrices(a,this)}multiplyMatrices(a,b){let c=a.elements,d=b.elements,e=this.elements,f=c[0],g=c[3],h=c[6],i=c[1],j=c[4],k=c[7],l=c[2],m=c[5],n=c[8],o=d[0],p=d[3],q=d[6],r=d[1],s=d[4],t=d[7],u=d[2],v=d[5],w=d[8];return e[0]=f*o+g*r+h*u,e[3]=f*p+g*s+h*v,e[6]=f*q+g*t+h*w,e[1]=i*o+j*r+k*u,e[4]=i*p+j*s+k*v,e[7]=i*q+j*t+k*w,e[2]=l*o+m*r+n*u,e[5]=l*p+m*s+n*v,e[8]=l*q+m*t+n*w,this}multiplyScalar(a){let b=this.elements;return b[0]*=a,b[3]*=a,b[6]*=a,b[1]*=a,b[4]*=a,b[7]*=a,b[2]*=a,b[5]*=a,b[8]*=a,this}determinant(){let a=this.elements,b=a[0],c=a[1],d=a[2],e=a[3],f=a[4],g=a[5],h=a[6],i=a[7],j=a[8];return b*f*j-b*g*i-c*e*j+c*g*h+d*e*i-d*f*h}getInverse(a,b){void 0!==b&&console.warn("THREE.Matrix3: .getInverse() can no longer be configured to throw on degenerate.");let c=a.elements,d=this.elements,e=c[0],f=c[1],g=c[2],h=c[3],i=c[4],j=c[5],k=c[6],l=c[7],m=c[8],n=m*i-j*l,o=j*k-m*h,p=l*h-i*k,q=e*n+f*o+g*p;if(0===q)return this.set(0,0,0,0,0,0,0,0,0);let r=1/q;return d[0]=n*r,d[1]=(g*l-m*f)*r,d[2]=(j*f-g*i)*r,d[3]=o*r,d[4]=(m*e-g*k)*r,d[5]=(g*h-j*e)*r,d[6]=p*r,d[7]=(f*k-l*e)*r,d[8]=(i*e-f*h)*r,this}transpose(){let a,b=this.elements;return a=b[1],b[1]=b[3],b[3]=a,a=b[2],b[2]=b[6],b[6]=a,a=b[5],b[5]=b[7],b[7]=a,this}getNormalMatrix(a){return this.setFromMatrix4(a).getInverse(this).transpose()}transposeIntoArray(a){let b=this.elements;return a[0]=b[0],a[1]=b[3],a[2]=b[6],a[3]=b[1],a[4]=b[4],a[5]=b[7],a[6]=b[2],a[7]=b[5],a[8]=b[8],this}setUvTransform(a,b,c,d,e,f,g){let h=Math.cos(e),i=Math.sin(e);this.set(c*h,c*i,-c*(h*f+i*g)+f+a,-d*i,d*h,-d*(-i*f+h*g)+g+b,0,0,1)}scale(a,b){let c=this.elements;return c[0]*=a,c[3]*=a,c[6]*=a,c[1]*=b,c[4]*=b,c[7]*=b,this}rotate(a){let b=Math.cos(a),c=Math.sin(a),d=this.elements,e=d[0],f=d[3],g=d[6],h=d[1],i=d[4],j=d[7];return d[0]=b*e+c*h,d[3]=b*f+c*i,d[6]=b*g+c*j,d[1]=-c*e+b*h,d[4]=-c*f+b*i,d[7]=-c*g+b*j,this}translate(a,b){let c=this.elements;return c[0]+=a*c[2],c[3]+=a*c[5],c[6]+=a*c[8],c[1]+=b*c[2],c[4]+=b*c[5],c[7]+=b*c[8],this}equals(a){let b=this.elements,c=a.elements;for(let d=0;d<9;d++)if(b[d]!==c[d])return!1;return!0}fromArray(a,b){void 0===b&&(b=0);for(let c=0;c<9;c++)this.elements[c]=a[c+b];return this}toArray(a,b){void 0===a&&(a=[]),void 0===b&&(b=0);let c=this.elements;return a[b]=c[0],a[b+1]=c[1],a[b+2]=c[2],a[b+3]=c[3],a[b+4]=c[4],a[b+5]=c[5],a[b+6]=c[6],a[b+7]=c[7],a[b+8]=c[8],a}}let G,H={getDataURL:function(a){if(/^data:/i.test(a.src)||"undefined"==typeof HTMLCanvasElement)return a.src;let b;if(a instanceof HTMLCanvasElement)b=a;else{void 0===G&&(G=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),G.width=a.width,G.height=a.height;let c=G.getContext("2d");a instanceof ImageData?c.putImageData(a,0,0):c.drawImage(a,0,0,a.width,a.height),b=G}return b.width>2048||b.height>2048?b.toDataURL("image/jpeg",.6):b.toDataURL("image/png")}},I=0;function J(a,b,c,d,e,f,g,h,i,k){Object.defineProperty(this,"id",{value:I++}),this.uuid=D.generateUUID(),this.name="",this.image=void 0!==a?a:J.DEFAULT_IMAGE,this.mipmaps=[],this.mapping=void 0!==b?b:J.DEFAULT_MAPPING,this.wrapS=void 0!==c?c:j,this.wrapT=void 0!==d?d:j,this.magFilter=void 0!==e?e:o,this.minFilter=void 0!==f?f:q,this.anisotropy=void 0!==i?i:1,this.format=void 0!==g?g:1023,this.internalFormat=null,this.type=void 0!==h?h:1009,this.offset=new E(0,0),this.repeat=new E(1,1),this.center=new E(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new F,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=void 0!==k?k:3e3,this.version=0,this.onUpdate=null}J.DEFAULT_IMAGE=void 0,J.DEFAULT_MAPPING=300,J.prototype=Object.assign(Object.create(z.prototype),{constructor:J,isTexture:!0,updateMatrix:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)},clone:function(){return new this.constructor().copy(this)},copy:function(a){return this.name=a.name,this.image=a.image,this.mipmaps=a.mipmaps.slice(0),this.mapping=a.mapping,this.wrapS=a.wrapS,this.wrapT=a.wrapT,this.magFilter=a.magFilter,this.minFilter=a.minFilter,this.anisotropy=a.anisotropy,this.format=a.format,this.internalFormat=a.internalFormat,this.type=a.type,this.offset.copy(a.offset),this.repeat.copy(a.repeat),this.center.copy(a.center),this.rotation=a.rotation,this.matrixAutoUpdate=a.matrixAutoUpdate,this.matrix.copy(a.matrix),this.generateMipmaps=a.generateMipmaps,this.premultiplyAlpha=a.premultiplyAlpha,this.flipY=a.flipY,this.unpackAlignment=a.unpackAlignment,this.encoding=a.encoding,this},toJSON:function(a){let b=void 0===a||"string"==typeof a;if(!b&& void 0!==a.textures[this.uuid])return a.textures[this.uuid];let c={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){let d=this.image;if(void 0===d.uuid&&(d.uuid=D.generateUUID()),!b&& void 0===a.images[d.uuid]){let e;if(Array.isArray(d)){e=[];for(let f=0,g=d.length;f<g;f++)e.push(H.getDataURL(d[f]))}else e=H.getDataURL(d);a.images[d.uuid]={uuid:d.uuid,url:e}}c.image=d.uuid}return b||(a.textures[this.uuid]=c),c},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(a){if(300!==this.mapping)return a;if(a.applyMatrix3(this.matrix),a.x<0||a.x>1)switch(this.wrapS){case i:a.x=a.x-Math.floor(a.x);break;case j:a.x=a.x<0?0:1;break;case k:1===Math.abs(Math.floor(a.x)%2)?a.x=Math.ceil(a.x)-a.x:a.x=a.x-Math.floor(a.x)}if(a.y<0||a.y>1)switch(this.wrapT){case i:a.y=a.y-Math.floor(a.y);break;case j:a.y=a.y<0?0:1;break;case k:1===Math.abs(Math.floor(a.y)%2)?a.y=Math.ceil(a.y)-a.y:a.y=a.y-Math.floor(a.y)}return this.flipY&&(a.y=1-a.y),a}}),Object.defineProperty(J.prototype,"needsUpdate",{set:function(a){!0===a&&this.version++}});class K{constructor(a=0,b=0,c=0,d=1){Object.defineProperty(this,"isVector4",{value:!0}),this.x=a,this.y=b,this.z=c,this.w=d}get width(){return this.z}set width(a){this.z=a}get height(){return this.w}set height(a){this.w=a}set(a,b,c,d){return this.x=a,this.y=b,this.z=c,this.w=d,this}setScalar(a){return this.x=a,this.y=a,this.z=a,this.w=a,this}setX(a){return this.x=a,this}setY(a){return this.y=a,this}setZ(a){return this.z=a,this}setW(a){return this.w=a,this}setComponent(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;case 3:this.w=b;break;default:throw Error("index is out of range: "+a)}return this}getComponent(a){switch(a){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+a)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(a){return this.x=a.x,this.y=a.y,this.z=a.z,this.w=void 0!==a.w?a.w:1,this}add(a,b){return void 0!==b?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b)):(this.x+=a.x,this.y+=a.y,this.z+=a.z,this.w+=a.w,this)}addScalar(a){return this.x+=a,this.y+=a,this.z+=a,this.w+=a,this}addVectors(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this.z=a.z+b.z,this.w=a.w+b.w,this}addScaledVector(a,b){return this.x+=a.x*b,this.y+=a.y*b,this.z+=a.z*b,this.w+=a.w*b,this}sub(a,b){return void 0!==b?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b)):(this.x-=a.x,this.y-=a.y,this.z-=a.z,this.w-=a.w,this)}subScalar(a){return this.x-=a,this.y-=a,this.z-=a,this.w-=a,this}subVectors(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this.z=a.z-b.z,this.w=a.w-b.w,this}multiplyScalar(a){return this.x*=a,this.y*=a,this.z*=a,this.w*=a,this}applyMatrix4(a){let b=this.x,c=this.y,d=this.z,e=this.w,f=a.elements;return this.x=f[0]*b+f[4]*c+f[8]*d+f[12]*e,this.y=f[1]*b+f[5]*c+f[9]*d+f[13]*e,this.z=f[2]*b+f[6]*c+f[10]*d+f[14]*e,this.w=f[3]*b+f[7]*c+f[11]*d+f[15]*e,this}divideScalar(a){return this.multiplyScalar(1/a)}setAxisAngleFromQuaternion(a){this.w=2*Math.acos(a.w);let b=Math.sqrt(1-a.w*a.w);return b<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=a.x/b,this.y=a.y/b,this.z=a.z/b),this}setAxisAngleFromRotationMatrix(a){let b,c,d,e,f=a.elements,g=f[0],h=f[4],i=f[8],j=f[1],k=f[5],l=f[9],m=f[2],n=f[6],o=f[10];if(.01>Math.abs(h-j)&&.01>Math.abs(i-m)&&.01>Math.abs(l-n)){if(.1>Math.abs(h+j)&&.1>Math.abs(i+m)&&.1>Math.abs(l+n)&&.1>Math.abs(g+k+o-3))return this.set(1,0,0,0),this;b=Math.PI;let p=(g+1)/2,q=(k+1)/2,r=(o+1)/2,s=(h+j)/4,t=(i+m)/4,u=(l+n)/4;return p>q&&p>r?p<.01?(c=0,d=.707106781,e=.707106781):(c=Math.sqrt(p),d=s/c,e=t/c):q>r?q<.01?(c=.707106781,d=0,e=.707106781):(d=Math.sqrt(q),c=s/d,e=u/d):r<.01?(c=.707106781,d=.707106781,e=0):(e=Math.sqrt(r),c=t/e,d=u/e),this.set(c,d,e,b),this}let v=Math.sqrt((n-l)*(n-l)+(i-m)*(i-m)+(j-h)*(j-h));return .001>Math.abs(v)&&(v=1),this.x=(n-l)/v,this.y=(i-m)/v,this.z=(j-h)/v,this.w=Math.acos((g+k+o-1)/2),this}min(a){return this.x=Math.min(this.x,a.x),this.y=Math.min(this.y,a.y),this.z=Math.min(this.z,a.z),this.w=Math.min(this.w,a.w),this}max(a){return this.x=Math.max(this.x,a.x),this.y=Math.max(this.y,a.y),this.z=Math.max(this.z,a.z),this.w=Math.max(this.w,a.w),this}clamp(a,b){return this.x=Math.max(a.x,Math.min(b.x,this.x)),this.y=Math.max(a.y,Math.min(b.y,this.y)),this.z=Math.max(a.z,Math.min(b.z,this.z)),this.w=Math.max(a.w,Math.min(b.w,this.w)),this}clampScalar(a,b){return this.x=Math.max(a,Math.min(b,this.x)),this.y=Math.max(a,Math.min(b,this.y)),this.z=Math.max(a,Math.min(b,this.z)),this.w=Math.max(a,Math.min(b,this.w)),this}clampLength(a,b){let c=this.length();return this.divideScalar(c||1).multiplyScalar(Math.max(a,Math.min(b,c)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(a){return this.normalize().multiplyScalar(a)}lerp(a,b){return this.x+=(a.x-this.x)*b,this.y+=(a.y-this.y)*b,this.z+=(a.z-this.z)*b,this.w+=(a.w-this.w)*b,this}lerpVectors(a,b,c){return this.x=a.x+(b.x-a.x)*c,this.y=a.y+(b.y-a.y)*c,this.z=a.z+(b.z-a.z)*c,this.w=a.w+(b.w-a.w)*c,this}equals(a){return a.x===this.x&&a.y===this.y&&a.z===this.z&&a.w===this.w}fromArray(a,b){return void 0===b&&(b=0),this.x=a[b],this.y=a[b+1],this.z=a[b+2],this.w=a[b+3],this}toArray(a,b){return void 0===a&&(a=[]),void 0===b&&(b=0),a[b]=this.x,a[b+1]=this.y,a[b+2]=this.z,a[b+3]=this.w,a}fromBufferAttribute(a,b,c){return void 0!==c&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=a.getX(b),this.y=a.getY(b),this.z=a.getZ(b),this.w=a.getW(b),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}}function L(a,b,c){this.width=a,this.height=b,this.scissor=new K(0,0,a,b),this.scissorTest=!1,this.viewport=new K(0,0,a,b),c=c||{},this.texture=new J(void 0,c.mapping,c.wrapS,c.wrapT,c.magFilter,c.minFilter,c.format,c.type,c.anisotropy,c.encoding),this.texture.image={},this.texture.image.width=a,this.texture.image.height=b,this.texture.generateMipmaps=void 0!==c.generateMipmaps&&c.generateMipmaps,this.texture.minFilter=void 0!==c.minFilter?c.minFilter:o,this.depthBuffer=void 0===c.depthBuffer||c.depthBuffer,this.stencilBuffer=void 0!==c.stencilBuffer&&c.stencilBuffer,this.depthTexture=void 0!==c.depthTexture?c.depthTexture:null}function M(a,b,c){L.call(this,a,b,c),this.samples=4}L.prototype=Object.assign(Object.create(z.prototype),{constructor:L,isWebGLRenderTarget:!0,setSize:function(a,b){(this.width!==a||this.height!==b)&&(this.width=a,this.height=b,this.texture.image.width=a,this.texture.image.height=b,this.dispose()),this.viewport.set(0,0,a,b),this.scissor.set(0,0,a,b)},clone:function(){return new this.constructor().copy(this)},copy:function(a){return this.width=a.width,this.height=a.height,this.viewport.copy(a.viewport),this.texture=a.texture.clone(),this.depthBuffer=a.depthBuffer,this.stencilBuffer=a.stencilBuffer,this.depthTexture=a.depthTexture,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),M.prototype=Object.assign(Object.create(L.prototype),{constructor:M,isWebGLMultisampleRenderTarget:!0,copy:function(a){return L.prototype.copy.call(this,a),this.samples=a.samples,this}});class N{constructor(a=0,b=0,c=0,d=1){Object.defineProperty(this,"isQuaternion",{value:!0}),this._x=a,this._y=b,this._z=c,this._w=d}static slerp(a,b,c,d){return c.copy(a).slerp(b,d)}static slerpFlat(a,b,c,d,e,f,g){let h=c[d+0],i=c[d+1],j=c[d+2],k=c[d+3],l=e[f+0],m=e[f+1],n=e[f+2],o=e[f+3];if(k!==o||h!==l||i!==m||j!==n){let p=1-g,q=h*l+i*m+j*n+k*o,r=q>=0?1:-1,s=1-q*q;if(s>Number.EPSILON){let t=Math.sqrt(s),u=Math.atan2(t,q*r);p=Math.sin(p*u)/t,g=Math.sin(g*u)/t}let v=g*r;if(h=h*p+l*v,i=i*p+m*v,j=j*p+n*v,k=k*p+o*v,p===1-g){let w=1/Math.sqrt(h*h+i*i+j*j+k*k);h*=w,i*=w,j*=w,k*=w}}a[b]=h,a[b+1]=i,a[b+2]=j,a[b+3]=k}static multiplyQuaternionsFlat(a,b,c,d,e,f){let g=c[d],h=c[d+1],i=c[d+2],j=c[d+3],k=e[f],l=e[f+1],m=e[f+2],n=e[f+3];return a[b]=g*n+j*k+h*m-i*l,a[b+1]=h*n+j*l+i*k-g*m,a[b+2]=i*n+j*m+g*l-h*k,a[b+3]=j*n-g*k-h*l-i*m,a}get x(){return this._x}set x(a){this._x=a,this._onChangeCallback()}get y(){return this._y}set y(a){this._y=a,this._onChangeCallback()}get z(){return this._z}set z(a){this._z=a,this._onChangeCallback()}get w(){return this._w}set w(a){this._w=a,this._onChangeCallback()}set(a,b,c,d){return this._x=a,this._y=b,this._z=c,this._w=d,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(a){return this._x=a.x,this._y=a.y,this._z=a.z,this._w=a.w,this._onChangeCallback(),this}setFromEuler(a,b){if(!(a&&a.isEuler))throw Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");let c=a._x,d=a._y,e=a._z,f=a._order,g=Math.cos,h=Math.sin,i=g(c/2),j=g(d/2),k=g(e/2),l=h(c/2),m=h(d/2),n=h(e/2);switch(f){case"XYZ":this._x=l*j*k+i*m*n,this._y=i*m*k-l*j*n,this._z=i*j*n+l*m*k,this._w=i*j*k-l*m*n;break;case"YXZ":this._x=l*j*k+i*m*n,this._y=i*m*k-l*j*n,this._z=i*j*n-l*m*k,this._w=i*j*k+l*m*n;break;case"ZXY":this._x=l*j*k-i*m*n,this._y=i*m*k+l*j*n,this._z=i*j*n+l*m*k,this._w=i*j*k-l*m*n;break;case"ZYX":this._x=l*j*k-i*m*n,this._y=i*m*k+l*j*n,this._z=i*j*n-l*m*k,this._w=i*j*k+l*m*n;break;case"YZX":this._x=l*j*k+i*m*n,this._y=i*m*k+l*j*n,this._z=i*j*n-l*m*k,this._w=i*j*k-l*m*n;break;case"XZY":this._x=l*j*k-i*m*n,this._y=i*m*k-l*j*n,this._z=i*j*n+l*m*k,this._w=i*j*k+l*m*n;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+f)}return!1!==b&&this._onChangeCallback(),this}setFromAxisAngle(a,b){let c=b/2,d=Math.sin(c);return this._x=a.x*d,this._y=a.y*d,this._z=a.z*d,this._w=Math.cos(c),this._onChangeCallback(),this}setFromRotationMatrix(a){let b=a.elements,c=b[0],d=b[4],e=b[8],f=b[1],g=b[5],h=b[9],i=b[2],j=b[6],k=b[10],l=c+g+k;if(l>0){let m=.5/Math.sqrt(l+1);this._w=.25/m,this._x=(j-h)*m,this._y=(e-i)*m,this._z=(f-d)*m}else if(c>g&&c>k){let n=2*Math.sqrt(1+c-g-k);this._w=(j-h)/n,this._x=.25*n,this._y=(d+f)/n,this._z=(e+i)/n}else if(g>k){let o=2*Math.sqrt(1+g-c-k);this._w=(e-i)/o,this._x=(d+f)/o,this._y=.25*o,this._z=(h+j)/o}else{let p=2*Math.sqrt(1+k-c-g);this._w=(f-d)/p,this._x=(e+i)/p,this._y=(h+j)/p,this._z=.25*p}return this._onChangeCallback(),this}setFromUnitVectors(a,b){let c=a.dot(b)+1;return c<1e-6?(c=0,Math.abs(a.x)>Math.abs(a.z)?(this._x=-a.y,this._y=a.x,this._z=0,this._w=c):(this._x=0,this._y=-a.z,this._z=a.y,this._w=c)):(this._x=a.y*b.z-a.z*b.y,this._y=a.z*b.x-a.x*b.z,this._z=a.x*b.y-a.y*b.x,this._w=c),this.normalize()}angleTo(a){return 2*Math.acos(Math.abs(D.clamp(this.dot(a),-1,1)))}rotateTowards(a,b){let c=this.angleTo(a);if(0===c)return this;let d=Math.min(1,b/c);return this.slerp(a,d),this}identity(){return this.set(0,0,0,1)}inverse(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(a){return this._x*a._x+this._y*a._y+this._z*a._z+this._w*a._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let a=this.length();return 0===a?(this._x=0,this._y=0,this._z=0,this._w=1):(a=1/a,this._x=this._x*a,this._y=this._y*a,this._z=this._z*a,this._w=this._w*a),this._onChangeCallback(),this}multiply(a,b){return void 0!==b?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(a,b)):this.multiplyQuaternions(this,a)}premultiply(a){return this.multiplyQuaternions(a,this)}multiplyQuaternions(a,b){let c=a._x,d=a._y,e=a._z,f=a._w,g=b._x,h=b._y,i=b._z,j=b._w;return this._x=c*j+f*g+d*i-e*h,this._y=d*j+f*h+e*g-c*i,this._z=e*j+f*i+c*h-d*g,this._w=f*j-c*g-d*h-e*i,this._onChangeCallback(),this}slerp(a,b){if(0===b)return this;if(1===b)return this.copy(a);let c=this._x,d=this._y,e=this._z,f=this._w,g=f*a._w+c*a._x+d*a._y+e*a._z;if(g<0?(this._w=-a._w,this._x=-a._x,this._y=-a._y,this._z=-a._z,g=-g):this.copy(a),g>=1)return this._w=f,this._x=c,this._y=d,this._z=e,this;let h=1-g*g;if(h<=Number.EPSILON){let i=1-b;return this._w=i*f+b*this._w,this._x=i*c+b*this._x,this._y=i*d+b*this._y,this._z=i*e+b*this._z,this.normalize(),this._onChangeCallback(),this}let j=Math.sqrt(h),k=Math.atan2(j,g),l=Math.sin((1-b)*k)/j,m=Math.sin(b*k)/j;return this._w=f*l+this._w*m,this._x=c*l+this._x*m,this._y=d*l+this._y*m,this._z=e*l+this._z*m,this._onChangeCallback(),this}equals(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._w===this._w}fromArray(a,b){return void 0===b&&(b=0),this._x=a[b],this._y=a[b+1],this._z=a[b+2],this._w=a[b+3],this._onChangeCallback(),this}toArray(a,b){return void 0===a&&(a=[]),void 0===b&&(b=0),a[b]=this._x,a[b+1]=this._y,a[b+2]=this._z,a[b+3]=this._w,a}fromBufferAttribute(a,b){return this._x=a.getX(b),this._y=a.getY(b),this._z=a.getZ(b),this._w=a.getW(b),this}_onChange(a){return this._onChangeCallback=a,this}_onChangeCallback(){}}class O{constructor(a=0,b=0,c=0){Object.defineProperty(this,"isVector3",{value:!0}),this.x=a,this.y=b,this.z=c}set(a,b,c){return void 0===c&&(c=this.z),this.x=a,this.y=b,this.z=c,this}setScalar(a){return this.x=a,this.y=a,this.z=a,this}setX(a){return this.x=a,this}setY(a){return this.y=a,this}setZ(a){return this.z=a,this}setComponent(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;default:throw Error("index is out of range: "+a)}return this}getComponent(a){switch(a){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+a)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(a){return this.x=a.x,this.y=a.y,this.z=a.z,this}add(a,b){return void 0!==b?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b)):(this.x+=a.x,this.y+=a.y,this.z+=a.z,this)}addScalar(a){return this.x+=a,this.y+=a,this.z+=a,this}addVectors(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this.z=a.z+b.z,this}addScaledVector(a,b){return this.x+=a.x*b,this.y+=a.y*b,this.z+=a.z*b,this}sub(a,b){return void 0!==b?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b)):(this.x-=a.x,this.y-=a.y,this.z-=a.z,this)}subScalar(a){return this.x-=a,this.y-=a,this.z-=a,this}subVectors(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this.z=a.z-b.z,this}multiply(a,b){return void 0!==b?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(a,b)):(this.x*=a.x,this.y*=a.y,this.z*=a.z,this)}multiplyScalar(a){return this.x*=a,this.y*=a,this.z*=a,this}multiplyVectors(a,b){return this.x=a.x*b.x,this.y=a.y*b.y,this.z=a.z*b.z,this}applyEuler(a){return a&&a.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(Q.setFromEuler(a))}applyAxisAngle(a,b){return this.applyQuaternion(Q.setFromAxisAngle(a,b))}applyMatrix3(a){let b=this.x,c=this.y,d=this.z,e=a.elements;return this.x=e[0]*b+e[3]*c+e[6]*d,this.y=e[1]*b+e[4]*c+e[7]*d,this.z=e[2]*b+e[5]*c+e[8]*d,this}applyNormalMatrix(a){return this.applyMatrix3(a).normalize()}applyMatrix4(a){let b=this.x,c=this.y,d=this.z,e=a.elements,f=1/(e[3]*b+e[7]*c+e[11]*d+e[15]);return this.x=(e[0]*b+e[4]*c+e[8]*d+e[12])*f,this.y=(e[1]*b+e[5]*c+e[9]*d+e[13])*f,this.z=(e[2]*b+e[6]*c+e[10]*d+e[14])*f,this}applyQuaternion(a){let b=this.x,c=this.y,d=this.z,e=a.x,f=a.y,g=a.z,h=a.w,i=h*b+f*d-g*c,j=h*c+g*b-e*d,k=h*d+e*c-f*b,l=-e*b-f*c-g*d;return this.x=i*h+ -(l*e)+ -(j*g)- -(k*f),this.y=j*h+ -(l*f)+ -(k*e)- -(i*g),this.z=k*h+ -(l*g)+ -(i*f)- -(j*e),this}project(a){return this.applyMatrix4(a.matrixWorldInverse).applyMatrix4(a.projectionMatrix)}unproject(a){return this.applyMatrix4(a.projectionMatrixInverse).applyMatrix4(a.matrixWorld)}transformDirection(a){let b=this.x,c=this.y,d=this.z,e=a.elements;return this.x=e[0]*b+e[4]*c+e[8]*d,this.y=e[1]*b+e[5]*c+e[9]*d,this.z=e[2]*b+e[6]*c+e[10]*d,this.normalize()}divide(a){return this.x/=a.x,this.y/=a.y,this.z/=a.z,this}divideScalar(a){return this.multiplyScalar(1/a)}min(a){return this.x=Math.min(this.x,a.x),this.y=Math.min(this.y,a.y),this.z=Math.min(this.z,a.z),this}max(a){return this.x=Math.max(this.x,a.x),this.y=Math.max(this.y,a.y),this.z=Math.max(this.z,a.z),this}clamp(a,b){return this.x=Math.max(a.x,Math.min(b.x,this.x)),this.y=Math.max(a.y,Math.min(b.y,this.y)),this.z=Math.max(a.z,Math.min(b.z,this.z)),this}clampScalar(a,b){return this.x=Math.max(a,Math.min(b,this.x)),this.y=Math.max(a,Math.min(b,this.y)),this.z=Math.max(a,Math.min(b,this.z)),this}clampLength(a,b){let c=this.length();return this.divideScalar(c||1).multiplyScalar(Math.max(a,Math.min(b,c)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(a){return this.x*a.x+this.y*a.y+this.z*a.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(a){return this.normalize().multiplyScalar(a)}lerp(a,b){return this.x+=(a.x-this.x)*b,this.y+=(a.y-this.y)*b,this.z+=(a.z-this.z)*b,this}lerpVectors(a,b,c){return this.x=a.x+(b.x-a.x)*c,this.y=a.y+(b.y-a.y)*c,this.z=a.z+(b.z-a.z)*c,this}cross(a,b){return void 0!==b?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(a,b)):this.crossVectors(this,a)}crossVectors(a,b){let c=a.x,d=a.y,e=a.z,f=b.x,g=b.y,h=b.z;return this.x=d*h-e*g,this.y=e*f-c*h,this.z=c*g-d*f,this}projectOnVector(a){let b=a.lengthSq();if(0===b)return this.set(0,0,0);let c=a.dot(this)/b;return this.copy(a).multiplyScalar(c)}projectOnPlane(a){return P.copy(this).projectOnVector(a),this.sub(P)}reflect(a){return this.sub(P.copy(a).multiplyScalar(2*this.dot(a)))}angleTo(a){let b=Math.sqrt(this.lengthSq()*a.lengthSq());if(0===b)return Math.PI/2;let c=this.dot(a)/b;return Math.acos(D.clamp(c,-1,1))}distanceTo(a){return Math.sqrt(this.distanceToSquared(a))}distanceToSquared(a){let b=this.x-a.x,c=this.y-a.y,d=this.z-a.z;return b*b+c*c+d*d}manhattanDistanceTo(a){return Math.abs(this.x-a.x)+Math.abs(this.y-a.y)+Math.abs(this.z-a.z)}setFromSpherical(a){return this.setFromSphericalCoords(a.radius,a.phi,a.theta)}setFromSphericalCoords(a,b,c){let d=Math.sin(b)*a;return this.x=d*Math.sin(c),this.y=Math.cos(b)*a,this.z=d*Math.cos(c),this}setFromCylindrical(a){return this.setFromCylindricalCoords(a.radius,a.theta,a.y)}setFromCylindricalCoords(a,b,c){return this.x=a*Math.sin(b),this.y=c,this.z=a*Math.cos(b),this}setFromMatrixPosition(a){let b=a.elements;return this.x=b[12],this.y=b[13],this.z=b[14],this}setFromMatrixScale(a){let b=this.setFromMatrixColumn(a,0).length(),c=this.setFromMatrixColumn(a,1).length(),d=this.setFromMatrixColumn(a,2).length();return this.x=b,this.y=c,this.z=d,this}setFromMatrixColumn(a,b){return this.fromArray(a.elements,4*b)}setFromMatrix3Column(a,b){return this.fromArray(a.elements,3*b)}equals(a){return a.x===this.x&&a.y===this.y&&a.z===this.z}fromArray(a,b){return void 0===b&&(b=0),this.x=a[b],this.y=a[b+1],this.z=a[b+2],this}toArray(a,b){return void 0===a&&(a=[]),void 0===b&&(b=0),a[b]=this.x,a[b+1]=this.y,a[b+2]=this.z,a}fromBufferAttribute(a,b,c){return void 0!==c&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=a.getX(b),this.y=a.getY(b),this.z=a.getZ(b),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}}let P=new O,Q=new N;class R{constructor(a,b){Object.defineProperty(this,"isBox3",{value:!0}),this.min=void 0!==a?a:new O(Infinity,Infinity,Infinity),this.max=void 0!==b?b:new O(-1/0,-1/0,-1/0)}set(a,b){return this.min.copy(a),this.max.copy(b),this}setFromArray(a){let b=Infinity,c=Infinity,d=Infinity,e=-1/0,f=-1/0,g=-1/0;for(let h=0,i=a.length;h<i;h+=3){let j=a[h],k=a[h+1],l=a[h+2];j<b&&(b=j),k<c&&(c=k),l<d&&(d=l),j>e&&(e=j),k>f&&(f=k),l>g&&(g=l)}return this.min.set(b,c,d),this.max.set(e,f,g),this}setFromBufferAttribute(a){let b=Infinity,c=Infinity,d=Infinity,e=-1/0,f=-1/0,g=-1/0;for(let h=0,i=a.count;h<i;h++){let j=a.getX(h),k=a.getY(h),l=a.getZ(h);j<b&&(b=j),k<c&&(c=k),l<d&&(d=l),j>e&&(e=j),k>f&&(f=k),l>g&&(g=l)}return this.min.set(b,c,d),this.max.set(e,f,g),this}setFromPoints(a){this.makeEmpty();for(let b=0,c=a.length;b<c;b++)this.expandByPoint(a[b]);return this}setFromCenterAndSize(a,b){let c=U.copy(b).multiplyScalar(.5);return this.min.copy(a).sub(c),this.max.copy(a).add(c),this}setFromObject(a){return this.makeEmpty(),this.expandByObject(a)}clone(){return new this.constructor().copy(this)}copy(a){return this.min.copy(a.min),this.max.copy(a.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=Infinity,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(a){return void 0===a&&(console.warn("THREE.Box3: .getCenter() target is now required"),a=new O),this.isEmpty()?a.set(0,0,0):a.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(a){return void 0===a&&(console.warn("THREE.Box3: .getSize() target is now required"),a=new O),this.isEmpty()?a.set(0,0,0):a.subVectors(this.max,this.min)}expandByPoint(a){return this.min.min(a),this.max.max(a),this}expandByVector(a){return this.min.sub(a),this.max.add(a),this}expandByScalar(a){return this.min.addScalar(-a),this.max.addScalar(a),this}expandByObject(a){a.updateWorldMatrix(!1,!1);let b=a.geometry;void 0!==b&&(null===b.boundingBox&&b.computeBoundingBox(),V.copy(b.boundingBox),V.applyMatrix4(a.matrixWorld),this.union(V));let c=a.children;for(let d=0,e=c.length;d<e;d++)this.expandByObject(c[d]);return this}containsPoint(a){return!(a.x<this.min.x)&&!(a.x>this.max.x)&&!(a.y<this.min.y)&&!(a.y>this.max.y)&&!(a.z<this.min.z)&&!(a.z>this.max.z)}containsBox(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y&&this.min.z<=a.min.z&&a.max.z<=this.max.z}getParameter(a,b){return void 0===b&&(console.warn("THREE.Box3: .getParameter() target is now required"),b=new O),b.set((a.x-this.min.x)/(this.max.x-this.min.x),(a.y-this.min.y)/(this.max.y-this.min.y),(a.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(a){return!(a.max.x<this.min.x)&&!(a.min.x>this.max.x)&&!(a.max.y<this.min.y)&&!(a.min.y>this.max.y)&&!(a.max.z<this.min.z)&&!(a.min.z>this.max.z)}intersectsSphere(a){return this.clampPoint(a.center,U),U.distanceToSquared(a.center)<=a.radius*a.radius}intersectsPlane(a){let b,c;return a.normal.x>0?(b=a.normal.x*this.min.x,c=a.normal.x*this.max.x):(b=a.normal.x*this.max.x,c=a.normal.x*this.min.x),a.normal.y>0?(b+=a.normal.y*this.min.y,c+=a.normal.y*this.max.y):(b+=a.normal.y*this.max.y,c+=a.normal.y*this.min.y),a.normal.z>0?(b+=a.normal.z*this.min.z,c+=a.normal.z*this.max.z):(b+=a.normal.z*this.max.z,c+=a.normal.z*this.min.z),b<= -a.constant&&c>= -a.constant}intersectsTriangle(a){if(this.isEmpty())return!1;this.getCenter(aa),ab.subVectors(this.max,aa),W.subVectors(a.a,aa),X.subVectors(a.b,aa),Y.subVectors(a.c,aa),Z.subVectors(X,W),$.subVectors(Y,X),_.subVectors(W,Y);let b=[0,-Z.z,Z.y,0,-$.z,$.y,0,-_.z,_.y,Z.z,0,-Z.x,$.z,0,-$.x,_.z,0,-_.x,-Z.y,Z.x,0,-$.y,$.x,0,-_.y,_.x,0];return!!(S(b,W,X,Y,ab)&&S(b=[1,0,0,0,1,0,0,0,1],W,X,Y,ab))&&(ac.crossVectors(Z,$),S(b=[ac.x,ac.y,ac.z],W,X,Y,ab))}clampPoint(a,b){return void 0===b&&(console.warn("THREE.Box3: .clampPoint() target is now required"),b=new O),b.copy(a).clamp(this.min,this.max)}distanceToPoint(a){let b=U.copy(a).clamp(this.min,this.max);return b.sub(a).length()}getBoundingSphere(a){return void 0===a&&console.error("THREE.Box3: .getBoundingSphere() target is now required"),this.getCenter(a.center),a.radius=.5*this.getSize(U).length(),a}intersect(a){return this.min.max(a.min),this.max.min(a.max),this.isEmpty()&&this.makeEmpty(),this}union(a){return this.min.min(a.min),this.max.max(a.max),this}applyMatrix4(a){return this.isEmpty()||(T[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(a),T[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(a),T[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(a),T[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(a),T[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(a),T[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(a),T[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(a),T[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(a),this.setFromPoints(T)),this}translate(a){return this.min.add(a),this.max.add(a),this}equals(a){return a.min.equals(this.min)&&a.max.equals(this.max)}}function S(a,b,c,d,e){for(let f=0,g=a.length-3;f<=g;f+=3){ad.fromArray(a,f);let h=e.x*Math.abs(ad.x)+e.y*Math.abs(ad.y)+e.z*Math.abs(ad.z),i=b.dot(ad),j=c.dot(ad),k=d.dot(ad);if(Math.max(-Math.max(i,j,k),Math.min(i,j,k))>h)return!1}return!0}let T=[new O,new O,new O,new O,new O,new O,new O,new O],U=new O,V=new R,W=new O,X=new O,Y=new O,Z=new O,$=new O,_=new O,aa=new O,ab=new O,ac=new O,ad=new O,ae=new R;class af{constructor(a,b){this.center=void 0!==a?a:new O,this.radius=void 0!==b?b:-1}set(a,b){return this.center.copy(a),this.radius=b,this}setFromPoints(a,b){let c=this.center;void 0!==b?c.copy(b):ae.setFromPoints(a).getCenter(c);let d=0;for(let e=0,f=a.length;e<f;e++)d=Math.max(d,c.distanceToSquared(a[e]));return this.radius=Math.sqrt(d),this}clone(){return new this.constructor().copy(this)}copy(a){return this.center.copy(a.center),this.radius=a.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(a){return a.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(a){return a.distanceTo(this.center)-this.radius}intersectsSphere(a){let b=this.radius+a.radius;return a.center.distanceToSquared(this.center)<=b*b}intersectsBox(a){return a.intersectsSphere(this)}intersectsPlane(a){return Math.abs(a.distanceToPoint(this.center))<=this.radius}clampPoint(a,b){let c=this.center.distanceToSquared(a);return void 0===b&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),b=new O),b.copy(a),c>this.radius*this.radius&&(b.sub(this.center).normalize(),b.multiplyScalar(this.radius).add(this.center)),b}getBoundingBox(a){return(void 0===a&&(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),a=new R),this.isEmpty())?(a.makeEmpty(),a):(a.set(this.center,this.center),a.expandByScalar(this.radius),a)}applyMatrix4(a){return this.center.applyMatrix4(a),this.radius=this.radius*a.getMaxScaleOnAxis(),this}translate(a){return this.center.add(a),this}equals(a){return a.center.equals(this.center)&&a.radius===this.radius}}let ag=new O,ah=new O,ai=new O,aj=new O,ak=new O,al=new O,am=new O;class an{constructor(a,b){this.origin=void 0!==a?a:new O,this.direction=void 0!==b?b:new O(0,0,-1)}set(a,b){return this.origin.copy(a),this.direction.copy(b),this}clone(){return new this.constructor().copy(this)}copy(a){return this.origin.copy(a.origin),this.direction.copy(a.direction),this}at(a,b){return void 0===b&&(console.warn("THREE.Ray: .at() target is now required"),b=new O),b.copy(this.direction).multiplyScalar(a).add(this.origin)}lookAt(a){return this.direction.copy(a).sub(this.origin).normalize(),this}recast(a){return this.origin.copy(this.at(a,ag)),this}closestPointToPoint(a,b){void 0===b&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),b=new O),b.subVectors(a,this.origin);let c=b.dot(this.direction);return c<0?b.copy(this.origin):b.copy(this.direction).multiplyScalar(c).add(this.origin)}distanceToPoint(a){return Math.sqrt(this.distanceSqToPoint(a))}distanceSqToPoint(a){let b=ag.subVectors(a,this.origin).dot(this.direction);return b<0?this.origin.distanceToSquared(a):(ag.copy(this.direction).multiplyScalar(b).add(this.origin),ag.distanceToSquared(a))}distanceSqToSegment(a,b,c,d){ah.copy(a).add(b).multiplyScalar(.5),ai.copy(b).sub(a).normalize(),aj.copy(this.origin).sub(ah);let e=.5*a.distanceTo(b),f=-this.direction.dot(ai),g=aj.dot(this.direction),h=-aj.dot(ai),i=aj.lengthSq(),j=Math.abs(1-f*f),k,l,m,n;if(j>0){if(k=f*h-g,l=f*g-h,n=e*j,k>=0){if(l>= -n){if(l<=n){let o=1/j;k*=o,l*=o,m=k*(k+f*l+2*g)+l*(f*k+l+2*h)+i}else m=-(k=Math.max(0,-(f*(l=e)+g)))*k+l*(l+2*h)+i}else m=-(k=Math.max(0,-(f*(l=-e)+g)))*k+l*(l+2*h)+i}else l<= -n?(l=(k=Math.max(0,-(-f*e+g)))>0?-e:Math.min(Math.max(-e,-h),e),m=-k*k+l*(l+2*h)+i):l<=n?(k=0,m=(l=Math.min(Math.max(-e,-h),e))*(l+2*h)+i):(l=(k=Math.max(0,-(f*e+g)))>0?e:Math.min(Math.max(-e,-h),e),m=-k*k+l*(l+2*h)+i)}else l=f>0?-e:e,k=Math.max(0,-(f*l+g)),m=-k*k+l*(l+2*h)+i;return c&&c.copy(this.direction).multiplyScalar(k).add(this.origin),d&&d.copy(ai).multiplyScalar(l).add(ah),m}intersectSphere(a,b){ag.subVectors(a.center,this.origin);let c=ag.dot(this.direction),d=ag.dot(ag)-c*c,e=a.radius*a.radius;if(d>e)return null;let f=Math.sqrt(e-d),g=c-f,h=c+f;return g<0&&h<0?null:g<0?this.at(h,b):this.at(g,b)}intersectsSphere(a){return this.distanceSqToPoint(a.center)<=a.radius*a.radius}distanceToPlane(a){let b=a.normal.dot(this.direction);if(0===b)return 0===a.distanceToPoint(this.origin)?0:null;let c=-(this.origin.dot(a.normal)+a.constant)/b;return c>=0?c:null}intersectPlane(a,b){let c=this.distanceToPlane(a);return null===c?null:this.at(c,b)}intersectsPlane(a){let b=a.distanceToPoint(this.origin);if(0===b)return!0;let c=a.normal.dot(this.direction);return c*b<0}intersectBox(a,b){let c,d,e,f,g,h,i=1/this.direction.x,j=1/this.direction.y,k=1/this.direction.z,l=this.origin;return(i>=0?(c=(a.min.x-l.x)*i,d=(a.max.x-l.x)*i):(c=(a.max.x-l.x)*i,d=(a.min.x-l.x)*i),j>=0?(e=(a.min.y-l.y)*j,f=(a.max.y-l.y)*j):(e=(a.max.y-l.y)*j,f=(a.min.y-l.y)*j),c>f||e>d)?null:((e>c||c!=c)&&(c=e),(f<d||d!=d)&&(d=f),k>=0?(g=(a.min.z-l.z)*k,h=(a.max.z-l.z)*k):(g=(a.max.z-l.z)*k,h=(a.min.z-l.z)*k),c>h||g>d)?null:((g>c||c!=c)&&(c=g),(h<d||d!=d)&&(d=h),d<0)?null:this.at(c>=0?c:d,b)}intersectsBox(a){return null!==this.intersectBox(a,ag)}intersectTriangle(a,b,c,d,e){ak.subVectors(b,a),al.subVectors(c,a),am.crossVectors(ak,al);let f=this.direction.dot(am),g;if(f>0){if(d)return null;g=1}else{if(!(f<0))return null;g=-1,f=-f}aj.subVectors(this.origin,a);let h=g*this.direction.dot(al.crossVectors(aj,al));if(h<0)return null;let i=g*this.direction.dot(ak.cross(aj));if(i<0||h+i>f)return null;let j=-g*aj.dot(am);return j<0?null:this.at(j/f,e)}applyMatrix4(a){return this.origin.applyMatrix4(a),this.direction.transformDirection(a),this}equals(a){return a.origin.equals(this.origin)&&a.direction.equals(this.direction)}}class ao{constructor(){Object.defineProperty(this,"isMatrix4",{value:!0}),this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){let q=this.elements;return q[0]=a,q[4]=b,q[8]=c,q[12]=d,q[1]=e,q[5]=f,q[9]=g,q[13]=h,q[2]=i,q[6]=j,q[10]=k,q[14]=l,q[3]=m,q[7]=n,q[11]=o,q[15]=p,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new ao().fromArray(this.elements)}copy(a){let b=this.elements,c=a.elements;return b[0]=c[0],b[1]=c[1],b[2]=c[2],b[3]=c[3],b[4]=c[4],b[5]=c[5],b[6]=c[6],b[7]=c[7],b[8]=c[8],b[9]=c[9],b[10]=c[10],b[11]=c[11],b[12]=c[12],b[13]=c[13],b[14]=c[14],b[15]=c[15],this}copyPosition(a){let b=this.elements,c=a.elements;return b[12]=c[12],b[13]=c[13],b[14]=c[14],this}extractBasis(a,b,c){return a.setFromMatrixColumn(this,0),b.setFromMatrixColumn(this,1),c.setFromMatrixColumn(this,2),this}makeBasis(a,b,c){return this.set(a.x,b.x,c.x,0,a.y,b.y,c.y,0,a.z,b.z,c.z,0,0,0,0,1),this}extractRotation(a){let b=this.elements,c=a.elements,d=1/ap.setFromMatrixColumn(a,0).length(),e=1/ap.setFromMatrixColumn(a,1).length(),f=1/ap.setFromMatrixColumn(a,2).length();return b[0]=c[0]*d,b[1]=c[1]*d,b[2]=c[2]*d,b[3]=0,b[4]=c[4]*e,b[5]=c[5]*e,b[6]=c[6]*e,b[7]=0,b[8]=c[8]*f,b[9]=c[9]*f,b[10]=c[10]*f,b[11]=0,b[12]=0,b[13]=0,b[14]=0,b[15]=1,this}makeRotationFromEuler(a){a&&a.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");let b=this.elements,c=a.x,d=a.y,e=a.z,f=Math.cos(c),g=Math.sin(c),h=Math.cos(d),i=Math.sin(d),j=Math.cos(e),k=Math.sin(e);if("XYZ"===a.order){let l=f*j,m=f*k,n=g*j,o=g*k;b[0]=h*j,b[4]=-h*k,b[8]=i,b[1]=m+n*i,b[5]=l-o*i,b[9]=-g*h,b[2]=o-l*i,b[6]=n+m*i,b[10]=f*h}else if("YXZ"===a.order){let p=h*j,q=h*k,r=i*j,s=i*k;b[0]=p+s*g,b[4]=r*g-q,b[8]=f*i,b[1]=f*k,b[5]=f*j,b[9]=-g,b[2]=q*g-r,b[6]=s+p*g,b[10]=f*h}else if("ZXY"===a.order){let t=h*j,u=h*k,v=i*j,w=i*k;b[0]=t-w*g,b[4]=-f*k,b[8]=v+u*g,b[1]=u+v*g,b[5]=f*j,b[9]=w-t*g,b[2]=-f*i,b[6]=g,b[10]=f*h}else if("ZYX"===a.order){let x=f*j,y=f*k,z=g*j,A=g*k;b[0]=h*j,b[4]=z*i-y,b[8]=x*i+A,b[1]=h*k,b[5]=A*i+x,b[9]=y*i-z,b[2]=-i,b[6]=g*h,b[10]=f*h}else if("YZX"===a.order){let B=f*h,C=f*i,D=g*h,E=g*i;b[0]=h*j,b[4]=E-B*k,b[8]=D*k+C,b[1]=k,b[5]=f*j,b[9]=-g*j,b[2]=-i*j,b[6]=C*k+D,b[10]=B-E*k}else if("XZY"===a.order){let F=f*h,G=f*i,H=g*h,I=g*i;b[0]=h*j,b[4]=-k,b[8]=i*j,b[1]=F*k+I,b[5]=f*j,b[9]=G*k-H,b[2]=H*k-G,b[6]=g*j,b[10]=I*k+F}return b[3]=0,b[7]=0,b[11]=0,b[12]=0,b[13]=0,b[14]=0,b[15]=1,this}makeRotationFromQuaternion(a){return this.compose(ar,a,as)}lookAt(a,b,c){let d=this.elements;return av.subVectors(a,b),0===av.lengthSq()&&(av.z=1),av.normalize(),at.crossVectors(c,av),0===at.lengthSq()&&(1===Math.abs(c.z)?av.x+=1e-4:av.z+=1e-4,av.normalize(),at.crossVectors(c,av)),at.normalize(),au.crossVectors(av,at),d[0]=at.x,d[4]=au.x,d[8]=av.x,d[1]=at.y,d[5]=au.y,d[9]=av.y,d[2]=at.z,d[6]=au.z,d[10]=av.z,this}multiply(a,b){return void 0!==b?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(a,b)):this.multiplyMatrices(this,a)}premultiply(a){return this.multiplyMatrices(a,this)}multiplyMatrices(a,b){let c=a.elements,d=b.elements,e=this.elements,f=c[0],g=c[4],h=c[8],i=c[12],j=c[1],k=c[5],l=c[9],m=c[13],n=c[2],o=c[6],p=c[10],q=c[14],r=c[3],s=c[7],t=c[11],u=c[15],v=d[0],w=d[4],x=d[8],y=d[12],z=d[1],A=d[5],B=d[9],C=d[13],D=d[2],E=d[6],F=d[10],G=d[14],H=d[3],I=d[7],J=d[11],K=d[15];return e[0]=f*v+g*z+h*D+i*H,e[4]=f*w+g*A+h*E+i*I,e[8]=f*x+g*B+h*F+i*J,e[12]=f*y+g*C+h*G+i*K,e[1]=j*v+k*z+l*D+m*H,e[5]=j*w+k*A+l*E+m*I,e[9]=j*x+k*B+l*F+m*J,e[13]=j*y+k*C+l*G+m*K,e[2]=n*v+o*z+p*D+q*H,e[6]=n*w+o*A+p*E+q*I,e[10]=n*x+o*B+p*F+q*J,e[14]=n*y+o*C+p*G+q*K,e[3]=r*v+s*z+t*D+u*H,e[7]=r*w+s*A+t*E+u*I,e[11]=r*x+s*B+t*F+u*J,e[15]=r*y+s*C+t*G+u*K,this}multiplyScalar(a){let b=this.elements;return b[0]*=a,b[4]*=a,b[8]*=a,b[12]*=a,b[1]*=a,b[5]*=a,b[9]*=a,b[13]*=a,b[2]*=a,b[6]*=a,b[10]*=a,b[14]*=a,b[3]*=a,b[7]*=a,b[11]*=a,b[15]*=a,this}determinant(){let a=this.elements,b=a[0],c=a[4],d=a[8],e=a[12],f=a[1],g=a[5],h=a[9],i=a[13],j=a[2],k=a[6],l=a[10],m=a[14],n=a[3],o=a[7],p=a[11],q=a[15];return n*(+e*h*k-d*i*k-e*g*l+c*i*l+d*g*m-c*h*m)+o*(+b*h*m-b*i*l+e*f*l-d*f*m+d*i*j-e*h*j)+p*(+b*i*k-b*g*m-e*f*k+c*f*m+e*g*j-c*i*j)+q*(-d*g*j-b*h*k+b*g*l+d*f*k-c*f*l+c*h*j)}transpose(){let a=this.elements,b;return b=a[1],a[1]=a[4],a[4]=b,b=a[2],a[2]=a[8],a[8]=b,b=a[6],a[6]=a[9],a[9]=b,b=a[3],a[3]=a[12],a[12]=b,b=a[7],a[7]=a[13],a[13]=b,b=a[11],a[11]=a[14],a[14]=b,this}setPosition(a,b,c){let d=this.elements;return a.isVector3?(d[12]=a.x,d[13]=a.y,d[14]=a.z):(d[12]=a,d[13]=b,d[14]=c),this}getInverse(a,b){void 0!==b&&console.warn("THREE.Matrix4: .getInverse() can no longer be configured to throw on degenerate.");let c=this.elements,d=a.elements,e=d[0],f=d[1],g=d[2],h=d[3],i=d[4],j=d[5],k=d[6],l=d[7],m=d[8],n=d[9],o=d[10],p=d[11],q=d[12],r=d[13],s=d[14],t=d[15],u=n*s*l-r*o*l+r*k*p-j*s*p-n*k*t+j*o*t,v=q*o*l-m*s*l-q*k*p+i*s*p+m*k*t-i*o*t,w=m*r*l-q*n*l+q*j*p-i*r*p-m*j*t+i*n*t,x=q*n*k-m*r*k-q*j*o+i*r*o+m*j*s-i*n*s,y=e*u+f*v+g*w+h*x;if(0===y)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);let z=1/y;return c[0]=u*z,c[1]=(r*o*h-n*s*h-r*g*p+f*s*p+n*g*t-f*o*t)*z,c[2]=(j*s*h-r*k*h+r*g*l-f*s*l-j*g*t+f*k*t)*z,c[3]=(n*k*h-j*o*h-n*g*l+f*o*l+j*g*p-f*k*p)*z,c[4]=v*z,c[5]=(m*s*h-q*o*h+q*g*p-e*s*p-m*g*t+e*o*t)*z,c[6]=(q*k*h-i*s*h-q*g*l+e*s*l+i*g*t-e*k*t)*z,c[7]=(i*o*h-m*k*h+m*g*l-e*o*l-i*g*p+e*k*p)*z,c[8]=w*z,c[9]=(q*n*h-m*r*h-q*f*p+e*r*p+m*f*t-e*n*t)*z,c[10]=(i*r*h-q*j*h+q*f*l-e*r*l-i*f*t+e*j*t)*z,c[11]=(m*j*h-i*n*h-m*f*l+e*n*l+i*f*p-e*j*p)*z,c[12]=x*z,c[13]=(m*r*g-q*n*g+q*f*o-e*r*o-m*f*s+e*n*s)*z,c[14]=(q*j*g-i*r*g-q*f*k+e*r*k+i*f*s-e*j*s)*z,c[15]=(i*n*g-m*j*g+m*f*k-e*n*k-i*f*o+e*j*o)*z,this}scale(a){let b=this.elements,c=a.x,d=a.y,e=a.z;return b[0]*=c,b[4]*=d,b[8]*=e,b[1]*=c,b[5]*=d,b[9]*=e,b[2]*=c,b[6]*=d,b[10]*=e,b[3]*=c,b[7]*=d,b[11]*=e,this}getMaxScaleOnAxis(){let a=this.elements,b=a[0]*a[0]+a[1]*a[1]+a[2]*a[2],c=a[4]*a[4]+a[5]*a[5]+a[6]*a[6],d=a[8]*a[8]+a[9]*a[9]+a[10]*a[10];return Math.sqrt(Math.max(b,c,d))}makeTranslation(a,b,c){return this.set(1,0,0,a,0,1,0,b,0,0,1,c,0,0,0,1),this}makeRotationX(a){let b=Math.cos(a),c=Math.sin(a);return this.set(1,0,0,0,0,b,-c,0,0,c,b,0,0,0,0,1),this}makeRotationY(a){let b=Math.cos(a),c=Math.sin(a);return this.set(b,0,c,0,0,1,0,0,-c,0,b,0,0,0,0,1),this}makeRotationZ(a){let b=Math.cos(a),c=Math.sin(a);return this.set(b,-c,0,0,c,b,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(a,b){let c=Math.cos(b),d=Math.sin(b),e=1-c,f=a.x,g=a.y,h=a.z,i=e*f,j=e*g;return this.set(i*f+c,i*g-d*h,i*h+d*g,0,i*g+d*h,j*g+c,j*h-d*f,0,i*h-d*g,j*h+d*f,e*h*h+c,0,0,0,0,1),this}makeScale(a,b,c){return this.set(a,0,0,0,0,b,0,0,0,0,c,0,0,0,0,1),this}makeShear(a,b,c){return this.set(1,b,c,0,a,1,c,0,a,b,1,0,0,0,0,1),this}compose(a,b,c){let d=this.elements,e=b._x,f=b._y,g=b._z,h=b._w,i=e+e,j=f+f,k=g+g,l=e*i,m=e*j,n=e*k,o=f*j,p=f*k,q=g*k,r=h*i,s=h*j,t=h*k,u=c.x,v=c.y,w=c.z;return d[0]=(1-(o+q))*u,d[1]=(m+t)*u,d[2]=(n-s)*u,d[3]=0,d[4]=(m-t)*v,d[5]=(1-(l+q))*v,d[6]=(p+r)*v,d[7]=0,d[8]=(n+s)*w,d[9]=(p-r)*w,d[10]=(1-(l+o))*w,d[11]=0,d[12]=a.x,d[13]=a.y,d[14]=a.z,d[15]=1,this}decompose(a,b,c){let d=this.elements,e=ap.set(d[0],d[1],d[2]).length(),f=ap.set(d[4],d[5],d[6]).length(),g=ap.set(d[8],d[9],d[10]).length(),h=this.determinant();h<0&&(e=-e),a.x=d[12],a.y=d[13],a.z=d[14],aq.copy(this);let i=1/e,j=1/f,k=1/g;return aq.elements[0]*=i,aq.elements[1]*=i,aq.elements[2]*=i,aq.elements[4]*=j,aq.elements[5]*=j,aq.elements[6]*=j,aq.elements[8]*=k,aq.elements[9]*=k,aq.elements[10]*=k,b.setFromRotationMatrix(aq),c.x=e,c.y=f,c.z=g,this}makePerspective(a,b,c,d,e,f){void 0===f&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");let g=this.elements;return g[0]=2*e/(b-a),g[4]=0,g[8]=(b+a)/(b-a),g[12]=0,g[1]=0,g[5]=2*e/(c-d),g[9]=(c+d)/(c-d),g[13]=0,g[2]=0,g[6]=0,g[10]=-(f+e)/(f-e),g[14]=-2*f*e/(f-e),g[3]=0,g[7]=0,g[11]=-1,g[15]=0,this}makeOrthographic(a,b,c,d,e,f){let g=this.elements,h=1/(b-a),i=1/(c-d),j=1/(f-e);return g[0]=2*h,g[4]=0,g[8]=0,g[12]=-((b+a)*h),g[1]=0,g[5]=2*i,g[9]=0,g[13]=-((c+d)*i),g[2]=0,g[6]=0,g[10]=-2*j,g[14]=-((f+e)*j),g[3]=0,g[7]=0,g[11]=0,g[15]=1,this}equals(a){let b=this.elements,c=a.elements;for(let d=0;d<16;d++)if(b[d]!==c[d])return!1;return!0}fromArray(a,b){void 0===b&&(b=0);for(let c=0;c<16;c++)this.elements[c]=a[c+b];return this}toArray(a,b){void 0===a&&(a=[]),void 0===b&&(b=0);let c=this.elements;return a[b]=c[0],a[b+1]=c[1],a[b+2]=c[2],a[b+3]=c[3],a[b+4]=c[4],a[b+5]=c[5],a[b+6]=c[6],a[b+7]=c[7],a[b+8]=c[8],a[b+9]=c[9],a[b+10]=c[10],a[b+11]=c[11],a[b+12]=c[12],a[b+13]=c[13],a[b+14]=c[14],a[b+15]=c[15],a}}let ap=new O,aq=new ao,ar=new O(0,0,0),as=new O(1,1,1),at=new O,au=new O,av=new O;class aw{constructor(a=0,b=0,c=0,d=aw.DefaultOrder){Object.defineProperty(this,"isEuler",{value:!0}),this._x=a,this._y=b,this._z=c,this._order=d}get x(){return this._x}set x(a){this._x=a,this._onChangeCallback()}get y(){return this._y}set y(a){this._y=a,this._onChangeCallback()}get z(){return this._z}set z(a){this._z=a,this._onChangeCallback()}get order(){return this._order}set order(a){this._order=a,this._onChangeCallback()}set(a,b,c,d){return this._x=a,this._y=b,this._z=c,this._order=d||this._order,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(a){return this._x=a._x,this._y=a._y,this._z=a._z,this._order=a._order,this._onChangeCallback(),this}setFromRotationMatrix(a,b,c){let d=D.clamp,e=a.elements,f=e[0],g=e[4],h=e[8],i=e[1],j=e[5],k=e[9],l=e[2],m=e[6],n=e[10];switch(b=b||this._order){case"XYZ":this._y=Math.asin(d(h,-1,1)),.9999999>Math.abs(h)?(this._x=Math.atan2(-k,n),this._z=Math.atan2(-g,f)):(this._x=Math.atan2(m,j),this._z=0);break;case"YXZ":this._x=Math.asin(-d(k,-1,1)),.9999999>Math.abs(k)?(this._y=Math.atan2(h,n),this._z=Math.atan2(i,j)):(this._y=Math.atan2(-l,f),this._z=0);break;case"ZXY":this._x=Math.asin(d(m,-1,1)),.9999999>Math.abs(m)?(this._y=Math.atan2(-l,n),this._z=Math.atan2(-g,j)):(this._y=0,this._z=Math.atan2(i,f));break;case"ZYX":this._y=Math.asin(-d(l,-1,1)),.9999999>Math.abs(l)?(this._x=Math.atan2(m,n),this._z=Math.atan2(i,f)):(this._x=0,this._z=Math.atan2(-g,j));break;case"YZX":this._z=Math.asin(d(i,-1,1)),.9999999>Math.abs(i)?(this._x=Math.atan2(-k,j),this._y=Math.atan2(-l,f)):(this._x=0,this._y=Math.atan2(h,n));break;case"XZY":this._z=Math.asin(-d(g,-1,1)),.9999999>Math.abs(g)?(this._x=Math.atan2(m,j),this._y=Math.atan2(h,f)):(this._x=Math.atan2(-k,n),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+b)}return this._order=b,!1!==c&&this._onChangeCallback(),this}setFromQuaternion(a,b,c){return ax.makeRotationFromQuaternion(a),this.setFromRotationMatrix(ax,b,c)}setFromVector3(a,b){return this.set(a.x,a.y,a.z,b||this._order)}reorder(a){return ay.setFromEuler(this),this.setFromQuaternion(ay,a)}equals(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._order===this._order}fromArray(a){return this._x=a[0],this._y=a[1],this._z=a[2],void 0!==a[3]&&(this._order=a[3]),this._onChangeCallback(),this}toArray(a,b){return void 0===a&&(a=[]),void 0===b&&(b=0),a[b]=this._x,a[b+1]=this._y,a[b+2]=this._z,a[b+3]=this._order,a}toVector3(a){return a?a.set(this._x,this._y,this._z):new O(this._x,this._y,this._z)}_onChange(a){return this._onChangeCallback=a,this}_onChangeCallback(){}}aw.DefaultOrder="XYZ",aw.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];let ax=new ao,ay=new N;class az{constructor(){this.mask=1}set(a){this.mask=1<<a|0}enable(a){this.mask|=1<<a|0}enableAll(){this.mask=-1}toggle(a){this.mask^=1<<a|0}disable(a){this.mask&=~(1<<a|0)}disableAll(){this.mask=0}test(a){return(this.mask&a.mask)!=0}}let aA=0,aB=new O,aC=new N,aD=new ao,aE=new O,aF=new O,aG=new O,aH=new N,aI=new O(1,0,0),aJ=new O(0,1,0),aK=new O(0,0,1),aL={type:"added"},aM={type:"removed"};function aN(){Object.defineProperty(this,"id",{value:aA++}),this.uuid=D.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=aN.DefaultUp.clone();let a=new O,b=new aw,c=new N,d=new O(1,1,1);b._onChange(function(){c.setFromEuler(b,!1)}),c._onChange(function(){b.setFromQuaternion(c,void 0,!1)}),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:a},rotation:{configurable:!0,enumerable:!0,value:b},quaternion:{configurable:!0,enumerable:!0,value:c},scale:{configurable:!0,enumerable:!0,value:d},modelViewMatrix:{value:new ao},normalMatrix:{value:new F}}),this.matrix=new ao,this.matrixWorld=new ao,this.matrixAutoUpdate=aN.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new az,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.userData={}}aN.DefaultUp=new O(0,1,0),aN.DefaultMatrixAutoUpdate=!0,aN.prototype=Object.assign(Object.create(z.prototype),{constructor:aN,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix4:function(a){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(a),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(a){return this.quaternion.premultiply(a),this},setRotationFromAxisAngle:function(a,b){this.quaternion.setFromAxisAngle(a,b)},setRotationFromEuler:function(a){this.quaternion.setFromEuler(a,!0)},setRotationFromMatrix:function(a){this.quaternion.setFromRotationMatrix(a)},setRotationFromQuaternion:function(a){this.quaternion.copy(a)},rotateOnAxis:function(a,b){return aC.setFromAxisAngle(a,b),this.quaternion.multiply(aC),this},rotateOnWorldAxis:function(a,b){return aC.setFromAxisAngle(a,b),this.quaternion.premultiply(aC),this},rotateX:function(a){return this.rotateOnAxis(aI,a)},rotateY:function(a){return this.rotateOnAxis(aJ,a)},rotateZ:function(a){return this.rotateOnAxis(aK,a)},translateOnAxis:function(a,b){return aB.copy(a).applyQuaternion(this.quaternion),this.position.add(aB.multiplyScalar(b)),this},translateX:function(a){return this.translateOnAxis(aI,a)},translateY:function(a){return this.translateOnAxis(aJ,a)},translateZ:function(a){return this.translateOnAxis(aK,a)},localToWorld:function(a){return a.applyMatrix4(this.matrixWorld)},worldToLocal:function(a){return a.applyMatrix4(aD.getInverse(this.matrixWorld))},lookAt:function(a,b,c){a.isVector3?aE.copy(a):aE.set(a,b,c);let d=this.parent;this.updateWorldMatrix(!0,!1),aF.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?aD.lookAt(aF,aE,this.up):aD.lookAt(aE,aF,this.up),this.quaternion.setFromRotationMatrix(aD),d&&(aD.extractRotation(d.matrixWorld),aC.setFromRotationMatrix(aD),this.quaternion.premultiply(aC.inverse()))},add:function(a){if(arguments.length>1){for(let b=0;b<arguments.length;b++)this.add(arguments[b]);return this}return a===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",a),this):(a&&a.isObject3D?(null!==a.parent&&a.parent.remove(a),a.parent=this,this.children.push(a),a.dispatchEvent(aL)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",a),this)},remove:function(a){if(arguments.length>1){for(let b=0;b<arguments.length;b++)this.remove(arguments[b]);return this}let c=this.children.indexOf(a);return -1!==c&&(a.parent=null,this.children.splice(c,1),a.dispatchEvent(aM)),this},attach:function(a){return this.updateWorldMatrix(!0,!1),aD.getInverse(this.matrixWorld),null!==a.parent&&(a.parent.updateWorldMatrix(!0,!1),aD.multiply(a.parent.matrixWorld)),a.applyMatrix4(aD),a.updateWorldMatrix(!1,!1),this.add(a),this},getObjectById:function(a){return this.getObjectByProperty("id",a)},getObjectByName:function(a){return this.getObjectByProperty("name",a)},getObjectByProperty:function(a,b){if(this[a]===b)return this;for(let c=0,d=this.children.length;c<d;c++){let e=this.children[c],f=e.getObjectByProperty(a,b);if(void 0!==f)return f}},getWorldPosition:function(a){return void 0===a&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),a=new O),this.updateWorldMatrix(!0,!1),a.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(a){return void 0===a&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),a=new N),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(aF,a,aG),a},getWorldScale:function(a){return void 0===a&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),a=new O),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(aF,aH,a),a},getWorldDirection:function(a){void 0===a&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),a=new O),this.updateWorldMatrix(!0,!1);let b=this.matrixWorld.elements;return a.set(b[8],b[9],b[10]).normalize()},raycast:function(){},traverse:function(a){a(this);let b=this.children;for(let c=0,d=b.length;c<d;c++)b[c].traverse(a)},traverseVisible:function(a){if(!1===this.visible)return;a(this);let b=this.children;for(let c=0,d=b.length;c<d;c++)b[c].traverseVisible(a)},traverseAncestors:function(a){let b=this.parent;null!==b&&(a(b),b.traverseAncestors(a))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(a){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||a)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,a=!0);let b=this.children;for(let c=0,d=b.length;c<d;c++)b[c].updateMatrixWorld(a)},updateWorldMatrix:function(a,b){let c=this.parent;if(!0===a&&null!==c&&c.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===b){let d=this.children;for(let e=0,f=d.length;e<f;e++)d[e].updateWorldMatrix(!1,!0)}},toJSON:function(a){let b=void 0===a||"string"==typeof a,c={};b&&(a={geometries:{},materials:{},textures:{},images:{},shapes:{}},c.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});let d={};function e(b,c){return void 0===b[c.uuid]&&(b[c.uuid]=c.toJSON(a)),c.uuid}if(d.uuid=this.uuid,d.type=this.type,""!==this.name&&(d.name=this.name),!0===this.castShadow&&(d.castShadow=!0),!0===this.receiveShadow&&(d.receiveShadow=!0),!1===this.visible&&(d.visible=!1),!1===this.frustumCulled&&(d.frustumCulled=!1),0!==this.renderOrder&&(d.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(d.userData=this.userData),d.layers=this.layers.mask,d.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(d.matrixAutoUpdate=!1),this.isInstancedMesh&&(d.type="InstancedMesh",d.count=this.count,d.instanceMatrix=this.instanceMatrix.toJSON()),this.isMesh||this.isLine||this.isPoints){d.geometry=e(a.geometries,this.geometry);let f=this.geometry.parameters;if(void 0!==f&& void 0!==f.shapes){let g=f.shapes;if(Array.isArray(g))for(let h=0,i=g.length;h<i;h++){let j=g[h];e(a.shapes,j)}else e(a.shapes,g)}}if(void 0!==this.material){if(Array.isArray(this.material)){let k=[];for(let l=0,m=this.material.length;l<m;l++)k.push(e(a.materials,this.material[l]));d.material=k}else d.material=e(a.materials,this.material)}if(this.children.length>0){d.children=[];for(let n=0;n<this.children.length;n++)d.children.push(this.children[n].toJSON(a).object)}if(b){let o=t(a.geometries),p=t(a.materials),q=t(a.textures),r=t(a.images),s=t(a.shapes);o.length>0&&(c.geometries=o),p.length>0&&(c.materials=p),q.length>0&&(c.textures=q),r.length>0&&(c.images=r),s.length>0&&(c.shapes=s)}return c.object=d,c;function t(a){let b=[];for(let c in a){let d=a[c];delete d.metadata,b.push(d)}return b}},clone:function(a){return new this.constructor().copy(this,a)},copy:function(a,b){if(void 0===b&&(b=!0),this.name=a.name,this.up.copy(a.up),this.position.copy(a.position),this.rotation.order=a.rotation.order,this.quaternion.copy(a.quaternion),this.scale.copy(a.scale),this.matrix.copy(a.matrix),this.matrixWorld.copy(a.matrixWorld),this.matrixAutoUpdate=a.matrixAutoUpdate,this.matrixWorldNeedsUpdate=a.matrixWorldNeedsUpdate,this.layers.mask=a.layers.mask,this.visible=a.visible,this.castShadow=a.castShadow,this.receiveShadow=a.receiveShadow,this.frustumCulled=a.frustumCulled,this.renderOrder=a.renderOrder,this.userData=JSON.parse(JSON.stringify(a.userData)),!0===b)for(let c=0;c<a.children.length;c++){let d=a.children[c];this.add(d.clone())}return this}});let aO=new O,aP=new O,aQ=new F;class aR{constructor(a,b){Object.defineProperty(this,"isPlane",{value:!0}),this.normal=void 0!==a?a:new O(1,0,0),this.constant=void 0!==b?b:0}set(a,b){return this.normal.copy(a),this.constant=b,this}setComponents(a,b,c,d){return this.normal.set(a,b,c),this.constant=d,this}setFromNormalAndCoplanarPoint(a,b){return this.normal.copy(a),this.constant=-b.dot(this.normal),this}setFromCoplanarPoints(a,b,c){let d=aO.subVectors(c,b).cross(aP.subVectors(a,b)).normalize();return this.setFromNormalAndCoplanarPoint(d,a),this}clone(){return new this.constructor().copy(this)}copy(a){return this.normal.copy(a.normal),this.constant=a.constant,this}normalize(){let a=1/this.normal.length();return this.normal.multiplyScalar(a),this.constant*=a,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(a){return this.normal.dot(a)+this.constant}distanceToSphere(a){return this.distanceToPoint(a.center)-a.radius}projectPoint(a,b){return void 0===b&&(console.warn("THREE.Plane: .projectPoint() target is now required"),b=new O),b.copy(this.normal).multiplyScalar(-this.distanceToPoint(a)).add(a)}intersectLine(a,b){void 0===b&&(console.warn("THREE.Plane: .intersectLine() target is now required"),b=new O);let c=a.delta(aO),d=this.normal.dot(c);if(0===d)return 0===this.distanceToPoint(a.start)?b.copy(a.start):void 0;let e=-(a.start.dot(this.normal)+this.constant)/d;if(!(e<0)&&!(e>1))return b.copy(c).multiplyScalar(e).add(a.start)}intersectsLine(a){let b=this.distanceToPoint(a.start),c=this.distanceToPoint(a.end);return b<0&&c>0||c<0&&b>0}intersectsBox(a){return a.intersectsPlane(this)}intersectsSphere(a){return a.intersectsPlane(this)}coplanarPoint(a){return void 0===a&&(console.warn("THREE.Plane: .coplanarPoint() target is now required"),a=new O),a.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(a,b){let c=b||aQ.getNormalMatrix(a),d=this.coplanarPoint(aO).applyMatrix4(a),e=this.normal.applyMatrix3(c).normalize();return this.constant=-d.dot(e),this}translate(a){return this.constant-=a.dot(this.normal),this}equals(a){return a.normal.equals(this.normal)&&a.constant===this.constant}}let aS=new O,aT=new O,aU=new O,aV=new O,aW=new O,aX=new O,aY=new O,aZ=new O,a$=new O,a_=new O;class a0{constructor(a,b,c){this.a=void 0!==a?a:new O,this.b=void 0!==b?b:new O,this.c=void 0!==c?c:new O}static getNormal(a,b,c,d){void 0===d&&(console.warn("THREE.Triangle: .getNormal() target is now required"),d=new O),d.subVectors(c,b),aS.subVectors(a,b),d.cross(aS);let e=d.lengthSq();return e>0?d.multiplyScalar(1/Math.sqrt(e)):d.set(0,0,0)}static getBarycoord(a,b,c,d,e){aS.subVectors(d,b),aT.subVectors(c,b),aU.subVectors(a,b);let f=aS.dot(aS),g=aS.dot(aT),h=aS.dot(aU),i=aT.dot(aT),j=aT.dot(aU),k=f*i-g*g;if(void 0===e&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),e=new O),0===k)return e.set(-2,-1,-1);let l=1/k,m=(i*h-g*j)*l,n=(f*j-g*h)*l;return e.set(1-m-n,n,m)}static containsPoint(a,b,c,d){return this.getBarycoord(a,b,c,d,aV),aV.x>=0&&aV.y>=0&&aV.x+aV.y<=1}static getUV(a,b,c,d,e,f,g,h){return this.getBarycoord(a,b,c,d,aV),h.set(0,0),h.addScaledVector(e,aV.x),h.addScaledVector(f,aV.y),h.addScaledVector(g,aV.z),h}static isFrontFacing(a,b,c,d){return aS.subVectors(c,b),aT.subVectors(a,b),0>aS.cross(aT).dot(d)}set(a,b,c){return this.a.copy(a),this.b.copy(b),this.c.copy(c),this}setFromPointsAndIndices(a,b,c,d){return this.a.copy(a[b]),this.b.copy(a[c]),this.c.copy(a[d]),this}clone(){return new this.constructor().copy(this)}copy(a){return this.a.copy(a.a),this.b.copy(a.b),this.c.copy(a.c),this}getArea(){return aS.subVectors(this.c,this.b),aT.subVectors(this.a,this.b),.5*aS.cross(aT).length()}getMidpoint(a){return void 0===a&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),a=new O),a.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(a){return a0.getNormal(this.a,this.b,this.c,a)}getPlane(a){return void 0===a&&(console.warn("THREE.Triangle: .getPlane() target is now required"),a=new aR),a.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(a,b){return a0.getBarycoord(a,this.a,this.b,this.c,b)}getUV(a,b,c,d,e){return a0.getUV(a,this.a,this.b,this.c,b,c,d,e)}containsPoint(a){return a0.containsPoint(a,this.a,this.b,this.c)}isFrontFacing(a){return a0.isFrontFacing(this.a,this.b,this.c,a)}intersectsBox(a){return a.intersectsTriangle(this)}closestPointToPoint(a,b){void 0===b&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),b=new O);let c=this.a,d=this.b,e=this.c,f,g;aW.subVectors(d,c),aX.subVectors(e,c),aZ.subVectors(a,c);let h=aW.dot(aZ),i=aX.dot(aZ);if(h<=0&&i<=0)return b.copy(c);a$.subVectors(a,d);let j=aW.dot(a$),k=aX.dot(a$);if(j>=0&&k<=j)return b.copy(d);let l=h*k-j*i;if(l<=0&&h>=0&&j<=0)return f=h/(h-j),b.copy(c).addScaledVector(aW,f);a_.subVectors(a,e);let m=aW.dot(a_),n=aX.dot(a_);if(n>=0&&m<=n)return b.copy(e);let o=m*i-h*n;if(o<=0&&i>=0&&n<=0)return g=i/(i-n),b.copy(c).addScaledVector(aX,g);let p=j*n-m*k;if(p<=0&&k-j>=0&&m-n>=0)return aY.subVectors(e,d),g=(k-j)/(k-j+(m-n)),b.copy(d).addScaledVector(aY,g);let q=1/(p+o+l);return f=o*q,g=l*q,b.copy(c).addScaledVector(aW,f).addScaledVector(aX,g)}equals(a){return a.a.equals(this.a)&&a.b.equals(this.b)&&a.c.equals(this.c)}}let a1={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},a2={h:0,s:0,l:0},a3={h:0,s:0,l:0};function a4(a,b,c){return(c<0&&(c+=1),c>1&&(c-=1),c<1/6)?a+(b-a)*6*c:c<.5?b:c<2/3?a+(b-a)*6*(2/3-c):a}function a5(a){return a<.04045?.0773993808*a:Math.pow(.9478672986*a+.0521327014,2.4)}function a6(a){return a<.0031308?12.92*a:1.055*Math.pow(a,.41666)-.055}class a7{constructor(a,b,c){if(Object.defineProperty(this,"isColor",{value:!0}),void 0===b&& void 0===c)return this.set(a);return this.setRGB(a,b,c)}set(a){return a&&a.isColor?this.copy(a):"number"==typeof a?this.setHex(a):"string"==typeof a&&this.setStyle(a),this}setScalar(a){return this.r=a,this.g=a,this.b=a,this}setHex(a){return a=Math.floor(a),this.r=(a>>16&255)/255,this.g=(a>>8&255)/255,this.b=(255&a)/255,this}setRGB(a,b,c){return this.r=a,this.g=b,this.b=c,this}setHSL(a,b,c){if(a=D.euclideanModulo(a,1),b=D.clamp(b,0,1),c=D.clamp(c,0,1),0===b)this.r=this.g=this.b=c;else{let d=c<=.5?c*(1+b):c+b-c*b,e=2*c-d;this.r=a4(e,d,a+1/3),this.g=a4(e,d,a),this.b=a4(e,d,a-1/3)}return this}setStyle(a){function b(b){void 0!==b&&1>parseFloat(b)&&console.warn("THREE.Color: Alpha component of "+a+" will be ignored.")}let c;if(c=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(a)){let d,e=c[1],f=c[2];switch(e){case"rgb":case"rgba":if(d=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(f))return this.r=Math.min(255,parseInt(d[1],10))/255,this.g=Math.min(255,parseInt(d[2],10))/255,this.b=Math.min(255,parseInt(d[3],10))/255,b(d[5]),this;if(d=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(f))return this.r=Math.min(100,parseInt(d[1],10))/100,this.g=Math.min(100,parseInt(d[2],10))/100,this.b=Math.min(100,parseInt(d[3],10))/100,b(d[5]),this;break;case"hsl":case"hsla":if(d=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(f)){let g=parseFloat(d[1])/360,h=parseInt(d[2],10)/100,i=parseInt(d[3],10)/100;return b(d[5]),this.setHSL(g,h,i)}}}else if(c=/^\#([A-Fa-f0-9]+)$/.exec(a)){let j=c[1],k=j.length;if(3===k)return this.r=parseInt(j.charAt(0)+j.charAt(0),16)/255,this.g=parseInt(j.charAt(1)+j.charAt(1),16)/255,this.b=parseInt(j.charAt(2)+j.charAt(2),16)/255,this;if(6===k)return this.r=parseInt(j.charAt(0)+j.charAt(1),16)/255,this.g=parseInt(j.charAt(2)+j.charAt(3),16)/255,this.b=parseInt(j.charAt(4)+j.charAt(5),16)/255,this}return a&&a.length>0?this.setColorName(a):this}setColorName(a){let b=a1[a];return void 0!==b?this.setHex(b):console.warn("THREE.Color: Unknown color "+a),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(a){return this.r=a.r,this.g=a.g,this.b=a.b,this}copyGammaToLinear(a,b){return void 0===b&&(b=2),this.r=Math.pow(a.r,b),this.g=Math.pow(a.g,b),this.b=Math.pow(a.b,b),this}copyLinearToGamma(a,b){void 0===b&&(b=2);let c=b>0?1/b:1;return this.r=Math.pow(a.r,c),this.g=Math.pow(a.g,c),this.b=Math.pow(a.b,c),this}convertGammaToLinear(a){return this.copyGammaToLinear(this,a),this}convertLinearToGamma(a){return this.copyLinearToGamma(this,a),this}copySRGBToLinear(a){return this.r=a5(a.r),this.g=a5(a.g),this.b=a5(a.b),this}copyLinearToSRGB(a){return this.r=a6(a.r),this.g=a6(a.g),this.b=a6(a.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(a){void 0===a&&(console.warn("THREE.Color: .getHSL() target is now required"),a={h:0,s:0,l:0});let b=this.r,c=this.g,d=this.b,e=Math.max(b,c,d),f=Math.min(b,c,d),g,h,i=(f+e)/2;if(f===e)g=0,h=0;else{let j=e-f;switch(h=i<=.5?j/(e+f):j/(2-e-f),e){case b:g=(c-d)/j+(c<d?6:0);break;case c:g=(d-b)/j+2;break;case d:g=(b-c)/j+4}g/=6}return a.h=g,a.s=h,a.l=i,a}getStyle(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"}offsetHSL(a,b,c){return this.getHSL(a2),a2.h+=a,a2.s+=b,a2.l+=c,this.setHSL(a2.h,a2.s,a2.l),this}add(a){return this.r+=a.r,this.g+=a.g,this.b+=a.b,this}addColors(a,b){return this.r=a.r+b.r,this.g=a.g+b.g,this.b=a.b+b.b,this}addScalar(a){return this.r+=a,this.g+=a,this.b+=a,this}sub(a){return this.r=Math.max(0,this.r-a.r),this.g=Math.max(0,this.g-a.g),this.b=Math.max(0,this.b-a.b),this}multiply(a){return this.r*=a.r,this.g*=a.g,this.b*=a.b,this}multiplyScalar(a){return this.r*=a,this.g*=a,this.b*=a,this}lerp(a,b){return this.r+=(a.r-this.r)*b,this.g+=(a.g-this.g)*b,this.b+=(a.b-this.b)*b,this}lerpHSL(a,b){this.getHSL(a2),a.getHSL(a3);let c=D.lerp(a2.h,a3.h,b),d=D.lerp(a2.s,a3.s,b),e=D.lerp(a2.l,a3.l,b);return this.setHSL(c,d,e),this}equals(a){return a.r===this.r&&a.g===this.g&&a.b===this.b}fromArray(a,b){return void 0===b&&(b=0),this.r=a[b],this.g=a[b+1],this.b=a[b+2],this}toArray(a,b){return void 0===a&&(a=[]),void 0===b&&(b=0),a[b]=this.r,a[b+1]=this.g,a[b+2]=this.b,a}fromBufferAttribute(a,b){return this.r=a.getX(b),this.g=a.getY(b),this.b=a.getZ(b),!0===a.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}a7.NAMES=a1,a7.prototype.r=1,a7.prototype.g=1,a7.prototype.b=1;class a8{constructor(a,b,c,d,e,f){this.a=a,this.b=b,this.c=c,this.normal=d&&d.isVector3?d:new O,this.vertexNormals=Array.isArray(d)?d:[],this.color=e&&e.isColor?e:new a7,this.vertexColors=Array.isArray(e)?e:[],this.materialIndex=void 0!==f?f:0}clone(){return new this.constructor().copy(this)}copy(a){this.a=a.a,this.b=a.b,this.c=a.c,this.normal.copy(a.normal),this.color.copy(a.color),this.materialIndex=a.materialIndex;for(let b=0,c=a.vertexNormals.length;b<c;b++)this.vertexNormals[b]=a.vertexNormals[b].clone();for(let d=0,e=a.vertexColors.length;d<e;d++)this.vertexColors[d]=a.vertexColors[d].clone();return this}}let a9=0;function ba(){Object.defineProperty(this,"id",{value:a9++}),this.uuid=D.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.blending=1,this.side=f,this.flatShading=!1,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=100,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=7680,this.stencilZFail=7680,this.stencilZPass=7680,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0}function bb(a){ba.call(this),this.type="MeshBasicMaterial",this.color=new a7(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.setValues(a)}ba.prototype=Object.assign(Object.create(z.prototype),{constructor:ba,isMaterial:!0,onBeforeCompile:function(){},customProgramCacheKey:function(){return this.onBeforeCompile.toString()},setValues:function(a){if(void 0!==a)for(let b in a){let c=a[b];if(void 0===c){console.warn("THREE.Material: '"+b+"' parameter is undefined.");continue}if("shading"===b){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===c;continue}let d=this[b];if(void 0===d){console.warn("THREE."+this.type+": '"+b+"' is not a property of this material.");continue}d&&d.isColor?d.set(c):d&&d.isVector3&&c&&c.isVector3?d.copy(c):this[b]=c}},toJSON:function(a){let b=void 0===a||"string"==typeof a;b&&(a={textures:{},images:{}});let c={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function d(a){let b=[];for(let c in a){let d=a[c];delete d.metadata,b.push(d)}return b}if(c.uuid=this.uuid,c.type=this.type,""!==this.name&&(c.name=this.name),this.color&&this.color.isColor&&(c.color=this.color.getHex()),void 0!==this.roughness&&(c.roughness=this.roughness),void 0!==this.metalness&&(c.metalness=this.metalness),this.sheen&&this.sheen.isColor&&(c.sheen=this.sheen.getHex()),this.emissive&&this.emissive.isColor&&(c.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(c.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(c.specular=this.specular.getHex()),void 0!==this.shininess&&(c.shininess=this.shininess),void 0!==this.clearcoat&&(c.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(c.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(c.clearcoatMap=this.clearcoatMap.toJSON(a).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(c.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(a).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(c.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(a).uuid,c.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(c.map=this.map.toJSON(a).uuid),this.matcap&&this.matcap.isTexture&&(c.matcap=this.matcap.toJSON(a).uuid),this.alphaMap&&this.alphaMap.isTexture&&(c.alphaMap=this.alphaMap.toJSON(a).uuid),this.lightMap&&this.lightMap.isTexture&&(c.lightMap=this.lightMap.toJSON(a).uuid),this.aoMap&&this.aoMap.isTexture&&(c.aoMap=this.aoMap.toJSON(a).uuid,c.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(c.bumpMap=this.bumpMap.toJSON(a).uuid,c.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(c.normalMap=this.normalMap.toJSON(a).uuid,c.normalMapType=this.normalMapType,c.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(c.displacementMap=this.displacementMap.toJSON(a).uuid,c.displacementScale=this.displacementScale,c.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(c.roughnessMap=this.roughnessMap.toJSON(a).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(c.metalnessMap=this.metalnessMap.toJSON(a).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(c.emissiveMap=this.emissiveMap.toJSON(a).uuid),this.specularMap&&this.specularMap.isTexture&&(c.specularMap=this.specularMap.toJSON(a).uuid),this.envMap&&this.envMap.isTexture&&(c.envMap=this.envMap.toJSON(a).uuid,c.reflectivity=this.reflectivity,c.refractionRatio=this.refractionRatio,void 0!==this.combine&&(c.combine=this.combine),void 0!==this.envMapIntensity&&(c.envMapIntensity=this.envMapIntensity)),this.gradientMap&&this.gradientMap.isTexture&&(c.gradientMap=this.gradientMap.toJSON(a).uuid),void 0!==this.size&&(c.size=this.size),void 0!==this.sizeAttenuation&&(c.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(c.blending=this.blending),!0===this.flatShading&&(c.flatShading=this.flatShading),this.side!==f&&(c.side=this.side),this.vertexColors&&(c.vertexColors=!0),this.opacity<1&&(c.opacity=this.opacity),!0===this.transparent&&(c.transparent=this.transparent),c.depthFunc=this.depthFunc,c.depthTest=this.depthTest,c.depthWrite=this.depthWrite,c.stencilWrite=this.stencilWrite,c.stencilWriteMask=this.stencilWriteMask,c.stencilFunc=this.stencilFunc,c.stencilRef=this.stencilRef,c.stencilFuncMask=this.stencilFuncMask,c.stencilFail=this.stencilFail,c.stencilZFail=this.stencilZFail,c.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(c.rotation=this.rotation),!0===this.polygonOffset&&(c.polygonOffset=!0),0!==this.polygonOffsetFactor&&(c.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(c.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(c.linewidth=this.linewidth),void 0!==this.dashSize&&(c.dashSize=this.dashSize),void 0!==this.gapSize&&(c.gapSize=this.gapSize),void 0!==this.scale&&(c.scale=this.scale),!0===this.dithering&&(c.dithering=!0),this.alphaTest>0&&(c.alphaTest=this.alphaTest),!0===this.premultipliedAlpha&&(c.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(c.wireframe=this.wireframe),this.wireframeLinewidth>1&&(c.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(c.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(c.wireframeLinejoin=this.wireframeLinejoin),!0===this.morphTargets&&(c.morphTargets=!0),!0===this.morphNormals&&(c.morphNormals=!0),!0===this.skinning&&(c.skinning=!0),!1===this.visible&&(c.visible=!1),!1===this.toneMapped&&(c.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(c.userData=this.userData),b){let e=d(a.textures),g=d(a.images);e.length>0&&(c.textures=e),g.length>0&&(c.images=g)}return c},clone:function(){return new this.constructor().copy(this)},copy:function(a){this.name=a.name,this.fog=a.fog,this.blending=a.blending,this.side=a.side,this.flatShading=a.flatShading,this.vertexColors=a.vertexColors,this.opacity=a.opacity,this.transparent=a.transparent,this.blendSrc=a.blendSrc,this.blendDst=a.blendDst,this.blendEquation=a.blendEquation,this.blendSrcAlpha=a.blendSrcAlpha,this.blendDstAlpha=a.blendDstAlpha,this.blendEquationAlpha=a.blendEquationAlpha,this.depthFunc=a.depthFunc,this.depthTest=a.depthTest,this.depthWrite=a.depthWrite,this.stencilWriteMask=a.stencilWriteMask,this.stencilFunc=a.stencilFunc,this.stencilRef=a.stencilRef,this.stencilFuncMask=a.stencilFuncMask,this.stencilFail=a.stencilFail,this.stencilZFail=a.stencilZFail,this.stencilZPass=a.stencilZPass,this.stencilWrite=a.stencilWrite;let b=a.clippingPlanes,c=null;if(null!==b){let d=b.length;c=Array(d);for(let e=0;e!==d;++e)c[e]=b[e].clone()}return this.clippingPlanes=c,this.clipIntersection=a.clipIntersection,this.clipShadows=a.clipShadows,this.shadowSide=a.shadowSide,this.colorWrite=a.colorWrite,this.precision=a.precision,this.polygonOffset=a.polygonOffset,this.polygonOffsetFactor=a.polygonOffsetFactor,this.polygonOffsetUnits=a.polygonOffsetUnits,this.dithering=a.dithering,this.alphaTest=a.alphaTest,this.premultipliedAlpha=a.premultipliedAlpha,this.visible=a.visible,this.toneMapped=a.toneMapped,this.userData=JSON.parse(JSON.stringify(a.userData)),this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Object.defineProperty(ba.prototype,"needsUpdate",{set:function(a){!0===a&&this.version++}}),bb.prototype=Object.create(ba.prototype),bb.prototype.constructor=bb,bb.prototype.isMeshBasicMaterial=!0,bb.prototype.copy=function(a){return ba.prototype.copy.call(this,a),this.color.copy(a.color),this.map=a.map,this.lightMap=a.lightMap,this.lightMapIntensity=a.lightMapIntensity,this.aoMap=a.aoMap,this.aoMapIntensity=a.aoMapIntensity,this.specularMap=a.specularMap,this.alphaMap=a.alphaMap,this.envMap=a.envMap,this.combine=a.combine,this.reflectivity=a.reflectivity,this.refractionRatio=a.refractionRatio,this.wireframe=a.wireframe,this.wireframeLinewidth=a.wireframeLinewidth,this.wireframeLinecap=a.wireframeLinecap,this.wireframeLinejoin=a.wireframeLinejoin,this.skinning=a.skinning,this.morphTargets=a.morphTargets,this};let bc=new O,bd=new E;function be(a,b,c){if(Array.isArray(a))throw TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=a,this.itemSize=b,this.count=void 0!==a?a.length/b:0,this.normalized=!0===c,this.usage=35044,this.updateRange={offset:0,count:-1},this.version=0}function bf(a,b,c){be.call(this,new Int8Array(a),b,c)}function bg(a,b,c){be.call(this,new Uint8Array(a),b,c)}function bh(a,b,c){be.call(this,new Uint8ClampedArray(a),b,c)}function bi(a,b,c){be.call(this,new Int16Array(a),b,c)}function bj(a,b,c){be.call(this,new Uint16Array(a),b,c)}function bk(a,b,c){be.call(this,new Int32Array(a),b,c)}function bl(a,b,c){be.call(this,new Uint32Array(a),b,c)}function bm(a,b,c){be.call(this,new Float32Array(a),b,c)}function bn(a,b,c){be.call(this,new Float64Array(a),b,c)}Object.defineProperty(be.prototype,"needsUpdate",{set:function(a){!0===a&&this.version++}}),Object.assign(be.prototype,{isBufferAttribute:!0,onUploadCallback:function(){},setUsage:function(a){return this.usage=a,this},copy:function(a){return this.name=a.name,this.array=new a.array.constructor(a.array),this.itemSize=a.itemSize,this.count=a.count,this.normalized=a.normalized,this.usage=a.usage,this},copyAt:function(a,b,c){a*=this.itemSize,c*=b.itemSize;for(let d=0,e=this.itemSize;d<e;d++)this.array[a+d]=b.array[c+d];return this},copyArray:function(a){return this.array.set(a),this},copyColorsArray:function(a){let b=this.array,c=0;for(let d=0,e=a.length;d<e;d++){let f=a[d];void 0===f&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",d),f=new a7),b[c++]=f.r,b[c++]=f.g,b[c++]=f.b}return this},copyVector2sArray:function(a){let b=this.array,c=0;for(let d=0,e=a.length;d<e;d++){let f=a[d];void 0===f&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",d),f=new E),b[c++]=f.x,b[c++]=f.y}return this},copyVector3sArray:function(a){let b=this.array,c=0;for(let d=0,e=a.length;d<e;d++){let f=a[d];void 0===f&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",d),f=new O),b[c++]=f.x,b[c++]=f.y,b[c++]=f.z}return this},copyVector4sArray:function(a){let b=this.array,c=0;for(let d=0,e=a.length;d<e;d++){let f=a[d];void 0===f&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",d),f=new K),b[c++]=f.x,b[c++]=f.y,b[c++]=f.z,b[c++]=f.w}return this},applyMatrix3:function(a){if(2===this.itemSize)for(let b=0,c=this.count;b<c;b++)bd.fromBufferAttribute(this,b),bd.applyMatrix3(a),this.setXY(b,bd.x,bd.y);else if(3===this.itemSize)for(let d=0,e=this.count;d<e;d++)bc.fromBufferAttribute(this,d),bc.applyMatrix3(a),this.setXYZ(d,bc.x,bc.y,bc.z);return this},applyMatrix4:function(a){for(let b=0,c=this.count;b<c;b++)bc.x=this.getX(b),bc.y=this.getY(b),bc.z=this.getZ(b),bc.applyMatrix4(a),this.setXYZ(b,bc.x,bc.y,bc.z);return this},applyNormalMatrix:function(a){for(let b=0,c=this.count;b<c;b++)bc.x=this.getX(b),bc.y=this.getY(b),bc.z=this.getZ(b),bc.applyNormalMatrix(a),this.setXYZ(b,bc.x,bc.y,bc.z);return this},transformDirection:function(a){for(let b=0,c=this.count;b<c;b++)bc.x=this.getX(b),bc.y=this.getY(b),bc.z=this.getZ(b),bc.transformDirection(a),this.setXYZ(b,bc.x,bc.y,bc.z);return this},set:function(a,b){return void 0===b&&(b=0),this.array.set(a,b),this},getX:function(a){return this.array[a*this.itemSize]},setX:function(a,b){return this.array[a*this.itemSize]=b,this},getY:function(a){return this.array[a*this.itemSize+1]},setY:function(a,b){return this.array[a*this.itemSize+1]=b,this},getZ:function(a){return this.array[a*this.itemSize+2]},setZ:function(a,b){return this.array[a*this.itemSize+2]=b,this},getW:function(a){return this.array[a*this.itemSize+3]},setW:function(a,b){return this.array[a*this.itemSize+3]=b,this},setXY:function(a,b,c){return a*=this.itemSize,this.array[a+0]=b,this.array[a+1]=c,this},setXYZ:function(a,b,c,d){return a*=this.itemSize,this.array[a+0]=b,this.array[a+1]=c,this.array[a+2]=d,this},setXYZW:function(a,b,c,d,e){return a*=this.itemSize,this.array[a+0]=b,this.array[a+1]=c,this.array[a+2]=d,this.array[a+3]=e,this},onUpload:function(a){return this.onUploadCallback=a,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)},toJSON:function(){return{itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized}}}),bf.prototype=Object.create(be.prototype),bf.prototype.constructor=bf,bg.prototype=Object.create(be.prototype),bg.prototype.constructor=bg,bh.prototype=Object.create(be.prototype),bh.prototype.constructor=bh,bi.prototype=Object.create(be.prototype),bi.prototype.constructor=bi,bj.prototype=Object.create(be.prototype),bj.prototype.constructor=bj,bk.prototype=Object.create(be.prototype),bk.prototype.constructor=bk,bl.prototype=Object.create(be.prototype),bl.prototype.constructor=bl,bm.prototype=Object.create(be.prototype),bm.prototype.constructor=bm,bn.prototype=Object.create(be.prototype),bn.prototype.constructor=bn;class bo{constructor(){this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1}computeGroups(a){let b=[],c,d,e,f=a.faces;for(d=0;d<f.length;d++){let g=f[d];g.materialIndex!==e&&(e=g.materialIndex,void 0!==c&&(c.count=3*d-c.start,b.push(c)),c={start:3*d,materialIndex:e})}void 0!==c&&(c.count=3*d-c.start,b.push(c)),this.groups=b}fromGeometry(a){let b=a.faces,c=a.vertices,d=a.faceVertexUvs,e=d[0]&&d[0].length>0,f=d[1]&&d[1].length>0,g=a.morphTargets,h=g.length,i;if(h>0){i=[];for(let j=0;j<h;j++)i[j]={name:g[j].name,data:[]};this.morphTargets.position=i}let k=a.morphNormals,l=k.length,m;if(l>0){m=[];for(let n=0;n<l;n++)m[n]={name:k[n].name,data:[]};this.morphTargets.normal=m}let o=a.skinIndices,p=a.skinWeights,q=o.length===c.length,r=p.length===c.length;c.length>0&&0===b.length&&console.error("THREE.DirectGeometry: Faceless geometries are not supported.");for(let s=0;s<b.length;s++){let t=b[s];this.vertices.push(c[t.a],c[t.b],c[t.c]);let u=t.vertexNormals;if(3===u.length)this.normals.push(u[0],u[1],u[2]);else{let v=t.normal;this.normals.push(v,v,v)}let w=t.vertexColors;if(3===w.length)this.colors.push(w[0],w[1],w[2]);else{let x=t.color;this.colors.push(x,x,x)}if(!0===e){let y=d[0][s];void 0!==y?this.uvs.push(y[0],y[1],y[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",s),this.uvs.push(new E,new E,new E))}if(!0===f){let z=d[1][s];void 0!==z?this.uvs2.push(z[0],z[1],z[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",s),this.uvs2.push(new E,new E,new E))}for(let A=0;A<h;A++){let B=g[A].vertices;i[A].data.push(B[t.a],B[t.b],B[t.c])}for(let C=0;C<l;C++){let D=k[C].vertexNormals[s];m[C].data.push(D.a,D.b,D.c)}q&&this.skinIndices.push(o[t.a],o[t.b],o[t.c]),r&&this.skinWeights.push(p[t.a],p[t.b],p[t.c])}return this.computeGroups(a),this.verticesNeedUpdate=a.verticesNeedUpdate,this.normalsNeedUpdate=a.normalsNeedUpdate,this.colorsNeedUpdate=a.colorsNeedUpdate,this.uvsNeedUpdate=a.uvsNeedUpdate,this.groupsNeedUpdate=a.groupsNeedUpdate,null!==a.boundingSphere&&(this.boundingSphere=a.boundingSphere.clone()),null!==a.boundingBox&&(this.boundingBox=a.boundingBox.clone()),this}}function bp(a){if(0===a.length)return-1/0;let b=a[0];for(let c=1,d=a.length;c<d;++c)a[c]>b&&(b=a[c]);return b}let bq=1,br=new ao,bs=new aN,bt=new O,bu=new R,bv=new R,bw=new O;function bx(){Object.defineProperty(this,"id",{value:bq+=2}),this.uuid=D.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}bx.prototype=Object.assign(Object.create(z.prototype),{constructor:bx,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(a){return Array.isArray(a)?this.index=new(bp(a)>65535?bl:bj)(a,1):this.index=a,this},getAttribute:function(a){return this.attributes[a]},setAttribute:function(a,b){return this.attributes[a]=b,this},deleteAttribute:function(a){return delete this.attributes[a],this},addGroup:function(a,b,c){this.groups.push({start:a,count:b,materialIndex:void 0!==c?c:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(a,b){this.drawRange.start=a,this.drawRange.count=b},applyMatrix4:function(a){let b=this.attributes.position;void 0!==b&&(b.applyMatrix4(a),b.needsUpdate=!0);let c=this.attributes.normal;if(void 0!==c){let d=new F().getNormalMatrix(a);c.applyNormalMatrix(d),c.needsUpdate=!0}let e=this.attributes.tangent;return void 0!==e&&(e.transformDirection(a),e.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this},rotateX:function(a){return br.makeRotationX(a),this.applyMatrix4(br),this},rotateY:function(a){return br.makeRotationY(a),this.applyMatrix4(br),this},rotateZ:function(a){return br.makeRotationZ(a),this.applyMatrix4(br),this},translate:function(a,b,c){return br.makeTranslation(a,b,c),this.applyMatrix4(br),this},scale:function(a,b,c){return br.makeScale(a,b,c),this.applyMatrix4(br),this},lookAt:function(a){return bs.lookAt(a),bs.updateMatrix(),this.applyMatrix4(bs.matrix),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(bt).negate(),this.translate(bt.x,bt.y,bt.z),this},setFromObject:function(a){let b=a.geometry;if(a.isPoints||a.isLine){let c=new bm(3*b.vertices.length,3),d=new bm(3*b.colors.length,3);if(this.setAttribute("position",c.copyVector3sArray(b.vertices)),this.setAttribute("color",d.copyColorsArray(b.colors)),b.lineDistances&&b.lineDistances.length===b.vertices.length){let e=new bm(b.lineDistances.length,1);this.setAttribute("lineDistance",e.copyArray(b.lineDistances))}null!==b.boundingSphere&&(this.boundingSphere=b.boundingSphere.clone()),null!==b.boundingBox&&(this.boundingBox=b.boundingBox.clone())}else a.isMesh&&b&&b.isGeometry&&this.fromGeometry(b);return this},setFromPoints:function(a){let b=[];for(let c=0,d=a.length;c<d;c++){let e=a[c];b.push(e.x,e.y,e.z||0)}return this.setAttribute("position",new bm(b,3)),this},updateFromObject:function(a){let b=a.geometry;if(a.isMesh){let c=b.__directGeometry;if(!0===b.elementsNeedUpdate&&(c=void 0,b.elementsNeedUpdate=!1),void 0===c)return this.fromGeometry(b);c.verticesNeedUpdate=b.verticesNeedUpdate,c.normalsNeedUpdate=b.normalsNeedUpdate,c.colorsNeedUpdate=b.colorsNeedUpdate,c.uvsNeedUpdate=b.uvsNeedUpdate,c.groupsNeedUpdate=b.groupsNeedUpdate,b.verticesNeedUpdate=!1,b.normalsNeedUpdate=!1,b.colorsNeedUpdate=!1,b.uvsNeedUpdate=!1,b.groupsNeedUpdate=!1,b=c}if(!0===b.verticesNeedUpdate){let d=this.attributes.position;void 0!==d&&(d.copyVector3sArray(b.vertices),d.needsUpdate=!0),b.verticesNeedUpdate=!1}if(!0===b.normalsNeedUpdate){let e=this.attributes.normal;void 0!==e&&(e.copyVector3sArray(b.normals),e.needsUpdate=!0),b.normalsNeedUpdate=!1}if(!0===b.colorsNeedUpdate){let f=this.attributes.color;void 0!==f&&(f.copyColorsArray(b.colors),f.needsUpdate=!0),b.colorsNeedUpdate=!1}if(b.uvsNeedUpdate){let g=this.attributes.uv;void 0!==g&&(g.copyVector2sArray(b.uvs),g.needsUpdate=!0),b.uvsNeedUpdate=!1}if(b.lineDistancesNeedUpdate){let h=this.attributes.lineDistance;void 0!==h&&(h.copyArray(b.lineDistances),h.needsUpdate=!0),b.lineDistancesNeedUpdate=!1}return b.groupsNeedUpdate&&(b.computeGroups(a.geometry),this.groups=b.groups,b.groupsNeedUpdate=!1),this},fromGeometry:function(a){return a.__directGeometry=new bo().fromGeometry(a),this.fromDirectGeometry(a.__directGeometry)},fromDirectGeometry:function(a){let b=new Float32Array(3*a.vertices.length);if(this.setAttribute("position",new be(b,3).copyVector3sArray(a.vertices)),a.normals.length>0){let c=new Float32Array(3*a.normals.length);this.setAttribute("normal",new be(c,3).copyVector3sArray(a.normals))}if(a.colors.length>0){let d=new Float32Array(3*a.colors.length);this.setAttribute("color",new be(d,3).copyColorsArray(a.colors))}if(a.uvs.length>0){let e=new Float32Array(2*a.uvs.length);this.setAttribute("uv",new be(e,2).copyVector2sArray(a.uvs))}if(a.uvs2.length>0){let f=new Float32Array(2*a.uvs2.length);this.setAttribute("uv2",new be(f,2).copyVector2sArray(a.uvs2))}for(let g in this.groups=a.groups,a.morphTargets){let h=[],i=a.morphTargets[g];for(let j=0,k=i.length;j<k;j++){let l=i[j],m=new bm(3*l.data.length,3);m.name=l.name,h.push(m.copyVector3sArray(l.data))}this.morphAttributes[g]=h}if(a.skinIndices.length>0){let n=new bm(4*a.skinIndices.length,4);this.setAttribute("skinIndex",n.copyVector4sArray(a.skinIndices))}if(a.skinWeights.length>0){let o=new bm(4*a.skinWeights.length,4);this.setAttribute("skinWeight",o.copyVector4sArray(a.skinWeights))}return null!==a.boundingSphere&&(this.boundingSphere=a.boundingSphere.clone()),null!==a.boundingBox&&(this.boundingBox=a.boundingBox.clone()),this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new R);let a=this.attributes.position,b=this.morphAttributes.position;if(a&&a.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new O(-1/0,-1/0,-1/0),new O(Infinity,Infinity,Infinity));return}if(void 0!==a){if(this.boundingBox.setFromBufferAttribute(a),b)for(let c=0,d=b.length;c<d;c++){let e=b[c];bu.setFromBufferAttribute(e),this.morphTargetsRelative?(bw.addVectors(this.boundingBox.min,bu.min),this.boundingBox.expandByPoint(bw),bw.addVectors(this.boundingBox.max,bu.max),this.boundingBox.expandByPoint(bw)):(this.boundingBox.expandByPoint(bu.min),this.boundingBox.expandByPoint(bu.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new af);let a=this.attributes.position,b=this.morphAttributes.position;if(a&&a.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new O,1/0);return}if(a){let c=this.boundingSphere.center;if(bu.setFromBufferAttribute(a),b)for(let d=0,e=b.length;d<e;d++){let f=b[d];bv.setFromBufferAttribute(f),this.morphTargetsRelative?(bw.addVectors(bu.min,bv.min),bu.expandByPoint(bw),bw.addVectors(bu.max,bv.max),bu.expandByPoint(bw)):(bu.expandByPoint(bv.min),bu.expandByPoint(bv.max))}bu.getCenter(c);let g=0;for(let h=0,i=a.count;h<i;h++)bw.fromBufferAttribute(a,h),g=Math.max(g,c.distanceToSquared(bw));if(b)for(let j=0,k=b.length;j<k;j++){let l=b[j],m=this.morphTargetsRelative;for(let n=0,o=l.count;n<o;n++)bw.fromBufferAttribute(l,n),m&&(bt.fromBufferAttribute(a,n),bw.add(bt)),g=Math.max(g,c.distanceToSquared(bw))}this.boundingSphere.radius=Math.sqrt(g),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}},computeFaceNormals:function(){},computeVertexNormals:function(){let a=this.index,b=this.getAttribute("position");if(void 0!==b){let c=this.getAttribute("normal");if(void 0===c)c=new be(new Float32Array(3*b.count),3),this.setAttribute("normal",c);else for(let d=0,e=c.count;d<e;d++)c.setXYZ(d,0,0,0);let f=new O,g=new O,h=new O,i=new O,j=new O,k=new O,l=new O,m=new O;if(a)for(let n=0,o=a.count;n<o;n+=3){let p=a.getX(n+0),q=a.getX(n+1),r=a.getX(n+2);f.fromBufferAttribute(b,p),g.fromBufferAttribute(b,q),h.fromBufferAttribute(b,r),l.subVectors(h,g),m.subVectors(f,g),l.cross(m),i.fromBufferAttribute(c,p),j.fromBufferAttribute(c,q),k.fromBufferAttribute(c,r),i.add(l),j.add(l),k.add(l),c.setXYZ(p,i.x,i.y,i.z),c.setXYZ(q,j.x,j.y,j.z),c.setXYZ(r,k.x,k.y,k.z)}else for(let s=0,t=b.count;s<t;s+=3)f.fromBufferAttribute(b,s+0),g.fromBufferAttribute(b,s+1),h.fromBufferAttribute(b,s+2),l.subVectors(h,g),m.subVectors(f,g),l.cross(m),c.setXYZ(s+0,l.x,l.y,l.z),c.setXYZ(s+1,l.x,l.y,l.z),c.setXYZ(s+2,l.x,l.y,l.z);this.normalizeNormals(),c.needsUpdate=!0}},merge:function(a,b){if(!(a&&a.isBufferGeometry)){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",a);return}void 0===b&&(b=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));let c=this.attributes;for(let d in c){if(void 0===a.attributes[d])continue;let e=c[d],f=e.array,g=a.attributes[d],h=g.array,i=g.itemSize*b,j=Math.min(h.length,f.length-i);for(let k=0,l=i;k<j;k++,l++)f[l]=h[k]}return this},normalizeNormals:function(){let a=this.attributes.normal;for(let b=0,c=a.count;b<c;b++)bw.fromBufferAttribute(a,b),bw.normalize(),a.setXYZ(b,bw.x,bw.y,bw.z)},toNonIndexed:function(){function a(a,b){let c=a.array,d=a.itemSize,e=a.normalized,f=new c.constructor(b.length*d),g=0,h=0;for(let i=0,j=b.length;i<j;i++){g=b[i]*d;for(let k=0;k<d;k++)f[h++]=c[g++]}return new be(f,d,e)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),this;let b=new bx,c=this.index.array,d=this.attributes;for(let e in d){let f=d[e],g=a(f,c);b.setAttribute(e,g)}let h=this.morphAttributes;for(let i in h){let j=[],k=h[i];for(let l=0,m=k.length;l<m;l++){let n=k[l],o=a(n,c);j.push(o)}b.morphAttributes[i]=j}b.morphTargetsRelative=this.morphTargetsRelative;let p=this.groups;for(let q=0,r=p.length;q<r;q++){let s=p[q];b.addGroup(s.start,s.count,s.materialIndex)}return b},toJSON:function(){let a={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(a.uuid=this.uuid,a.type=this.type,""!==this.name&&(a.name=this.name),Object.keys(this.userData).length>0&&(a.userData=this.userData),void 0!==this.parameters){let b=this.parameters;for(let c in b)void 0!==b[c]&&(a[c]=b[c]);return a}a.data={attributes:{}};let d=this.index;null!==d&&(a.data.index={type:d.array.constructor.name,array:Array.prototype.slice.call(d.array)});let e=this.attributes;for(let f in e){let g=e[f],h=g.toJSON(a.data);""!==g.name&&(h.name=g.name),a.data.attributes[f]=h}let i={},j=!1;for(let k in this.morphAttributes){let l=this.morphAttributes[k],m=[];for(let n=0,o=l.length;n<o;n++){let p=l[n],q=p.toJSON(a.data);""!==p.name&&(q.name=p.name),m.push(q)}m.length>0&&(i[k]=m,j=!0)}j&&(a.data.morphAttributes=i,a.data.morphTargetsRelative=this.morphTargetsRelative);let r=this.groups;r.length>0&&(a.data.groups=JSON.parse(JSON.stringify(r)));let s=this.boundingSphere;return null!==s&&(a.data.boundingSphere={center:s.center.toArray(),radius:s.radius}),a},clone:function(){return new bx().copy(this)},copy:function(a){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;let b={};this.name=a.name;let c=a.index;null!==c&&this.setIndex(c.clone(b));let d=a.attributes;for(let e in d){let f=d[e];this.setAttribute(e,f.clone(b))}let g=a.morphAttributes;for(let h in g){let i=[],j=g[h];for(let k=0,l=j.length;k<l;k++)i.push(j[k].clone(b));this.morphAttributes[h]=i}this.morphTargetsRelative=a.morphTargetsRelative;let m=a.groups;for(let n=0,o=m.length;n<o;n++){let p=m[n];this.addGroup(p.start,p.count,p.materialIndex)}let q=a.boundingBox;null!==q&&(this.boundingBox=q.clone());let r=a.boundingSphere;return null!==r&&(this.boundingSphere=r.clone()),this.drawRange.start=a.drawRange.start,this.drawRange.count=a.drawRange.count,this.userData=a.userData,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});let by=new ao,bz=new an,bA=new af,bB=new O,bC=new O,bD=new O,bE=new O,bF=new O,bG=new O,bH=new O,bI=new O,bJ=new O,bK=new E,bL=new E,bM=new E,bN=new O,bO=new O;function bP(a,b){aN.call(this),this.type="Mesh",this.geometry=void 0!==a?a:new bx,this.material=void 0!==b?b:new bb,this.updateMorphTargets()}function bQ(a,b,c,d,e,f,i,j){let k;if(null===(b.side===g?d.intersectTriangle(i,f,e,!0,j):d.intersectTriangle(e,f,i,b.side!==h,j)))return null;bO.copy(j),bO.applyMatrix4(a.matrixWorld);let l=c.ray.origin.distanceTo(bO);return l<c.near||l>c.far?null:{distance:l,point:bO.clone(),object:a}}function bR(a,b,c,d,e,f,g,h,i,j,k,l){bB.fromBufferAttribute(e,j),bC.fromBufferAttribute(e,k),bD.fromBufferAttribute(e,l);let m=a.morphTargetInfluences;if(b.morphTargets&&f&&m){bH.set(0,0,0),bI.set(0,0,0),bJ.set(0,0,0);for(let n=0,o=f.length;n<o;n++){let p=m[n],q=f[n];0!==p&&(bE.fromBufferAttribute(q,j),bF.fromBufferAttribute(q,k),bG.fromBufferAttribute(q,l),g?(bH.addScaledVector(bE,p),bI.addScaledVector(bF,p),bJ.addScaledVector(bG,p)):(bH.addScaledVector(bE.sub(bB),p),bI.addScaledVector(bF.sub(bC),p),bJ.addScaledVector(bG.sub(bD),p)))}bB.add(bH),bC.add(bI),bD.add(bJ)}a.isSkinnedMesh&&(a.boneTransform(j,bB),a.boneTransform(k,bC),a.boneTransform(l,bD));let r=bQ(a,b,c,d,bB,bC,bD,bN);if(r){h&&(bK.fromBufferAttribute(h,j),bL.fromBufferAttribute(h,k),bM.fromBufferAttribute(h,l),r.uv=a0.getUV(bN,bB,bC,bD,bK,bL,bM,new E)),i&&(bK.fromBufferAttribute(i,j),bL.fromBufferAttribute(i,k),bM.fromBufferAttribute(i,l),r.uv2=a0.getUV(bN,bB,bC,bD,bK,bL,bM,new E));let s=new a8(j,k,l);a0.getNormal(bB,bC,bD,s.normal),r.face=s}return r}bP.prototype=Object.assign(Object.create(aN.prototype),{constructor:bP,isMesh:!0,copy:function(a){return aN.prototype.copy.call(this,a),void 0!==a.morphTargetInfluences&&(this.morphTargetInfluences=a.morphTargetInfluences.slice()),void 0!==a.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},a.morphTargetDictionary)),this.material=a.material,this.geometry=a.geometry,this},updateMorphTargets:function(){let a=this.geometry;if(a.isBufferGeometry){let b=a.morphAttributes,c=Object.keys(b);if(c.length>0){let d=b[c[0]];if(void 0!==d){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,f=d.length;e<f;e++){let g=d[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[g]=e}}}}else{let h=a.morphTargets;void 0!==h&&h.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}},raycast:function(a,b){let c=this.geometry,d=this.material,e=this.matrixWorld;if(void 0===d||(null===c.boundingSphere&&c.computeBoundingSphere(),bA.copy(c.boundingSphere),bA.applyMatrix4(e),!1===a.ray.intersectsSphere(bA))||(by.getInverse(e),bz.copy(a.ray).applyMatrix4(by),null!==c.boundingBox&& !1===bz.intersectsBox(c.boundingBox)))return;let f;if(c.isBufferGeometry){let g=c.index,h=c.attributes.position,i=c.morphAttributes.position,j=c.morphTargetsRelative,k=c.attributes.uv,l=c.attributes.uv2,m=c.groups,n=c.drawRange;if(null!==g){if(Array.isArray(d))for(let o=0,p=m.length;o<p;o++){let q=m[o],r=d[q.materialIndex],s=Math.max(q.start,n.start),t=Math.min(q.start+q.count,n.start+n.count);for(let u=s,v=t;u<v;u+=3){let w=g.getX(u),x=g.getX(u+1),y=g.getX(u+2);(f=bR(this,r,a,bz,h,i,j,k,l,w,x,y))&&(f.faceIndex=Math.floor(u/3),f.face.materialIndex=q.materialIndex,b.push(f))}}else{let z=Math.max(0,n.start),A=Math.min(g.count,n.start+n.count);for(let B=z,C=A;B<C;B+=3){let D=g.getX(B),F=g.getX(B+1),G=g.getX(B+2);(f=bR(this,d,a,bz,h,i,j,k,l,D,F,G))&&(f.faceIndex=Math.floor(B/3),b.push(f))}}}else if(void 0!==h){if(Array.isArray(d))for(let H=0,I=m.length;H<I;H++){let J=m[H],K=d[J.materialIndex],L=Math.max(J.start,n.start),M=Math.min(J.start+J.count,n.start+n.count);for(let N=L,O=M;N<O;N+=3){let P=N,Q=N+1,R=N+2;(f=bR(this,K,a,bz,h,i,j,k,l,P,Q,R))&&(f.faceIndex=Math.floor(N/3),f.face.materialIndex=J.materialIndex,b.push(f))}}else{let S=Math.max(0,n.start),T=Math.min(h.count,n.start+n.count);for(let U=S,V=T;U<V;U+=3){let W=U,X=U+1,Y=U+2;(f=bR(this,d,a,bz,h,i,j,k,l,W,X,Y))&&(f.faceIndex=Math.floor(U/3),b.push(f))}}}}else if(c.isGeometry){let Z=Array.isArray(d),$=c.vertices,_=c.faces,aa,ab=c.faceVertexUvs[0];ab.length>0&&(aa=ab);for(let ac=0,ad=_.length;ac<ad;ac++){let ae=_[ac],af=Z?d[ae.materialIndex]:d;if(void 0===af)continue;let ag=$[ae.a],ah=$[ae.b],ai=$[ae.c];if(f=bQ(this,af,a,bz,ag,ah,ai,bN)){if(aa&&aa[ac]){let aj=aa[ac];bK.copy(aj[0]),bL.copy(aj[1]),bM.copy(aj[2]),f.uv=a0.getUV(bN,ag,ah,ai,bK,bL,bM,new E)}f.face=ae,f.faceIndex=ac,b.push(f)}}}}});class bS extends bx{constructor(a=1,b=1,c=1,d=1,e=1,f=1){super(),this.type="BoxBufferGeometry",this.parameters={width:a,height:b,depth:c,widthSegments:d,heightSegments:e,depthSegments:f};let g=this;d=Math.floor(d),e=Math.floor(e),f=Math.floor(f);let h=[],i=[],j=[],k=[],l=0,m=0;function n(a,b,c,d,e,f,n,o,p,q,r){let s=f/p,t=n/q,u=f/2,v=n/2,w=o/2,x=p+1,y=q+1,z=0,A=0,B=new O;for(let C=0;C<y;C++){let D=C*t-v;for(let E=0;E<x;E++){let F=E*s-u;B[a]=F*d,B[b]=D*e,B[c]=w,i.push(B.x,B.y,B.z),B[a]=0,B[b]=0,B[c]=o>0?1:-1,j.push(B.x,B.y,B.z),k.push(E/p),k.push(1-C/q),z+=1}}for(let G=0;G<q;G++)for(let H=0;H<p;H++){let I=l+H+x*G,J=l+H+x*(G+1),K=l+(H+1)+x*(G+1),L=l+(H+1)+x*G;h.push(I,J,L),h.push(J,K,L),A+=6}g.addGroup(m,A,r),m+=A,l+=z}n("z","y","x",-1,-1,c,b,a,f,e,0),n("z","y","x",1,-1,c,b,-a,f,e,1),n("x","z","y",1,1,a,c,b,d,f,2),n("x","z","y",1,-1,a,c,-b,d,f,3),n("x","y","z",1,-1,a,b,c,d,e,4),n("x","y","z",-1,-1,a,b,-c,d,e,5),this.setIndex(h),this.setAttribute("position",new bm(i,3)),this.setAttribute("normal",new bm(j,3)),this.setAttribute("uv",new bm(k,2))}}function bT(a){let b={};for(let c in a)for(let d in b[c]={},a[c]){let e=a[c][d];e&&(e.isColor||e.isMatrix3||e.isMatrix4||e.isVector2||e.isVector3||e.isVector4||e.isTexture)?b[c][d]=e.clone():Array.isArray(e)?b[c][d]=e.slice():b[c][d]=e}return b}function bU(a){let b={};for(let c=0;c<a.length;c++){let d=bT(a[c]);for(let e in d)b[e]=d[e]}return b}let bV={clone:bT,merge:bU};function bW(a){ba.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==a&&(void 0!==a.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(a))}function bX(){aN.call(this),this.type="Camera",this.matrixWorldInverse=new ao,this.projectionMatrix=new ao,this.projectionMatrixInverse=new ao}function bY(a,b,c,d){bX.call(this),this.type="PerspectiveCamera",this.fov=void 0!==a?a:50,this.zoom=1,this.near=void 0!==c?c:.1,this.far=void 0!==d?d:2e3,this.focus=10,this.aspect=void 0!==b?b:1,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}function bZ(a,b,c){if(aN.call(this),this.type="CubeCamera",!0!==c.isWebGLCubeRenderTarget){console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");return}this.renderTarget=c;let d=new bY(90,1,a,b);d.layers=this.layers,d.up.set(0,-1,0),d.lookAt(new O(1,0,0)),this.add(d);let e=new bY(90,1,a,b);e.layers=this.layers,e.up.set(0,-1,0),e.lookAt(new O(-1,0,0)),this.add(e);let f=new bY(90,1,a,b);f.layers=this.layers,f.up.set(0,0,1),f.lookAt(new O(0,1,0)),this.add(f);let g=new bY(90,1,a,b);g.layers=this.layers,g.up.set(0,0,-1),g.lookAt(new O(0,-1,0)),this.add(g);let h=new bY(90,1,a,b);h.layers=this.layers,h.up.set(0,-1,0),h.lookAt(new O(0,0,1)),this.add(h);let i=new bY(90,1,a,b);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new O(0,0,-1)),this.add(i),this.update=function(a,b){null===this.parent&&this.updateMatrixWorld();let j=a.xr.enabled,k=a.getRenderTarget();a.xr.enabled=!1;let l=c.texture.generateMipmaps;c.texture.generateMipmaps=!1,a.setRenderTarget(c,0),a.render(b,d),a.setRenderTarget(c,1),a.render(b,e),a.setRenderTarget(c,2),a.render(b,f),a.setRenderTarget(c,3),a.render(b,g),a.setRenderTarget(c,4),a.render(b,h),c.texture.generateMipmaps=l,a.setRenderTarget(c,5),a.render(b,i),a.setRenderTarget(k),a.xr.enabled=j},this.clear=function(a,b,d,e){let f=a.getRenderTarget();for(let g=0;g<6;g++)a.setRenderTarget(c,g),a.clear(b,d,e);a.setRenderTarget(f)}}function b$(a,b,c,d,e,f,g,h,i,j){a=void 0!==a?a:[],b=void 0!==b?b:301,g=void 0!==g?g:r,J.call(this,a,b,c,d,e,f,g,h,i,j),this.flipY=!1,this._needsFlipEnvMap=!0}function b_(a,b,c){Number.isInteger(b)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),b=c),L.call(this,a,a,b),b=b||{},this.texture=new b$(void 0,b.mapping,b.wrapS,b.wrapT,b.magFilter,b.minFilter,b.format,b.type,b.anisotropy,b.encoding),this.texture._needsFlipEnvMap=!1}function b0(a,b,c,d,e,f,g,h,i,j,k,m){J.call(this,null,f,g,h,i,j,d,e,k,m),this.image={data:a||null,width:b||1,height:c||1},this.magFilter=void 0!==i?i:l,this.minFilter=void 0!==j?j:l,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}bW.prototype=Object.create(ba.prototype),bW.prototype.constructor=bW,bW.prototype.isShaderMaterial=!0,bW.prototype.copy=function(a){return ba.prototype.copy.call(this,a),this.fragmentShader=a.fragmentShader,this.vertexShader=a.vertexShader,this.uniforms=bT(a.uniforms),this.defines=Object.assign({},a.defines),this.wireframe=a.wireframe,this.wireframeLinewidth=a.wireframeLinewidth,this.lights=a.lights,this.clipping=a.clipping,this.skinning=a.skinning,this.morphTargets=a.morphTargets,this.morphNormals=a.morphNormals,this.extensions=Object.assign({},a.extensions),this.glslVersion=a.glslVersion,this},bW.prototype.toJSON=function(a){let b=ba.prototype.toJSON.call(this,a);for(let c in b.glslVersion=this.glslVersion,b.uniforms={},this.uniforms){let d=this.uniforms[c],e=d.value;e&&e.isTexture?b.uniforms[c]={type:"t",value:e.toJSON(a).uuid}:e&&e.isColor?b.uniforms[c]={type:"c",value:e.getHex()}:e&&e.isVector2?b.uniforms[c]={type:"v2",value:e.toArray()}:e&&e.isVector3?b.uniforms[c]={type:"v3",value:e.toArray()}:e&&e.isVector4?b.uniforms[c]={type:"v4",value:e.toArray()}:e&&e.isMatrix3?b.uniforms[c]={type:"m3",value:e.toArray()}:e&&e.isMatrix4?b.uniforms[c]={type:"m4",value:e.toArray()}:b.uniforms[c]={value:e}}Object.keys(this.defines).length>0&&(b.defines=this.defines),b.vertexShader=this.vertexShader,b.fragmentShader=this.fragmentShader;let f={};for(let g in this.extensions)!0===this.extensions[g]&&(f[g]=!0);return Object.keys(f).length>0&&(b.extensions=f),b},bX.prototype=Object.assign(Object.create(aN.prototype),{constructor:bX,isCamera:!0,copy:function(a,b){return aN.prototype.copy.call(this,a,b),this.matrixWorldInverse.copy(a.matrixWorldInverse),this.projectionMatrix.copy(a.projectionMatrix),this.projectionMatrixInverse.copy(a.projectionMatrixInverse),this},getWorldDirection:function(a){void 0===a&&(console.warn("THREE.Camera: .getWorldDirection() target is now required"),a=new O),this.updateMatrixWorld(!0);let b=this.matrixWorld.elements;return a.set(-b[8],-b[9],-b[10]).normalize()},updateMatrixWorld:function(a){aN.prototype.updateMatrixWorld.call(this,a),this.matrixWorldInverse.getInverse(this.matrixWorld)},updateWorldMatrix:function(a,b){aN.prototype.updateWorldMatrix.call(this,a,b),this.matrixWorldInverse.getInverse(this.matrixWorld)},clone:function(){return new this.constructor().copy(this)}}),bY.prototype=Object.assign(Object.create(bX.prototype),{constructor:bY,isPerspectiveCamera:!0,copy:function(a,b){return bX.prototype.copy.call(this,a,b),this.fov=a.fov,this.zoom=a.zoom,this.near=a.near,this.far=a.far,this.focus=a.focus,this.aspect=a.aspect,this.view=null===a.view?null:Object.assign({},a.view),this.filmGauge=a.filmGauge,this.filmOffset=a.filmOffset,this},setFocalLength:function(a){let b=.5*this.getFilmHeight()/a;this.fov=2*D.RAD2DEG*Math.atan(b),this.updateProjectionMatrix()},getFocalLength:function(){let a=Math.tan(.5*D.DEG2RAD*this.fov);return .5*this.getFilmHeight()/a},getEffectiveFOV:function(){return 2*D.RAD2DEG*Math.atan(Math.tan(.5*D.DEG2RAD*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(a,b,c,d,e,f){this.aspect=a/b,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=a,this.view.fullHeight=b,this.view.offsetX=c,this.view.offsetY=d,this.view.width=e,this.view.height=f,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){let a=this.near,b=a*Math.tan(.5*D.DEG2RAD*this.fov)/this.zoom,c=2*b,d=this.aspect*c,e=-.5*d,f=this.view;if(null!==this.view&&this.view.enabled){let g=f.fullWidth,h=f.fullHeight;e+=f.offsetX*d/g,b-=f.offsetY*c/h,d*=f.width/g,c*=f.height/h}let i=this.filmOffset;0!==i&&(e+=a*i/this.getFilmWidth()),this.projectionMatrix.makePerspective(e,e+d,b,b-c,a,this.far),this.projectionMatrixInverse.getInverse(this.projectionMatrix)},toJSON:function(a){let b=aN.prototype.toJSON.call(this,a);return b.object.fov=this.fov,b.object.zoom=this.zoom,b.object.near=this.near,b.object.far=this.far,b.object.focus=this.focus,b.object.aspect=this.aspect,null!==this.view&&(b.object.view=Object.assign({},this.view)),b.object.filmGauge=this.filmGauge,b.object.filmOffset=this.filmOffset,b}}),bZ.prototype=Object.create(aN.prototype),bZ.prototype.constructor=bZ,b$.prototype=Object.create(J.prototype),b$.prototype.constructor=b$,b$.prototype.isCubeTexture=!0,Object.defineProperty(b$.prototype,"images",{get:function(){return this.image},set:function(a){this.image=a}}),b_.prototype=Object.create(L.prototype),b_.prototype.constructor=b_,b_.prototype.isWebGLCubeRenderTarget=!0,b_.prototype.fromEquirectangularTexture=function(a,b){this.texture.type=b.type,this.texture.format=1023,this.texture.encoding=b.encoding,this.texture.generateMipmaps=b.generateMipmaps,this.texture.minFilter=b.minFilter,this.texture.magFilter=b.magFilter;let c={uniforms:{tEquirect:{value:null}},vertexShader:`

			varying vec3 vWorldDirection;

			vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

				return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

			}

			void main() {

				vWorldDirection = transformDirection( position, modelMatrix );

				#include <begin_vertex>
				#include <project_vertex>

			}
		`,fragmentShader:`

			uniform sampler2D tEquirect;

			varying vec3 vWorldDirection;

			#include <common>

			void main() {

				vec3 direction = normalize( vWorldDirection );

				vec2 sampleUV = equirectUv( direction );

				gl_FragColor = texture2D( tEquirect, sampleUV );

			}
		`},d=new bS(5,5,5),e=new bW({name:"CubemapFromEquirect",uniforms:bT(c.uniforms),vertexShader:c.vertexShader,fragmentShader:c.fragmentShader,side:g,blending:0});e.uniforms.tEquirect.value=b;let f=new bP(d,e),h=b.minFilter;b.minFilter===q&&(b.minFilter=o);let i=new bZ(1,10,this);return i.update(a,f),b.minFilter=h,f.geometry.dispose(),f.material.dispose(),this},b0.prototype=Object.create(J.prototype),b0.prototype.constructor=b0,b0.prototype.isDataTexture=!0;let b1=new af,b2=new O;class b3{constructor(a,b,c,d,e,f){this.planes=[void 0!==a?a:new aR,void 0!==b?b:new aR,void 0!==c?c:new aR,void 0!==d?d:new aR,void 0!==e?e:new aR,void 0!==f?f:new aR]}set(a,b,c,d,e,f){let g=this.planes;return g[0].copy(a),g[1].copy(b),g[2].copy(c),g[3].copy(d),g[4].copy(e),g[5].copy(f),this}clone(){return new this.constructor().copy(this)}copy(a){let b=this.planes;for(let c=0;c<6;c++)b[c].copy(a.planes[c]);return this}setFromProjectionMatrix(a){let b=this.planes,c=a.elements,d=c[0],e=c[1],f=c[2],g=c[3],h=c[4],i=c[5],j=c[6],k=c[7],l=c[8],m=c[9],n=c[10],o=c[11],p=c[12],q=c[13],r=c[14],s=c[15];return b[0].setComponents(g-d,k-h,o-l,s-p).normalize(),b[1].setComponents(g+d,k+h,o+l,s+p).normalize(),b[2].setComponents(g+e,k+i,o+m,s+q).normalize(),b[3].setComponents(g-e,k-i,o-m,s-q).normalize(),b[4].setComponents(g-f,k-j,o-n,s-r).normalize(),b[5].setComponents(g+f,k+j,o+n,s+r).normalize(),this}intersectsObject(a){let b=a.geometry;return null===b.boundingSphere&&b.computeBoundingSphere(),b1.copy(b.boundingSphere).applyMatrix4(a.matrixWorld),this.intersectsSphere(b1)}intersectsSprite(a){return b1.center.set(0,0,0),b1.radius=.7071067811865476,b1.applyMatrix4(a.matrixWorld),this.intersectsSphere(b1)}intersectsSphere(a){let b=this.planes,c=a.center,d=-a.radius;for(let e=0;e<6;e++){let f=b[e].distanceToPoint(c);if(f<d)return!1}return!0}intersectsBox(a){let b=this.planes;for(let c=0;c<6;c++){let d=b[c];if(b2.x=d.normal.x>0?a.max.x:a.min.x,b2.y=d.normal.y>0?a.max.y:a.min.y,b2.z=d.normal.z>0?a.max.z:a.min.z,0>d.distanceToPoint(b2))return!1}return!0}containsPoint(a){let b=this.planes;for(let c=0;c<6;c++)if(0>b[c].distanceToPoint(a))return!1;return!0}}function b4(){let a=null,b=!1,c=null,d=null;function e(b,f){c(b,f),d=a.requestAnimationFrame(e)}return{start:function(){!0!==b&&null!==c&&(d=a.requestAnimationFrame(e),b=!0)},stop:function(){a.cancelAnimationFrame(d),b=!1},setAnimationLoop:function(a){c=a},setContext:function(b){a=b}}}function b5(a,b){let c=b.isWebGL2,d=new WeakMap;return{get:function(a){return a.isInterleavedBufferAttribute&&(a=a.data),d.get(a)},remove:function(b){b.isInterleavedBufferAttribute&&(b=b.data);let c=d.get(b);c&&(a.deleteBuffer(c.buffer),d.delete(b))},update:function(b,e){if(b.isGLBufferAttribute){var f=d.get(b);(!f||f.version<b.version)&&d.set(b,{buffer:b.buffer,type:b.type,bytesPerElement:b.elementSize,version:b.version});return}b.isInterleavedBufferAttribute&&(b=b.data);let g=d.get(b);void 0===g?d.set(b,function(b,c){let d=b.array,e=b.usage,f=a.createBuffer();a.bindBuffer(c,f),a.bufferData(c,d,e),b.onUploadCallback();let g=5126;return d instanceof Float32Array?g=5126:d instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):d instanceof Uint16Array?g=5123:d instanceof Int16Array?g=5122:d instanceof Uint32Array?g=5125:d instanceof Int32Array?g=5124:d instanceof Int8Array?g=5120:d instanceof Uint8Array&&(g=5121),{buffer:f,type:g,bytesPerElement:d.BYTES_PER_ELEMENT,version:b.version}}(b,e)):g.version<b.version&&(!function(b,d,e){let f=d.array,g=d.updateRange;a.bindBuffer(e,b),-1===g.count?a.bufferSubData(e,0,f):(c?a.bufferSubData(e,g.offset*f.BYTES_PER_ELEMENT,f,g.offset,g.count):a.bufferSubData(e,g.offset*f.BYTES_PER_ELEMENT,f.subarray(g.offset,g.offset+g.count)),g.count=-1)}(g.buffer,b,e),g.version=b.version)}}}class b6 extends bx{constructor(a,b,c,d){super(),this.type="PlaneBufferGeometry",this.parameters={width:a,height:b,widthSegments:c,heightSegments:d},a=a||1,b=b||1;let e=a/2,f=b/2,g=Math.floor(c)||1,h=Math.floor(d)||1,i=g+1,j=h+1,k=a/g,l=b/h,m=[],n=[],o=[],p=[];for(let q=0;q<j;q++){let r=q*l-f;for(let s=0;s<i;s++){let t=s*k-e;n.push(t,-r,0),o.push(0,0,1),p.push(s/g),p.push(1-q/h)}}for(let u=0;u<h;u++)for(let v=0;v<g;v++){let w=v+i*u,x=v+i*(u+1),y=v+1+i*(u+1),z=v+1+i*u;m.push(w,x,z),m.push(x,y,z)}this.setIndex(m),this.setAttribute("position",new bm(n,3)),this.setAttribute("normal",new bm(o,3)),this.setAttribute("uv",new bm(p,2))}}let b7={alphamap_fragment:"#ifdef USE_ALPHAMAP\n	diffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n	uniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef ALPHATEST\n	if ( diffuseColor.a < ALPHATEST ) discard;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n	reflectedLight.indirectDiffuse *= ambientOcclusion;\n	#if defined( USE_ENVMAP ) && defined( STANDARD )\n		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n	#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n	uniform sampler2D aoMap;\n	uniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n	vec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n	vec4 r = roughness * c0 + c1;\n	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n	return vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n	if( cutoffDistance > 0.0 ) {\n		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n	}\n	return distanceFalloff;\n#else\n	if( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n		return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n	}\n	return 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n	return RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n	float fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n	return ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n	float fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n	vec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n	return Fr * fresnel + F0;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n	float a2 = pow2( alpha );\n	float gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n	float gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n	return 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n	float a2 = pow2( alpha );\n	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n	return 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n	float a2 = pow2( alpha );\n	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n	return RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n	float alpha = pow2( roughness );\n	vec3 halfDir = normalize( incidentLight.direction + viewDir );\n	float dotNL = saturate( dot( normal, incidentLight.direction ) );\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n	vec3 F = F_Schlick( specularColor, dotLH );\n	float G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n	float D = D_GGX( alpha, dotNH );\n	return F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n	const float LUT_SIZE = 64.0;\n	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n	const float LUT_BIAS = 0.5 / LUT_SIZE;\n	float dotNV = saturate( dot( N, V ) );\n	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n	uv = uv * LUT_SCALE + LUT_BIAS;\n	return uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n	float l = length( f );\n	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n	float x = dot( v1, v2 );\n	float y = abs( x );\n	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n	float b = 3.4175940 + ( 4.1616724 + y ) * y;\n	float v = a / b;\n	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n	return cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n	vec3 lightNormal = cross( v1, v2 );\n	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n	vec3 T1, T2;\n	T1 = normalize( V - N * dot( V, N ) );\n	T2 = - cross( N, T1 );\n	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n	vec3 coords[ 4 ];\n	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n	coords[ 0 ] = normalize( coords[ 0 ] );\n	coords[ 1 ] = normalize( coords[ 1 ] );\n	coords[ 2 ] = normalize( coords[ 2 ] );\n	coords[ 3 ] = normalize( coords[ 3 ] );\n	vec3 vectorFormFactor = vec3( 0.0 );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n	return vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n	float dotNV = saturate( dot( normal, viewDir ) );\n	vec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n	return specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n	float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n	vec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n	vec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n	vec3 FssEss = F * brdf.x + brdf.y;\n	float Ess = brdf.x + brdf.y;\n	float Ems = 1.0 - Ess;\n	vec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n	singleScatter += FssEss;\n	multiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n	return 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n	vec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n	float dotNH = saturate( dot( geometry.normal, halfDir ) );\n	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n	vec3 F = F_Schlick( specularColor, dotLH );\n	float G = G_BlinnPhong_Implicit( );\n	float D = D_BlinnPhong( shininess, dotNH );\n	return F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n	return ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n	return sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie(float roughness, float NoH) {\n	float invAlpha = 1.0 / roughness;\n	float cos2h = NoH * NoH;\n	float sin2h = max(1.0 - cos2h, 0.0078125);	return (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\nfloat V_Neubelt(float NoV, float NoL) {\n	return saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n	vec3 N = geometry.normal;\n	vec3 V = geometry.viewDir;\n	vec3 H = normalize( V + L );\n	float dotNH = saturate( dot( N, H ) );\n	return specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n	uniform sampler2D bumpMap;\n	uniform float bumpScale;\n	vec2 dHdxy_fwd() {\n		vec2 dSTdx = dFdx( vUv );\n		vec2 dSTdy = dFdy( vUv );\n		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n		return vec2( dBx, dBy );\n	}\n	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n		vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n		vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n		vec3 vN = surf_norm;\n		vec3 R1 = cross( vSigmaY, vN );\n		vec3 R2 = cross( vN, vSigmaX );\n		float fDet = dot( vSigmaX, R1 );\n		fDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n		return normalize( abs( fDet ) * surf_norm - vGrad );\n	}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n	vec4 plane;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n		plane = clippingPlanes[ i ];\n		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n	}\n	#pragma unroll_loop_end\n	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n		bool clipped = true;\n		#pragma unroll_loop_start\n		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n			plane = clippingPlanes[ i ];\n			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n		}\n		#pragma unroll_loop_end\n		if ( clipped ) discard;\n	#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n	varying vec3 vClipPosition;\n	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n	varying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n	vClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#ifdef USE_COLOR\n	diffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#ifdef USE_COLOR\n	varying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n	varying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n	vColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n	vColor.xyz *= color.xyz;\n#endif\n#ifdef USE_INSTANCING_COLOR\n	vColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n	const highp float a = 12.9898, b = 78.233, c = 43758.5453;\n	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n	return fract(sin(sn) * c);\n}\n#ifdef HIGH_PRECISION\n	float precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n	float max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n	float precisionSafeLength( vec3 v ) {\n		float maxComponent = max3( abs( v ) );\n		return length( v / maxComponent ) * maxComponent;\n	}\n#endif\nstruct IncidentLight {\n	vec3 color;\n	vec3 direction;\n	bool visible;\n};\nstruct ReflectedLight {\n	vec3 directDiffuse;\n	vec3 directSpecular;\n	vec3 indirectDiffuse;\n	vec3 indirectSpecular;\n};\nstruct GeometricContext {\n	vec3 position;\n	vec3 normal;\n	vec3 viewDir;\n#ifdef CLEARCOAT\n	vec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n	float distance = dot( planeNormal, point - pointOnPlane );\n	return - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n	return sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n	return lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n	mat3 tmp;\n	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n	return tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n	vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n	return dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n	return m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n	return vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n	#define cubeUV_maxMipLevel 8.0\n	#define cubeUV_minMipLevel 4.0\n	#define cubeUV_maxTileSize 256.0\n	#define cubeUV_minTileSize 16.0\n	float getFace( vec3 direction ) {\n		vec3 absDirection = abs( direction );\n		float face = - 1.0;\n		if ( absDirection.x > absDirection.z ) {\n			if ( absDirection.x > absDirection.y )\n				face = direction.x > 0.0 ? 0.0 : 3.0;\n			else\n				face = direction.y > 0.0 ? 1.0 : 4.0;\n		} else {\n			if ( absDirection.z > absDirection.y )\n				face = direction.z > 0.0 ? 2.0 : 5.0;\n			else\n				face = direction.y > 0.0 ? 1.0 : 4.0;\n		}\n		return face;\n	}\n	vec2 getUV( vec3 direction, float face ) {\n		vec2 uv;\n		if ( face == 0.0 ) {\n			uv = vec2( direction.z, direction.y ) / abs( direction.x );\n		} else if ( face == 1.0 ) {\n			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n		} else if ( face == 2.0 ) {\n			uv = vec2( - direction.x, direction.y ) / abs( direction.z );\n		} else if ( face == 3.0 ) {\n			uv = vec2( - direction.z, direction.y ) / abs( direction.x );\n		} else if ( face == 4.0 ) {\n			uv = vec2( - direction.x, direction.z ) / abs( direction.y );\n		} else {\n			uv = vec2( direction.x, direction.y ) / abs( direction.z );\n		}\n		return 0.5 * ( uv + 1.0 );\n	}\n	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n		float face = getFace( direction );\n		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n		mipInt = max( mipInt, cubeUV_minMipLevel );\n		float faceSize = exp2( mipInt );\n		float texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\n		vec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\n		vec2 f = fract( uv );\n		uv += 0.5 - f;\n		if ( face > 2.0 ) {\n			uv.y += faceSize;\n			face -= 3.0;\n		}\n		uv.x += face * faceSize;\n		if ( mipInt < cubeUV_maxMipLevel ) {\n			uv.y += 2.0 * cubeUV_maxTileSize;\n		}\n		uv.y += filterInt * 2.0 * cubeUV_minTileSize;\n		uv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\n		uv *= texelSize;\n		vec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n		uv.x += texelSize;\n		vec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n		uv.y += texelSize;\n		vec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n		uv.x -= texelSize;\n		vec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n		vec3 tm = mix( tl, tr, f.x );\n		vec3 bm = mix( bl, br, f.x );\n		return mix( tm, bm, f.y );\n	}\n	#define r0 1.0\n	#define v0 0.339\n	#define m0 - 2.0\n	#define r1 0.8\n	#define v1 0.276\n	#define m1 - 1.0\n	#define r4 0.4\n	#define v4 0.046\n	#define m4 2.0\n	#define r5 0.305\n	#define v5 0.016\n	#define m5 3.0\n	#define r6 0.21\n	#define v6 0.0038\n	#define m6 4.0\n	float roughnessToMip( float roughness ) {\n		float mip = 0.0;\n		if ( roughness >= r1 ) {\n			mip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n		} else if ( roughness >= r4 ) {\n			mip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n		} else if ( roughness >= r5 ) {\n			mip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n		} else if ( roughness >= r6 ) {\n			mip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n		} else {\n			mip = - 2.0 * log2( 1.16 * roughness );		}\n		return mip;\n	}\n	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n		float mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\n		float mipF = fract( mip );\n		float mipInt = floor( mip );\n		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n		if ( mipF == 0.0 ) {\n			return vec4( color0, 1.0 );\n		} else {\n			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n			return vec4( mix( color0, color1, mipF ), 1.0 );\n		}\n	}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n	mat3 m = mat3( instanceMatrix );\n	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n	transformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n	transformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n	#ifdef FLIP_SIDED\n		transformedTangent = - transformedTangent;\n	#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n	uniform sampler2D displacementMap;\n	uniform float displacementScale;\n	uniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n	vec4 emissiveColor = texture2D( emissiveMap, vUv );\n	emissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n	totalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n	uniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"\nvec4 LinearToLinear( in vec4 value ) {\n	return value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n	return vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n	return vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n	return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n	float maxComponent = max( max( value.r, value.g ), value.b );\n	float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n	return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n	return vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n	float maxRGB = max( value.r, max( value.g, value.b ) );\n	float M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n	M = ceil( M * 255.0 ) / 255.0;\n	return vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n	return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n	float maxRGB = max( value.r, max( value.g, value.b ) );\n	float D = max( maxRange / maxRGB, 1.0 );\n	D = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n	return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value ) {\n	vec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n	Xp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n	vec4 vResult;\n	vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n	float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n	vResult.w = fract( Le );\n	vResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n	return vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n	float Le = value.z * 255.0 + value.w;\n	vec3 Xp_Y_XYZp;\n	Xp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n	Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n	Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n	vec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n	return vec4( max( vRGB, 0.0 ), 1.0 );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n	#ifdef ENV_WORLDPOS\n		vec3 cameraToFrag;\n		if ( isOrthographic ) {\n			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n		} else {\n			cameraToFrag = normalize( vWorldPosition - cameraPosition );\n		}\n		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vec3 reflectVec = reflect( cameraToFrag, worldNormal );\n		#else\n			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n		#endif\n	#else\n		vec3 reflectVec = vReflect;\n	#endif\n	#ifdef ENVMAP_TYPE_CUBE\n		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n	#elif defined( ENVMAP_TYPE_CUBE_UV )\n		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n	#else\n		vec4 envColor = vec4( 0.0 );\n	#endif\n	#ifndef ENVMAP_TYPE_CUBE_UV\n		envColor = envMapTexelToLinear( envColor );\n	#endif\n	#ifdef ENVMAP_BLENDING_MULTIPLY\n		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_MIX )\n		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_ADD )\n		outgoingLight += envColor.xyz * specularStrength * reflectivity;\n	#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n	uniform float envMapIntensity;\n	uniform float flipEnvMap;\n	uniform int maxMipLevel;\n	#ifdef ENVMAP_TYPE_CUBE\n		uniform samplerCube envMap;\n	#else\n		uniform sampler2D envMap;\n	#endif\n	\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n	uniform float reflectivity;\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n		#define ENV_WORLDPOS\n	#endif\n	#ifdef ENV_WORLDPOS\n		varying vec3 vWorldPosition;\n		uniform float refractionRatio;\n	#else\n		varying vec3 vReflect;\n	#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n		#define ENV_WORLDPOS\n	#endif\n	#ifdef ENV_WORLDPOS\n		\n		varying vec3 vWorldPosition;\n	#else\n		varying vec3 vReflect;\n		uniform float refractionRatio;\n	#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n	#ifdef ENVMAP_MODE_REFRACTION\n		uniform float refractionRatio;\n	#endif\n	vec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n		vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n		#ifdef ENVMAP_TYPE_CUBE\n			vec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n			#ifdef TEXTURE_LOD_EXT\n				vec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n			#else\n				vec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n			#endif\n			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n		#elif defined( ENVMAP_TYPE_CUBE_UV )\n			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n		#else\n			vec4 envMapColor = vec4( 0.0 );\n		#endif\n		return PI * envMapColor.rgb * envMapIntensity;\n	}\n	float getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n		float maxMIPLevelScalar = float( maxMIPLevel );\n		float sigma = PI * roughness * roughness / ( 1.0 + roughness );\n		float desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n		return clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n	}\n	vec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n		#ifdef ENVMAP_MODE_REFLECTION\n			vec3 reflectVec = reflect( -viewDir, normal );\n			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n		#else\n			vec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n		#endif\n		reflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n		float specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n		#ifdef ENVMAP_TYPE_CUBE\n			vec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n			#ifdef TEXTURE_LOD_EXT\n				vec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n			#else\n				vec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n			#endif\n			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n		#elif defined( ENVMAP_TYPE_CUBE_UV )\n			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n		#endif\n		return envMapColor.rgb * envMapIntensity;\n	}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n	#ifdef ENV_WORLDPOS\n		vWorldPosition = worldPosition.xyz;\n	#else\n		vec3 cameraToVertex;\n		if ( isOrthographic ) {\n			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n		} else {\n			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n		}\n		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vReflect = reflect( cameraToVertex, worldNormal );\n		#else\n			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n		#endif\n	#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n	fogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n	varying float fogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n	#ifdef FOG_EXP2\n		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n	#else\n		float fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n	#endif\n	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n	uniform vec3 fogColor;\n	varying float fogDepth;\n	#ifdef FOG_EXP2\n		uniform float fogDensity;\n	#else\n		uniform float fogNear;\n		uniform float fogFar;\n	#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n	uniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n	float dotNL = dot( normal, lightDirection );\n	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n	#ifdef USE_GRADIENTMAP\n		return texture2D( gradientMap, coord ).rgb;\n	#else\n		return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n	#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n	vec4 lightMapTexel= texture2D( lightMap, vUv2 );\n	reflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n	uniform sampler2D lightMap;\n	uniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n	vLightBack = vec3( 0.0 );\n	vIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\n#ifdef DOUBLE_SIDED\n	vIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n	vIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\n#endif\n#if NUM_POINT_LIGHTS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		getPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n		dotNL = dot( geometry.normal, directLight.direction );\n		directLightColor_Diffuse = PI * directLight.color;\n		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n		#ifdef DOUBLE_SIDED\n			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n		#endif\n	}\n	#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		getSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n		dotNL = dot( geometry.normal, directLight.direction );\n		directLightColor_Diffuse = PI * directLight.color;\n		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n		#ifdef DOUBLE_SIDED\n			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n		#endif\n	}\n	#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		getDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n		dotNL = dot( geometry.normal, directLight.direction );\n		directLightColor_Diffuse = PI * directLight.color;\n		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n		#ifdef DOUBLE_SIDED\n			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n		#endif\n	}\n	#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n		#ifdef DOUBLE_SIDED\n			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n		#endif\n	}\n	#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n	float x = normal.x, y = normal.y, z = normal.z;\n	vec3 result = shCoefficients[ 0 ] * 0.886227;\n	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n	return result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n	vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n	return irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n	vec3 irradiance = ambientLightColor;\n	#ifndef PHYSICALLY_CORRECT_LIGHTS\n		irradiance *= PI;\n	#endif\n	return irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n	struct DirectionalLight {\n		vec3 direction;\n		vec3 color;\n	};\n	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n	void getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n		directLight.color = directionalLight.color;\n		directLight.direction = directionalLight.direction;\n		directLight.visible = true;\n	}\n#endif\n#if NUM_POINT_LIGHTS > 0\n	struct PointLight {\n		vec3 position;\n		vec3 color;\n		float distance;\n		float decay;\n	};\n	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n	void getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n		vec3 lVector = pointLight.position - geometry.position;\n		directLight.direction = normalize( lVector );\n		float lightDistance = length( lVector );\n		directLight.color = pointLight.color;\n		directLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n		directLight.visible = ( directLight.color != vec3( 0.0 ) );\n	}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n	struct SpotLight {\n		vec3 position;\n		vec3 direction;\n		vec3 color;\n		float distance;\n		float decay;\n		float coneCos;\n		float penumbraCos;\n	};\n	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n	void getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n		vec3 lVector = spotLight.position - geometry.position;\n		directLight.direction = normalize( lVector );\n		float lightDistance = length( lVector );\n		float angleCos = dot( directLight.direction, spotLight.direction );\n		if ( angleCos > spotLight.coneCos ) {\n			float spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n			directLight.color = spotLight.color;\n			directLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n			directLight.visible = true;\n		} else {\n			directLight.color = vec3( 0.0 );\n			directLight.visible = false;\n		}\n	}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n	struct RectAreaLight {\n		vec3 color;\n		vec3 position;\n		vec3 halfWidth;\n		vec3 halfHeight;\n	};\n	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;\n	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n	struct HemisphereLight {\n		vec3 direction;\n		vec3 skyColor;\n		vec3 groundColor;\n	};\n	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n		float dotNL = dot( geometry.normal, hemiLight.direction );\n		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n		#ifndef PHYSICALLY_CORRECT_LIGHTS\n			irradiance *= PI;\n		#endif\n		return irradiance;\n	}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\nstruct ToonMaterial {\n	vec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n	#ifndef PHYSICALLY_CORRECT_LIGHTS\n		irradiance *= PI;\n	#endif\n	reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_Toon\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )	(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n	vec3 diffuseColor;\n	vec3 specularColor;\n	float specularShininess;\n	float specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	#ifndef PHYSICALLY_CORRECT_LIGHTS\n		irradiance *= PI;\n	#endif\n	reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n	reflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_BlinnPhong\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )	(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\n#ifdef REFLECTIVITY\n	material.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n#else\n	material.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#endif\n#ifdef CLEARCOAT\n	material.clearcoat = clearcoat;\n	material.clearcoatRoughness = clearcoatRoughness;\n	#ifdef USE_CLEARCOATMAP\n		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n	#endif\n	#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n	#endif\n	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n	material.clearcoatRoughness += geometryRoughness;\n	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n	material.sheenColor = sheen;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n	vec3 diffuseColor;\n	float specularRoughness;\n	vec3 specularColor;\n#ifdef CLEARCOAT\n	float clearcoat;\n	float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n	vec3 sheenColor;\n#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n	return DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n		vec3 normal = geometry.normal;\n		vec3 viewDir = geometry.viewDir;\n		vec3 position = geometry.position;\n		vec3 lightPos = rectAreaLight.position;\n		vec3 halfWidth = rectAreaLight.halfWidth;\n		vec3 halfHeight = rectAreaLight.halfHeight;\n		vec3 lightColor = rectAreaLight.color;\n		float roughness = material.specularRoughness;\n		vec3 rectCoords[ 4 ];\n		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n		vec2 uv = LTC_Uv( normal, viewDir, roughness );\n		vec4 t1 = texture2D( ltc_1, uv );\n		vec4 t2 = texture2D( ltc_2, uv );\n		mat3 mInv = mat3(\n			vec3( t1.x, 0, t1.y ),\n			vec3(    0, 1,    0 ),\n			vec3( t1.z, 0, t1.w )\n		);\n		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n	}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	#ifndef PHYSICALLY_CORRECT_LIGHTS\n		irradiance *= PI;\n	#endif\n	#ifdef CLEARCOAT\n		float ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n		vec3 ccIrradiance = ccDotNL * directLight.color;\n		#ifndef PHYSICALLY_CORRECT_LIGHTS\n			ccIrradiance *= PI;\n		#endif\n		float clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n		reflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n	#else\n		float clearcoatDHR = 0.0;\n	#endif\n	#ifdef USE_SHEEN\n		reflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n			material.specularRoughness,\n			directLight.direction,\n			geometry,\n			material.sheenColor\n		);\n	#else\n		reflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n	#endif\n	reflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n	#ifdef CLEARCOAT\n		float ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n		reflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n		float ccDotNL = ccDotNV;\n		float clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n	#else\n		float clearcoatDHR = 0.0;\n	#endif\n	float clearcoatInv = 1.0 - clearcoatDHR;\n	vec3 singleScattering = vec3( 0.0 );\n	vec3 multiScattering = vec3( 0.0 );\n	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n	BRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n	vec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n	reflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct				RE_Direct_Physical\n#define RE_Direct_RectArea		RE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular		RE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef CLEARCOAT\n	geometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n	PointLight pointLight;\n	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n	PointLightShadow pointLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		pointLight = pointLights[ i ];\n		getPointDirectLightIrradiance( pointLight, geometry, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n		pointLightShadow = pointLightShadows[ i ];\n		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n	SpotLight spotLight;\n	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n	SpotLightShadow spotLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		spotLight = spotLights[ i ];\n		getSpotDirectLightIrradiance( spotLight, geometry, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n		spotLightShadow = spotLightShadows[ i ];\n		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n	DirectionalLight directionalLight;\n	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n	DirectionalLightShadow directionalLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		directionalLight = directionalLights[ i ];\n		getDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n		directionalLightShadow = directionalLightShadows[ i ];\n		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n	RectAreaLight rectAreaLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n		rectAreaLight = rectAreaLights[ i ];\n		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n	vec3 iblIrradiance = vec3( 0.0 );\n	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n	irradiance += getLightProbeIrradiance( lightProbe, geometry );\n	#if ( NUM_HEMI_LIGHTS > 0 )\n		#pragma unroll_loop_start\n		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n		}\n		#pragma unroll_loop_end\n	#endif\n#endif\n#if defined( RE_IndirectSpecular )\n	vec3 radiance = vec3( 0.0 );\n	vec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n	#ifdef USE_LIGHTMAP\n		vec4 lightMapTexel= texture2D( lightMap, vUv2 );\n		vec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n		#ifndef PHYSICALLY_CORRECT_LIGHTS\n			lightMapIrradiance *= PI;\n		#endif\n		irradiance += lightMapIrradiance;\n	#endif\n	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n		iblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n	#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n	radiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n	#ifdef CLEARCOAT\n		clearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n	#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n	uniform float logDepthBufFC;\n	varying float vFragDepth;\n	varying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n	#ifdef USE_LOGDEPTHBUF_EXT\n		varying float vFragDepth;\n		varying float vIsPerspective;\n	#else\n		uniform float logDepthBufFC;\n	#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n	#ifdef USE_LOGDEPTHBUF_EXT\n		vFragDepth = 1.0 + gl_Position.w;\n		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n	#else\n		if ( isPerspectiveMatrix( projectionMatrix ) ) {\n			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n			gl_Position.z *= gl_Position.w;\n		}\n	#endif\n#endif",map_fragment:"#ifdef USE_MAP\n	vec4 texelColor = texture2D( map, vUv );\n	texelColor = mapTexelToLinear( texelColor );\n	diffuseColor *= texelColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n	uniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n	vec4 mapTexel = texture2D( map, uv );\n	diffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n	diffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n	uniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n	uniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n	uniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n	vec4 texelMetalness = texture2D( metalnessMap, vUv );\n	metalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n	uniform sampler2D metalnessMap;\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n	objectNormal *= morphTargetBaseInfluence;\n	objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n	objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n	objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n	objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n	uniform float morphTargetBaseInfluence;\n	#ifndef USE_MORPHNORMALS\n		uniform float morphTargetInfluences[ 8 ];\n	#else\n		uniform float morphTargetInfluences[ 4 ];\n	#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n	transformed *= morphTargetBaseInfluence;\n	transformed += morphTarget0 * morphTargetInfluences[ 0 ];\n	transformed += morphTarget1 * morphTargetInfluences[ 1 ];\n	transformed += morphTarget2 * morphTargetInfluences[ 2 ];\n	transformed += morphTarget3 * morphTargetInfluences[ 3 ];\n	#ifndef USE_MORPHNORMALS\n		transformed += morphTarget4 * morphTargetInfluences[ 4 ];\n		transformed += morphTarget5 * morphTargetInfluences[ 5 ];\n		transformed += morphTarget6 * morphTargetInfluences[ 6 ];\n		transformed += morphTarget7 * morphTargetInfluences[ 7 ];\n	#endif\n#endif",normal_fragment_begin:"#ifdef FLAT_SHADED\n	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n	vec3 normal = normalize( cross( fdx, fdy ) );\n#else\n	vec3 normal = normalize( vNormal );\n	#ifdef DOUBLE_SIDED\n		normal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n	#endif\n	#ifdef USE_TANGENT\n		vec3 tangent = normalize( vTangent );\n		vec3 bitangent = normalize( vBitangent );\n		#ifdef DOUBLE_SIDED\n			tangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n			bitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n		#endif\n		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n			mat3 vTBN = mat3( tangent, bitangent, normal );\n		#endif\n	#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n	#ifdef FLIP_SIDED\n		normal = - normal;\n	#endif\n	#ifdef DOUBLE_SIDED\n		normal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n	#endif\n	normal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n	mapN.xy *= normalScale;\n	#ifdef USE_TANGENT\n		normal = normalize( vTBN * mapN );\n	#else\n		normal = perturbNormal2Arb( -vViewPosition, normal, mapN );\n	#endif\n#elif defined( USE_BUMPMAP )\n	normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n	uniform sampler2D normalMap;\n	uniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n	uniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {\n		vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n		vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n		vec2 st0 = dFdx( vUv.st );\n		vec2 st1 = dFdy( vUv.st );\n		float scale = sign( st1.t * st0.s - st0.t * st1.s );\n		vec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\n		vec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\n		vec3 N = normalize( surf_norm );\n		mat3 tsn = mat3( S, T, N );\n		mapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n		return normalize( tsn * mapN );\n	}\n#endif",clearcoat_normal_fragment_begin:"#ifdef CLEARCOAT\n	vec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n	clearcoatMapN.xy *= clearcoatNormalScale;\n	#ifdef USE_TANGENT\n		clearcoatNormal = normalize( vTBN * clearcoatMapN );\n	#else\n		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );\n	#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n	uniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n	uniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	uniform sampler2D clearcoatNormalMap;\n	uniform vec2 clearcoatNormalScale;\n#endif",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n	return normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n	return 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n	vec4 r = vec4( fract( v * PackFactors ), v );\n	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n	return dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n	return ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n	return linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n	return (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n	return ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n	gl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n	mvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n	gl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n	vec3 dithering( vec3 color ) {\n		float grid_position = rand( gl_FragCoord.xy );\n		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n		return color + dither_shift_RGB;\n	}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n	vec4 texelRoughness = texture2D( roughnessMap, vUv );\n	roughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n	uniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n		struct DirectionalLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n		struct SpotLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n		struct PointLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n			float shadowCameraNear;\n			float shadowCameraFar;\n		};\n		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n	#endif\n	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n	}\n	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n		return unpackRGBATo2Half( texture2D( shadow, uv ) );\n	}\n	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n		float occlusion = 1.0;\n		vec2 distribution = texture2DDistribution( shadow, uv );\n		float hard_shadow = step( compare , distribution.x );\n		if (hard_shadow != 1.0 ) {\n			float distance = compare - distribution.x ;\n			float variance = max( 0.00000, distribution.y * distribution.y );\n			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n		}\n		return occlusion;\n	}\n	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n		float shadow = 1.0;\n		shadowCoord.xyz /= shadowCoord.w;\n		shadowCoord.z += shadowBias;\n		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n		bool inFrustum = all( inFrustumVec );\n		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n		bool frustumTest = all( frustumTestVec );\n		if ( frustumTest ) {\n		#if defined( SHADOWMAP_TYPE_PCF )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx0 = - texelSize.x * shadowRadius;\n			float dy0 = - texelSize.y * shadowRadius;\n			float dx1 = + texelSize.x * shadowRadius;\n			float dy1 = + texelSize.y * shadowRadius;\n			float dx2 = dx0 / 2.0;\n			float dy2 = dy0 / 2.0;\n			float dx3 = dx1 / 2.0;\n			float dy3 = dy1 / 2.0;\n			shadow = (\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n			) * ( 1.0 / 17.0 );\n		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx = texelSize.x;\n			float dy = texelSize.y;\n			vec2 uv = shadowCoord.xy;\n			vec2 f = fract( uv * shadowMapSize + 0.5 );\n			uv -= f * texelSize;\n			shadow = (\n				texture2DCompare( shadowMap, uv, shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n					 f.x ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n					 f.x ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n					 f.y ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n					 f.y ) +\n				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n						  f.x ),\n					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n						  f.x ),\n					 f.y )\n			) * ( 1.0 / 9.0 );\n		#elif defined( SHADOWMAP_TYPE_VSM )\n			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n		#else\n			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n		#endif\n		}\n		return shadow;\n	}\n	vec2 cubeToUV( vec3 v, float texelSizeY ) {\n		vec3 absV = abs( v );\n		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n		absV *= scaleToCube;\n		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n		vec2 planar = v.xy;\n		float almostATexel = 1.5 * texelSizeY;\n		float almostOne = 1.0 - almostATexel;\n		if ( absV.z >= almostOne ) {\n			if ( v.z > 0.0 )\n				planar.x = 4.0 - v.x;\n		} else if ( absV.x >= almostOne ) {\n			float signX = sign( v.x );\n			planar.x = v.z * signX + 2.0 * signX;\n		} else if ( absV.y >= almostOne ) {\n			float signY = sign( v.y );\n			planar.x = v.x + 2.0 * signY + 2.0;\n			planar.y = v.z * signY - 2.0;\n		}\n		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n	}\n	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n		vec3 lightToPosition = shadowCoord.xyz;\n		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;\n		vec3 bd3D = normalize( lightToPosition );\n		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n			return (\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n			) * ( 1.0 / 9.0 );\n		#else\n			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n		#endif\n	}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n		struct DirectionalLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n		struct SpotLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n		struct PointLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n			float shadowCameraNear;\n			float shadowCameraFar;\n		};\n		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n	#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n		vec4 shadowWorldPosition;\n	#endif\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n	}\n	#pragma unroll_loop_end\n	#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n	float shadow = 1.0;\n	#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n	DirectionalLightShadow directionalLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n		directionalLight = directionalLightShadows[ i ];\n		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n	SpotLightShadow spotLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n		spotLight = spotLightShadows[ i ];\n		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n	PointLightShadow pointLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n		pointLight = pointLightShadows[ i ];\n		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#endif\n	return shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n	mat4 boneMatX = getBoneMatrix( skinIndex.x );\n	mat4 boneMatY = getBoneMatrix( skinIndex.y );\n	mat4 boneMatZ = getBoneMatrix( skinIndex.z );\n	mat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n	uniform mat4 bindMatrix;\n	uniform mat4 bindMatrixInverse;\n	#ifdef BONE_TEXTURE\n		uniform highp sampler2D boneTexture;\n		uniform int boneTextureSize;\n		mat4 getBoneMatrix( const in float i ) {\n			float j = i * 4.0;\n			float x = mod( j, float( boneTextureSize ) );\n			float y = floor( j / float( boneTextureSize ) );\n			float dx = 1.0 / float( boneTextureSize );\n			float dy = 1.0 / float( boneTextureSize );\n			y = dy * ( y + 0.5 );\n			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n			mat4 bone = mat4( v1, v2, v3, v4 );\n			return bone;\n		}\n	#else\n		uniform mat4 boneMatrices[ MAX_BONES ];\n		mat4 getBoneMatrix( const in float i ) {\n			mat4 bone = boneMatrices[ int(i) ];\n			return bone;\n		}\n	#endif\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n	vec4 skinned = vec4( 0.0 );\n	skinned += boneMatX * skinVertex * skinWeight.x;\n	skinned += boneMatY * skinVertex * skinWeight.y;\n	skinned += boneMatZ * skinVertex * skinWeight.z;\n	skinned += boneMatW * skinVertex * skinWeight.w;\n	transformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n	mat4 skinMatrix = mat4( 0.0 );\n	skinMatrix += skinWeight.x * boneMatX;\n	skinMatrix += skinWeight.y * boneMatY;\n	skinMatrix += skinWeight.z * boneMatZ;\n	skinMatrix += skinWeight.w * boneMatW;\n	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n	#ifdef USE_TANGENT\n		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n	#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n	vec4 texelSpecular = texture2D( specularMap, vUv );\n	specularStrength = texelSpecular.r;\n#else\n	specularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n	uniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n	return toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n	color *= toneMappingExposure;\n	return saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n	color *= toneMappingExposure;\n	color = max( vec3( 0.0 ), color - 0.004 );\n	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n	return a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n	const mat3 ACESInputMat = mat3(\n		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),\n		vec3( 0.04823, 0.01566, 0.83777 )\n	);\n	const mat3 ACESOutputMat = mat3(\n		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),\n		vec3( -0.07367, -0.00605,  1.07602 )\n	);\n	color *= toneMappingExposure / 0.6;\n	color = ACESInputMat * color;\n	color = RRTAndODTFit( color );\n	color = ACESOutputMat * color;\n	return saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmissionmap_fragment:"#ifdef USE_TRANSMISSIONMAP\n	totalTransmission *= texture2D( transmissionMap, vUv ).r;\n#endif",transmissionmap_pars_fragment:"#ifdef USE_TRANSMISSIONMAP\n	uniform sampler2D transmissionMap;\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n	varying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n	#ifdef UVS_VERTEX_ONLY\n		vec2 vUv;\n	#else\n		varying vec2 vUv;\n	#endif\n	uniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	varying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	attribute vec2 uv2;\n	varying vec2 vUv2;\n	uniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n	vec4 worldPosition = vec4( transformed, 1.0 );\n	#ifdef USE_INSTANCING\n		worldPosition = instanceMatrix * worldPosition;\n	#endif\n	worldPosition = modelMatrix * worldPosition;\n#endif",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n	vec4 texColor = texture2D( t2D, vUv );\n	gl_FragColor = mapTexelToLinear( texColor );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n}",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n	gl_Position = vec4( position.xy, 1.0, 1.0 );\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n	vec3 vReflect = vWorldDirection;\n	#include <envmap_fragment>\n	gl_FragColor = envColor;\n	gl_FragColor.a *= opacity;\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n	gl_Position.z = gl_Position.w;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n	uniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( 1.0 );\n	#if DEPTH_PACKING == 3200\n		diffuseColor.a = opacity;\n	#endif\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <logdepthbuf_fragment>\n	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n	#if DEPTH_PACKING == 3200\n		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n	#elif DEPTH_PACKING == 3201\n		gl_FragColor = packDepthToRGBA( fragCoordZ );\n	#endif\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n	#include <uv_vertex>\n	#include <skinbase_vertex>\n	#ifdef USE_DISPLACEMENTMAP\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vHighPrecisionZW = gl_Position.zw;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( 1.0 );\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	float dist = length( vWorldPosition - referencePosition );\n	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n	dist = saturate( dist );\n	gl_FragColor = packDepthToRGBA( dist );\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <skinbase_vertex>\n	#ifdef USE_DISPLACEMENTMAP\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <worldpos_vertex>\n	#include <clipping_planes_vertex>\n	vWorldPosition = worldPosition.xyz;\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vec3 direction = normalize( vWorldDirection );\n	vec2 sampleUV = equirectUv( direction );\n	vec4 texColor = texture2D( tEquirect, sampleUV );\n	gl_FragColor = mapTexelToLinear( texColor );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	if ( mod( vLineDistance, totalSize ) > dashSize ) {\n		discard;\n	}\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <color_fragment>\n	outgoingLight = diffuseColor.rgb;\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	vLineDistance = scale * lineDistance;\n	#include <color_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	#ifdef USE_LIGHTMAP\n	\n		vec4 lightMapTexel= texture2D( lightMap, vUv2 );\n		reflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n	#else\n		reflectedLight.indirectDiffuse += vec3( 1.0 );\n	#endif\n	#include <aomap_fragment>\n	reflectedLight.indirectDiffuse *= diffuseColor.rgb;\n	vec3 outgoingLight = reflectedLight.indirectDiffuse;\n	#include <envmap_fragment>\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <skinbase_vertex>\n	#ifdef USE_ENVMAP\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <worldpos_vertex>\n	#include <clipping_planes_vertex>\n	#include <envmap_vertex>\n	#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n	varying vec3 vLightBack;\n	varying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	#include <emissivemap_fragment>\n	#ifdef DOUBLE_SIDED\n		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n	#else\n		reflectedLight.indirectDiffuse += vIndirectFront;\n	#endif\n	#include <lightmap_fragment>\n	reflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n	#ifdef DOUBLE_SIDED\n		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n	#else\n		reflectedLight.directDiffuse = vLightFront;\n	#endif\n	reflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n	varying vec3 vLightBack;\n	varying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <lights_lambert_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	vec3 viewDir = normalize( vViewPosition );\n	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n	vec3 y = cross( viewDir, x );\n	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n	#ifdef USE_MATCAP\n		vec4 matcapColor = texture2D( matcap, uv );\n		matcapColor = matcapTexelToLinear( matcapColor );\n	#else\n		vec4 matcapColor = vec4( 1.0 );\n	#endif\n	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#ifndef FLAT_SHADED\n		vNormal = normalize( transformedNormal );\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n	vViewPosition = - mvPosition.xyz;\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_toon_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n	vNormal = normalize( transformedNormal );\n#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_phong_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n	vNormal = normalize( transformedNormal );\n#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n	#define REFLECTIVITY\n	#define CLEARCOAT\n	#define TRANSMISSION\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef TRANSMISSION\n	uniform float transmission;\n#endif\n#ifdef REFLECTIVITY\n	uniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\n	uniform float clearcoat;\n	uniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n	uniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n	#ifdef USE_TANGENT\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n	#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <transmissionmap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#ifdef TRANSMISSION\n		float totalTransmission = transmission;\n	#endif\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <roughnessmap_fragment>\n	#include <metalnessmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <clearcoat_normal_fragment_begin>\n	#include <clearcoat_normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <transmissionmap_fragment>\n	#include <lights_physical_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n	#ifdef TRANSMISSION\n		diffuseColor.a *= mix( saturate( 1. - totalTransmission + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) ), 1.0, metalness );\n	#endif\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n	#ifdef USE_TANGENT\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n	#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n	vNormal = normalize( transformedNormal );\n	#ifdef USE_TANGENT\n		vTangent = normalize( transformedTangent );\n		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n	#endif\n#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",normal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n	varying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n	#ifdef USE_TANGENT\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n	#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	#include <logdepthbuf_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",normal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n	varying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n	#ifdef USE_TANGENT\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n	#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n	vNormal = normalize( transformedNormal );\n	#ifdef USE_TANGENT\n		vTangent = normalize( transformedTangent );\n		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n	#endif\n#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n	vViewPosition = - mvPosition.xyz;\n#endif\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_particle_fragment>\n	#include <color_fragment>\n	#include <alphatest_fragment>\n	outgoingLight = diffuseColor.rgb;\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <color_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <project_vertex>\n	gl_PointSize = size;\n	#ifdef USE_SIZEATTENUATION\n		bool isPerspective = isPerspectiveMatrix( projectionMatrix );\n		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n	#endif\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n	#include <begin_vertex>\n	#include <project_vertex>\n	#include <worldpos_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	outgoingLight = diffuseColor.rgb;\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n	vec2 scale;\n	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n	#ifndef USE_SIZEATTENUATION\n		bool isPerspective = isPerspectiveMatrix( projectionMatrix );\n		if ( isPerspective ) scale *= - mvPosition.z;\n	#endif\n	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n	vec2 rotatedPosition;\n	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n	mvPosition.xy += rotatedPosition;\n	gl_Position = projectionMatrix * mvPosition;\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n}"},b8={common:{diffuse:{value:new a7(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new F},uv2Transform:{value:new F},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new E(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new a7(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new a7(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new F}},sprite:{diffuse:{value:new a7(15658734)},opacity:{value:1},center:{value:new E(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new F}}},b9={basic:{uniforms:bU([b8.common,b8.specularmap,b8.envmap,b8.aomap,b8.lightmap,b8.fog]),vertexShader:b7.meshbasic_vert,fragmentShader:b7.meshbasic_frag},lambert:{uniforms:bU([b8.common,b8.specularmap,b8.envmap,b8.aomap,b8.lightmap,b8.emissivemap,b8.fog,b8.lights,{emissive:{value:new a7(0)}}]),vertexShader:b7.meshlambert_vert,fragmentShader:b7.meshlambert_frag},phong:{uniforms:bU([b8.common,b8.specularmap,b8.envmap,b8.aomap,b8.lightmap,b8.emissivemap,b8.bumpmap,b8.normalmap,b8.displacementmap,b8.fog,b8.lights,{emissive:{value:new a7(0)},specular:{value:new a7(1118481)},shininess:{value:30}}]),vertexShader:b7.meshphong_vert,fragmentShader:b7.meshphong_frag},standard:{uniforms:bU([b8.common,b8.envmap,b8.aomap,b8.lightmap,b8.emissivemap,b8.bumpmap,b8.normalmap,b8.displacementmap,b8.roughnessmap,b8.metalnessmap,b8.fog,b8.lights,{emissive:{value:new a7(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:b7.meshphysical_vert,fragmentShader:b7.meshphysical_frag},toon:{uniforms:bU([b8.common,b8.aomap,b8.lightmap,b8.emissivemap,b8.bumpmap,b8.normalmap,b8.displacementmap,b8.gradientmap,b8.fog,b8.lights,{emissive:{value:new a7(0)}}]),vertexShader:b7.meshtoon_vert,fragmentShader:b7.meshtoon_frag},matcap:{uniforms:bU([b8.common,b8.bumpmap,b8.normalmap,b8.displacementmap,b8.fog,{matcap:{value:null}}]),vertexShader:b7.meshmatcap_vert,fragmentShader:b7.meshmatcap_frag},points:{uniforms:bU([b8.points,b8.fog]),vertexShader:b7.points_vert,fragmentShader:b7.points_frag},dashed:{uniforms:bU([b8.common,b8.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:b7.linedashed_vert,fragmentShader:b7.linedashed_frag},depth:{uniforms:bU([b8.common,b8.displacementmap]),vertexShader:b7.depth_vert,fragmentShader:b7.depth_frag},normal:{uniforms:bU([b8.common,b8.bumpmap,b8.normalmap,b8.displacementmap,{opacity:{value:1}}]),vertexShader:b7.normal_vert,fragmentShader:b7.normal_frag},sprite:{uniforms:bU([b8.sprite,b8.fog]),vertexShader:b7.sprite_vert,fragmentShader:b7.sprite_frag},background:{uniforms:{uvTransform:{value:new F},t2D:{value:null}},vertexShader:b7.background_vert,fragmentShader:b7.background_frag},cube:{uniforms:bU([b8.envmap,{opacity:{value:1}}]),vertexShader:b7.cube_vert,fragmentShader:b7.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:b7.equirect_vert,fragmentShader:b7.equirect_frag},distanceRGBA:{uniforms:bU([b8.common,b8.displacementmap,{referencePosition:{value:new O},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:b7.distanceRGBA_vert,fragmentShader:b7.distanceRGBA_frag},shadow:{uniforms:bU([b8.lights,b8.fog,{color:{value:new a7(0)},opacity:{value:1}},]),vertexShader:b7.shadow_vert,fragmentShader:b7.shadow_frag}};function ca(a,b,c,d,e){let h=new a7(0),i=0,j,k,l=null,m=0,n=null;function o(a,b){c.buffers.color.setClear(a.r,a.g,a.b,b,e)}return{getClearColor:function(){return h},setClearColor:function(a,b){h.set(a),o(h,i=void 0!==b?b:1)},getClearAlpha:function(){return i},setClearAlpha:function(a){o(h,i=a)},render:function(c,e,p,q){let r=!0===e.isScene?e.background:null;r&&r.isTexture&&(r=b.get(r));let s=a.xr,t=s.getSession&&s.getSession();t&&"additive"===t.environmentBlendMode&&(r=null),null===r?o(h,i):r&&r.isColor&&(o(r,1),q=!0),(a.autoClear||q)&&a.clear(a.autoClearColor,a.autoClearDepth,a.autoClearStencil),r&&(r.isCubeTexture||r.isWebGLCubeRenderTarget||306===r.mapping)?(void 0===k&&((k=new bP(new bS(1,1,1),new bW({name:"BackgroundCubeMaterial",uniforms:bT(b9.cube.uniforms),vertexShader:b9.cube.vertexShader,fragmentShader:b9.cube.fragmentShader,side:g,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),k.geometry.deleteAttribute("uv"),k.onBeforeRender=function(a,b,c){this.matrixWorld.copyPosition(c.matrixWorld)},Object.defineProperty(k.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),d.update(k)),r.isWebGLCubeRenderTarget&&(r=r.texture),k.material.uniforms.envMap.value=r,k.material.uniforms.flipEnvMap.value=r.isCubeTexture&&r._needsFlipEnvMap?-1:1,(l!==r||m!==r.version||n!==a.toneMapping)&&(k.material.needsUpdate=!0,l=r,m=r.version,n=a.toneMapping),c.unshift(k,k.geometry,k.material,0,0,null)):r&&r.isTexture&&(void 0===j&&((j=new bP(new b6(2,2),new bW({name:"BackgroundMaterial",uniforms:bT(b9.background.uniforms),vertexShader:b9.background.vertexShader,fragmentShader:b9.background.fragmentShader,side:f,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),Object.defineProperty(j.material,"map",{get:function(){return this.uniforms.t2D.value}}),d.update(j)),j.material.uniforms.t2D.value=r,!0===r.matrixAutoUpdate&&r.updateMatrix(),j.material.uniforms.uvTransform.value.copy(r.matrix),(l!==r||m!==r.version||n!==a.toneMapping)&&(j.material.needsUpdate=!0,l=r,m=r.version,n=a.toneMapping),c.unshift(j,j.geometry,j.material,0,0,null))}}}function cb(a,b,c,d){let e=a.getParameter(34921),f=d.isWebGL2?null:b.get("OES_vertex_array_object"),g=d.isWebGL2||null!==f,h={},i=m(null),j=i;function k(b){return d.isWebGL2?a.bindVertexArray(b):f.bindVertexArrayOES(b)}function l(b){return d.isWebGL2?a.deleteVertexArray(b):f.deleteVertexArrayOES(b)}function m(a){let b=[],c=[],d=[];for(let f=0;f<e;f++)b[f]=0,c[f]=0,d[f]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:b,enabledAttributes:c,attributeDivisors:d,object:a,attributes:{},index:null}}function n(){let a=j.newAttributes;for(let b=0,c=a.length;b<c;b++)a[b]=0}function o(a){p(a,0)}function p(c,e){let f=j.newAttributes,g=j.enabledAttributes,h=j.attributeDivisors;if(f[c]=1,0===g[c]&&(a.enableVertexAttribArray(c),g[c]=1),h[c]!==e){let i=d.isWebGL2?a:b.get("ANGLE_instanced_arrays");i[d.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](c,e),h[c]=e}}function q(){let b=j.newAttributes,c=j.enabledAttributes;for(let d=0,e=c.length;d<e;d++)c[d]!==b[d]&&(a.disableVertexAttribArray(d),c[d]=0)}function r(b,c,e,f,g,h){!0===d.isWebGL2&&(5124===e||5125===e)?a.vertexAttribIPointer(b,c,e,g,h):a.vertexAttribPointer(b,c,e,f,g,h)}function s(){t(),j!==i&&k((j=i).object)}function t(){i.geometry=null,i.program=null,i.wireframe=!1}return{setup:function(e,i,l,s,t){let u=!1;if(g){let v=function b(c,e,g){let i=!0===g.wireframe,j=h[c.id];void 0===j&&(j={},h[c.id]=j);let k=j[e.id];void 0===k&&(k={},j[e.id]=k);let l=k[i];return void 0===l&&(l=m(d.isWebGL2?a.createVertexArray():f.createVertexArrayOES()),k[i]=l),l}(s,l,i);j!==v&&k((j=v).object),(u=function a(b,c){let d=j.attributes,e=b.attributes;if(Object.keys(d).length!==Object.keys(e).length)return!0;for(let f in e){let g=d[f],h=e[f];if(void 0===g||g.attribute!==h||g.data!==h.data)return!0}return j.index!==c}(s,t))&&function a(b,c){let d={},e=b.attributes;for(let f in e){let g=e[f],h={};h.attribute=g,g.data&&(h.data=g.data),d[f]=h}j.attributes=d,j.index=c}(s,t)}else{let w=!0===i.wireframe;(j.geometry!==s.id||j.program!==l.id||j.wireframe!==w)&&(j.geometry=s.id,j.program=l.id,j.wireframe=w,u=!0)}!0===e.isInstancedMesh&&(u=!0),null!==t&&c.update(t,34963),u&&(function e(f,g,h,i){if(!1===d.isWebGL2&&(f.isInstancedMesh||i.isInstancedBufferGeometry)&&null===b.get("ANGLE_instanced_arrays"))return;n();let j=i.attributes,k=h.getAttributes(),l=g.defaultAttributeValues;for(let m in k){let s=k[m];if(s>=0){let t=j[m];if(void 0!==t){let u=t.normalized,v=t.itemSize,w=c.get(t);if(void 0===w)continue;let x=w.buffer,y=w.type,z=w.bytesPerElement;if(t.isInterleavedBufferAttribute){let A=t.data,B=A.stride,C=t.offset;A&&A.isInstancedInterleavedBuffer?(p(s,A.meshPerAttribute),void 0===i._maxInstanceCount&&(i._maxInstanceCount=A.meshPerAttribute*A.count)):o(s),a.bindBuffer(34962,x),r(s,v,y,u,B*z,C*z)}else t.isInstancedBufferAttribute?(p(s,t.meshPerAttribute),void 0===i._maxInstanceCount&&(i._maxInstanceCount=t.meshPerAttribute*t.count)):o(s),a.bindBuffer(34962,x),r(s,v,y,u,0,0)}else if("instanceMatrix"===m){let D=c.get(f.instanceMatrix);if(void 0===D)continue;let E=D.buffer,F=D.type;p(s+0,1),p(s+1,1),p(s+2,1),p(s+3,1),a.bindBuffer(34962,E),a.vertexAttribPointer(s+0,4,F,!1,64,0),a.vertexAttribPointer(s+1,4,F,!1,64,16),a.vertexAttribPointer(s+2,4,F,!1,64,32),a.vertexAttribPointer(s+3,4,F,!1,64,48)}else if("instanceColor"===m){let G=c.get(f.instanceColor);if(void 0===G)continue;let H=G.buffer,I=G.type;p(s,1),a.bindBuffer(34962,H),a.vertexAttribPointer(s,3,I,!1,12,0)}else if(void 0!==l){let J=l[m];if(void 0!==J)switch(J.length){case 2:a.vertexAttrib2fv(s,J);break;case 3:a.vertexAttrib3fv(s,J);break;case 4:a.vertexAttrib4fv(s,J);break;default:a.vertexAttrib1fv(s,J)}}}}q()}(e,i,l,s),null!==t&&a.bindBuffer(34963,c.get(t).buffer))},reset:s,resetDefaultState:t,dispose:function(){for(let a in s(),h){let b=h[a];for(let c in b){let d=b[c];for(let e in d)l(d[e].object),delete d[e];delete b[c]}delete h[a]}},releaseStatesOfGeometry:function(a){if(void 0===h[a.id])return;let b=h[a.id];for(let c in b){let d=b[c];for(let e in d)l(d[e].object),delete d[e];delete b[c]}delete h[a.id]},releaseStatesOfProgram:function(a){for(let b in h){let c=h[b];if(void 0===c[a.id])continue;let d=c[a.id];for(let e in d)l(d[e].object),delete d[e];delete c[a.id]}},initAttributes:n,enableAttribute:o,disableUnusedAttributes:q}}function cc(a,b,c,d){let e=d.isWebGL2,f;function g(a){f=a}this.setMode=g,this.render=function(b,d){a.drawArrays(f,b,d),c.update(d,f,1)},this.renderInstances=function(d,g,h){if(0===h)return;let i,j;if(e)i=a,j="drawArraysInstanced";else if(i=b.get("ANGLE_instanced_arrays"),j="drawArraysInstancedANGLE",null===i){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}i[j](f,d,g,h),c.update(g,f,h)}}function cd(a,b,c){let d;function e(b){if("highp"===b){if(a.getShaderPrecisionFormat(35633,36338).precision>0&&a.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";b="mediump"}return"mediump"===b&&a.getShaderPrecisionFormat(35633,36337).precision>0&&a.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}let f="undefined"!=typeof WebGL2RenderingContext&&a instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&a instanceof WebGL2ComputeRenderingContext,g=void 0!==c.precision?c.precision:"highp",h=e(g);h!==g&&(console.warn("THREE.WebGLRenderer:",g,"not supported, using",h,"instead."),g=h);let i=!0===c.logarithmicDepthBuffer,j=a.getParameter(34930),k=a.getParameter(35660),l=a.getParameter(3379),m=a.getParameter(34076),n=a.getParameter(34921),o=a.getParameter(36347),p=a.getParameter(36348),q=a.getParameter(36349),r=k>0,s=f||!!b.get("OES_texture_float"),t=f?a.getParameter(36183):0;return{isWebGL2:f,getMaxAnisotropy:function(){if(void 0!==d)return d;let c=b.get("EXT_texture_filter_anisotropic");return d=null!==c?a.getParameter(c.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0},getMaxPrecision:e,precision:g,logarithmicDepthBuffer:i,maxTextures:j,maxVertexTextures:k,maxTextureSize:l,maxCubemapSize:m,maxAttributes:n,maxVertexUniforms:o,maxVaryings:p,maxFragmentUniforms:q,vertexTextures:r,floatFragmentTextures:s,floatVertexTextures:r&&s,maxSamples:t}}function ce(a){let b=this,c=null,d=0,e=!1,f=!1,g=new aR,h=new F,i={value:null,needsUpdate:!1};function j(){i.value!==c&&(i.value=c,i.needsUpdate=d>0),b.numPlanes=d,b.numIntersection=0}function k(a,c,d,e){let f=null!==a?a.length:0,j=null;if(0!==f){if(j=i.value,!0!==e||null===j){let k=d+4*f,l=c.matrixWorldInverse;h.getNormalMatrix(l),(null===j||j.length<k)&&(j=new Float32Array(k));for(let m=0,n=d;m!==f;++m,n+=4)g.copy(a[m]).applyMatrix4(l,h),g.normal.toArray(j,n),j[n+3]=g.constant}i.value=j,i.needsUpdate=!0}return b.numPlanes=f,b.numIntersection=0,j}this.uniform=i,this.numPlanes=0,this.numIntersection=0,this.init=function(a,b,f){let g=0!==a.length||b||0!==d||e;return e=b,c=k(a,f,0),d=a.length,g},this.beginShadows=function(){f=!0,k(null)},this.endShadows=function(){f=!1,j()},this.setState=function(b,g,h){let l=b.clippingPlanes,m=b.clipIntersection,n=b.clipShadows,o=a.get(b);if(e&&null!==l&&0!==l.length&&(!f||n)){let p=f?0:d,q=4*p,r=o.clippingState||null;i.value=r,r=k(l,g,q,h);for(let s=0;s!==q;++s)r[s]=c[s];o.clippingState=r,this.numIntersection=m?this.numPlanes:0,this.numPlanes+=p}else f?k(null):j()}}function cf(a){let b=new WeakMap;function c(a,b){return 303===b?a.mapping=301:304===b&&(a.mapping=302),a}return{get:function(d){if(d&&d.isTexture){let e=d.mapping;if(303===e||304===e){if(b.has(d)){let f=b.get(d).texture;return c(f,d.mapping)}{let g=d.image;if(!g||!(g.height>0))return null;{let h=a.getRenderList(),i=a.getRenderTarget(),j=a.getRenderState(),k=new b_(g.height/2);return k.fromEquirectangularTexture(a,d),b.set(d,k),a.setRenderTarget(i),a.setRenderList(h),a.setRenderState(j),c(k.texture,d.mapping)}}}}return d},dispose:function(){b=new WeakMap}}}function cg(a){let b={};return{has:function(c){if(void 0!==b[c])return null!==b[c];let d;switch(c){case"WEBGL_depth_texture":d=a.getExtension("WEBGL_depth_texture")||a.getExtension("MOZ_WEBGL_depth_texture")||a.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":d=a.getExtension("EXT_texture_filter_anisotropic")||a.getExtension("MOZ_EXT_texture_filter_anisotropic")||a.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":d=a.getExtension("WEBGL_compressed_texture_s3tc")||a.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||a.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":d=a.getExtension("WEBGL_compressed_texture_pvrtc")||a.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:d=a.getExtension(c)}return b[c]=d,null!==d},get:function(a){return this.has(a)||console.warn("THREE.WebGLRenderer: "+a+" extension not supported."),b[a]}}}function ch(a,b,c,d){let e=new WeakMap,f=new WeakMap;function g(a){let h=a.target,i=e.get(h);for(let j in null!==i.index&&b.remove(i.index),i.attributes)b.remove(i.attributes[j]);h.removeEventListener("dispose",g),e.delete(h);let k=f.get(i);k&&(b.remove(k),f.delete(i)),d.releaseStatesOfGeometry(h),!0===h.isInstancedBufferGeometry&&delete h._maxInstanceCount,c.memory.geometries--}function h(a){let c=[],d=a.index,e=a.attributes.position,g=0;if(null!==d){let h=d.array;g=d.version;for(let i=0,j=h.length;i<j;i+=3){let k=h[i+0],l=h[i+1],m=h[i+2];c.push(k,l,l,m,m,k)}}else{let n=e.array;g=e.version;for(let o=0,p=n.length/3-1;o<p;o+=3){let q=o+0,r=o+1,s=o+2;c.push(q,r,r,s,s,q)}}let t=new(bp(c)>65535?bl:bj)(c,1);t.version=g;let u=f.get(a);u&&b.remove(u),f.set(a,t)}return{get:function(a,b){let d=e.get(b);return d||(b.addEventListener("dispose",g),b.isBufferGeometry?d=b:b.isGeometry&&(void 0===b._bufferGeometry&&(b._bufferGeometry=new bx().setFromObject(a)),d=b._bufferGeometry),e.set(b,d),c.memory.geometries++),d},update:function(a){let c=a.attributes;for(let d in c)b.update(c[d],34962);let e=a.morphAttributes;for(let f in e){let g=e[f];for(let h=0,i=g.length;h<i;h++)b.update(g[h],34962)}},getWireframeAttribute:function(a){let b=f.get(a);if(b){let c=a.index;null!==c&&b.version<c.version&&h(a)}else h(a);return f.get(a)}}}function ci(a,b,c,d){let e=d.isWebGL2,f;function g(a){f=a}let h,i;this.setMode=g,this.setIndex=function(a){h=a.type,i=a.bytesPerElement},this.render=function(b,d){a.drawElements(f,d,h,b*i),c.update(d,f,1)},this.renderInstances=function(d,g,j){if(0===j)return;let k,l;if(e)k=a,l="drawElementsInstanced";else if(k=b.get("ANGLE_instanced_arrays"),l="drawElementsInstancedANGLE",null===k){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}k[l](f,g,h,d*i,j),c.update(g,f,j)}}function cj(a){let b={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:b,programs:null,autoReset:!0,reset:function(){b.frame++,b.calls=0,b.triangles=0,b.points=0,b.lines=0},update:function(a,c,d){switch(b.calls++,c){case 4:b.triangles+=d*(a/3);break;case 1:b.lines+=d*(a/2);break;case 3:b.lines+=d*(a-1);break;case 2:b.lines+=d*a;break;case 0:b.points+=d*a;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",c)}}}}function ck(a,b){return a[0]-b[0]}function cl(a,b){return Math.abs(b[1])-Math.abs(a[1])}function cm(a){let b={},c=new Float32Array(8),d=[];for(let e=0;e<8;e++)d[e]=[e,0];return{update:function(e,f,g,h){let i=e.morphTargetInfluences,j=void 0===i?0:i.length,k=b[f.id];if(void 0===k){k=[];for(let l=0;l<j;l++)k[l]=[l,0];b[f.id]=k}for(let m=0;m<j;m++){let n=k[m];n[0]=m,n[1]=i[m]}k.sort(cl);for(let o=0;o<8;o++)o<j&&k[o][1]?(d[o][0]=k[o][0],d[o][1]=k[o][1]):(d[o][0]=Number.MAX_SAFE_INTEGER,d[o][1]=0);d.sort(ck);let p=g.morphTargets&&f.morphAttributes.position,q=g.morphNormals&&f.morphAttributes.normal,r=0;for(let s=0;s<8;s++){let t=d[s],u=t[0],v=t[1];u!==Number.MAX_SAFE_INTEGER&&v?(p&&f.getAttribute("morphTarget"+s)!==p[u]&&f.setAttribute("morphTarget"+s,p[u]),q&&f.getAttribute("morphNormal"+s)!==q[u]&&f.setAttribute("morphNormal"+s,q[u]),c[s]=v,r+=v):(p&& void 0!==f.getAttribute("morphTarget"+s)&&f.deleteAttribute("morphTarget"+s),q&& void 0!==f.getAttribute("morphNormal"+s)&&f.deleteAttribute("morphNormal"+s),c[s]=0)}let w=f.morphTargetsRelative?1:1-r;h.getUniforms().setValue(a,"morphTargetBaseInfluence",w),h.getUniforms().setValue(a,"morphTargetInfluences",c)}}}function cn(a,b,c,d){let e=new WeakMap;return{update:function(a){let f=d.render.frame,g=a.geometry,h=b.get(a,g);return e.get(h)!==f&&(g.isGeometry&&h.updateFromObject(a),b.update(h),e.set(h,f)),a.isInstancedMesh&&(c.update(a.instanceMatrix,34962),null!==a.instanceColor&&c.update(a.instanceColor,34962)),h},dispose:function(){e=new WeakMap}}}function co(a,b,c,d){J.call(this,null),this.image={data:a||null,width:b||1,height:c||1,depth:d||1},this.magFilter=l,this.minFilter=l,this.wrapR=j,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}function cp(a,b,c,d){J.call(this,null),this.image={data:a||null,width:b||1,height:c||1,depth:d||1},this.magFilter=l,this.minFilter=l,this.wrapR=j,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}b9.physical={uniforms:bU([b9.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new E(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new a7(0)},transmission:{value:0},transmissionMap:{value:null}}]),vertexShader:b7.meshphysical_vert,fragmentShader:b7.meshphysical_frag},co.prototype=Object.create(J.prototype),co.prototype.constructor=co,co.prototype.isDataTexture2DArray=!0,cp.prototype=Object.create(J.prototype),cp.prototype.constructor=cp,cp.prototype.isDataTexture3D=!0;let cq=new J,cr=new co,cs=new cp,ct=new b$,cu=[],cv=[],cw=new Float32Array(16),cx=new Float32Array(9),cy=new Float32Array(4);function cz(a,b,c){let d=a[0];if(d<=0||d>0)return a;let e=b*c,f=cu[e];if(void 0===f&&(f=new Float32Array(e),cu[e]=f),0!==b){d.toArray(f,0);for(let g=1,h=0;g!==b;++g)h+=c,a[g].toArray(f,h)}return f}function cA(a,b){if(a.length!==b.length)return!1;for(let c=0,d=a.length;c<d;c++)if(a[c]!==b[c])return!1;return!0}function cB(a,b){for(let c=0,d=b.length;c<d;c++)a[c]=b[c]}function cC(a,b){let c=cv[b];void 0===c&&(c=new Int32Array(b),cv[b]=c);for(let d=0;d!==b;++d)c[d]=a.allocateTextureUnit();return c}function cD(a,b){let c=this.cache;c[0]!==b&&(a.uniform1f(this.addr,b),c[0]=b)}function cE(a,b){let c=this.cache;if(void 0!==b.x)(c[0]!==b.x||c[1]!==b.y)&&(a.uniform2f(this.addr,b.x,b.y),c[0]=b.x,c[1]=b.y);else{if(cA(c,b))return;a.uniform2fv(this.addr,b),cB(c,b)}}function cF(a,b){let c=this.cache;if(void 0!==b.x)(c[0]!==b.x||c[1]!==b.y||c[2]!==b.z)&&(a.uniform3f(this.addr,b.x,b.y,b.z),c[0]=b.x,c[1]=b.y,c[2]=b.z);else if(void 0!==b.r)(c[0]!==b.r||c[1]!==b.g||c[2]!==b.b)&&(a.uniform3f(this.addr,b.r,b.g,b.b),c[0]=b.r,c[1]=b.g,c[2]=b.b);else{if(cA(c,b))return;a.uniform3fv(this.addr,b),cB(c,b)}}function cG(a,b){let c=this.cache;if(void 0!==b.x)(c[0]!==b.x||c[1]!==b.y||c[2]!==b.z||c[3]!==b.w)&&(a.uniform4f(this.addr,b.x,b.y,b.z,b.w),c[0]=b.x,c[1]=b.y,c[2]=b.z,c[3]=b.w);else{if(cA(c,b))return;a.uniform4fv(this.addr,b),cB(c,b)}}function cH(a,b){let c=this.cache,d=b.elements;if(void 0===d){if(cA(c,b))return;a.uniformMatrix2fv(this.addr,!1,b),cB(c,b)}else{if(cA(c,d))return;cy.set(d),a.uniformMatrix2fv(this.addr,!1,cy),cB(c,d)}}function cI(a,b){let c=this.cache,d=b.elements;if(void 0===d){if(cA(c,b))return;a.uniformMatrix3fv(this.addr,!1,b),cB(c,b)}else{if(cA(c,d))return;cx.set(d),a.uniformMatrix3fv(this.addr,!1,cx),cB(c,d)}}function cJ(a,b){let c=this.cache,d=b.elements;if(void 0===d){if(cA(c,b))return;a.uniformMatrix4fv(this.addr,!1,b),cB(c,b)}else{if(cA(c,d))return;cw.set(d),a.uniformMatrix4fv(this.addr,!1,cw),cB(c,d)}}function cK(a,b,c){let d=this.cache,e=c.allocateTextureUnit();d[0]!==e&&(a.uniform1i(this.addr,e),d[0]=e),c.safeSetTexture2D(b||cq,e)}function cL(a,b,c){let d=this.cache,e=c.allocateTextureUnit();d[0]!==e&&(a.uniform1i(this.addr,e),d[0]=e),c.setTexture2DArray(b||cr,e)}function cM(a,b,c){let d=this.cache,e=c.allocateTextureUnit();d[0]!==e&&(a.uniform1i(this.addr,e),d[0]=e),c.setTexture3D(b||cs,e)}function cN(a,b,c){let d=this.cache,e=c.allocateTextureUnit();d[0]!==e&&(a.uniform1i(this.addr,e),d[0]=e),c.safeSetTextureCube(b||ct,e)}function cO(a,b){let c=this.cache;c[0]!==b&&(a.uniform1i(this.addr,b),c[0]=b)}function cP(a,b){let c=this.cache;cA(c,b)||(a.uniform2iv(this.addr,b),cB(c,b))}function cQ(a,b){let c=this.cache;cA(c,b)||(a.uniform3iv(this.addr,b),cB(c,b))}function cR(a,b){let c=this.cache;cA(c,b)||(a.uniform4iv(this.addr,b),cB(c,b))}function cS(a,b){let c=this.cache;c[0]!==b&&(a.uniform1ui(this.addr,b),c[0]=b)}function cT(a,b){a.uniform1fv(this.addr,b)}function cU(a,b){a.uniform1iv(this.addr,b)}function cV(a,b){a.uniform2iv(this.addr,b)}function cW(a,b){a.uniform3iv(this.addr,b)}function cX(a,b){a.uniform4iv(this.addr,b)}function cY(a,b){let c=cz(b,this.size,2);a.uniform2fv(this.addr,c)}function cZ(a,b){let c=cz(b,this.size,3);a.uniform3fv(this.addr,c)}function c$(a,b){let c=cz(b,this.size,4);a.uniform4fv(this.addr,c)}function c_(a,b){let c=cz(b,this.size,4);a.uniformMatrix2fv(this.addr,!1,c)}function c0(a,b){let c=cz(b,this.size,9);a.uniformMatrix3fv(this.addr,!1,c)}function c1(a,b){let c=cz(b,this.size,16);a.uniformMatrix4fv(this.addr,!1,c)}function c2(a,b,c){let d=b.length,e=cC(c,d);a.uniform1iv(this.addr,e);for(let f=0;f!==d;++f)c.safeSetTexture2D(b[f]||cq,e[f])}function c3(a,b,c){let d=b.length,e=cC(c,d);a.uniform1iv(this.addr,e);for(let f=0;f!==d;++f)c.safeSetTextureCube(b[f]||ct,e[f])}function c4(a,b,c){this.id=a,this.addr=c,this.cache=[],this.setValue=function(a){switch(a){case 5126:return cD;case 35664:return cE;case 35665:return cF;case 35666:return cG;case 35674:return cH;case 35675:return cI;case 35676:return cJ;case 5124:case 35670:return cO;case 35667:case 35671:return cP;case 35668:case 35672:return cQ;case 35669:case 35673:return cR;case 5125:return cS;case 35678:case 36198:case 36298:case 36306:case 35682:return cK;case 35679:case 36299:case 36307:return cM;case 35680:case 36300:case 36308:case 36293:return cN;case 36289:case 36303:case 36311:case 36292:return cL}}(b.type)}function c5(a,b,c){this.id=a,this.addr=c,this.cache=[],this.size=b.size,this.setValue=function(a){switch(a){case 5126:return cT;case 35664:return cY;case 35665:return cZ;case 35666:return c$;case 35674:return c_;case 35675:return c0;case 35676:return c1;case 5124:case 35670:return cU;case 35667:case 35671:return cV;case 35668:case 35672:return cW;case 35669:case 35673:return cX;case 35678:case 36198:case 36298:case 36306:case 35682:return c2;case 35680:case 36300:case 36308:case 36293:return c3}}(b.type)}function c6(a){this.id=a,this.seq=[],this.map={}}c5.prototype.updateCache=function(a){let b=this.cache;a instanceof Float32Array&&b.length!==a.length&&(this.cache=new Float32Array(a.length)),cB(b,a)},c6.prototype.setValue=function(a,b,c){let d=this.seq;for(let e=0,f=d.length;e!==f;++e){let g=d[e];g.setValue(a,b[g.id],c)}};let c7=/([\w\d_]+)(\])?(\[|\.)?/g;function c8(a,b){a.seq.push(b),a.map[b.id]=b}function c9(a,b,c){let d=a.name,e=d.length;for(c7.lastIndex=0;;){let f=c7.exec(d),g=c7.lastIndex,h=f[1],i="]"===f[2],j=f[3];if(i&&(h|=0),void 0===j||"["===j&&g+2===e){c8(c,void 0===j?new c4(h,a,b):new c5(h,a,b));break}{let k=c.map,l=k[h];void 0===l&&(l=new c6(h),c8(c,l)),c=l}}}function da(a,b){this.seq=[],this.map={};let c=a.getProgramParameter(b,35718);for(let d=0;d<c;++d){let e=a.getActiveUniform(b,d),f=a.getUniformLocation(b,e.name);c9(e,f,this)}}function db(a,b,c){let d=a.createShader(b);return a.shaderSource(d,c),a.compileShader(d),d}da.prototype.setValue=function(a,b,c,d){let e=this.map[b];void 0!==e&&e.setValue(a,c,d)},da.prototype.setOptional=function(a,b,c){let d=b[c];void 0!==d&&this.setValue(a,c,d)},da.upload=function(a,b,c,d){for(let e=0,f=b.length;e!==f;++e){let g=b[e],h=c[g.id];!1!==h.needsUpdate&&g.setValue(a,h.value,d)}},da.seqWithValue=function(a,b){let c=[];for(let d=0,e=a.length;d!==e;++d){let f=a[d];f.id in b&&c.push(f)}return c};let dc=0;function dd(a){switch(a){case 3e3:return["Linear","( value )"];case w:return["sRGB","( value )"];case 3002:return["RGBE","( value )"];case 3004:return["RGBM","( value, 7.0 )"];case 3005:return["RGBM","( value, 16.0 )"];case 3006:return["RGBD","( value, 256.0 )"];case 3007:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case 3003:return["LogLuv","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",a),["Linear","( value )"]}}function de(a,b,c){let d=a.getShaderParameter(b,35713),e=a.getShaderInfoLog(b).trim();if(d&&""===e)return"";let f=a.getShaderSource(b);return"THREE.WebGLShader: gl.getShaderInfoLog() "+c+"\n"+e+function(a){let b=a.split("\n");for(let c=0;c<b.length;c++)b[c]=c+1+": "+b[c];return b.join("\n")}(f)}function df(a,b){let c=dd(b);return"vec4 "+a+"( vec4 value ) { return "+c[0]+"ToLinear"+c[1]+"; }"}function dg(a){return""!==a}function dh(a,b){return a.replace(/NUM_DIR_LIGHTS/g,b.numDirLights).replace(/NUM_SPOT_LIGHTS/g,b.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,b.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,b.numPointLights).replace(/NUM_HEMI_LIGHTS/g,b.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,b.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,b.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,b.numPointLightShadows)}function di(a,b){return a.replace(/NUM_CLIPPING_PLANES/g,b.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,b.numClippingPlanes-b.numClipIntersection)}let dj=/^[ \t]*#include +<([\w\d./]+)>/gm;function dk(a){return a.replace(dj,dl)}function dl(a,b){let c=b7[b];if(void 0===c)throw Error("Can not resolve #include <"+b+">");return dk(c)}let dm=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,dn=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function dp(a){return a.replace(dn,dr).replace(dm,dq)}function dq(a,b,c,d){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),dr(a,b,c,d)}function dr(a,b,c,d){let e="";for(let f=parseInt(b);f<parseInt(c);f++)e+=d.replace(/\[\s*i\s*\]/g,"[ "+f+" ]").replace(/UNROLLED_LOOP_INDEX/g,f);return e}function ds(a){let b="precision "+a.precision+" float;\nprecision "+a.precision+" int;";return"highp"===a.precision?b+="\n#define HIGH_PRECISION":"mediump"===a.precision?b+="\n#define MEDIUM_PRECISION":"lowp"===a.precision&&(b+="\n#define LOW_PRECISION"),b}function dt(a,b,c,d){var e;let f=a.getContext(),g=c.defines,h=c.vertexShader,i=c.fragmentShader,j,k=(j="SHADOWMAP_TYPE_BASIC",1===(e=c).shadowMapType?j="SHADOWMAP_TYPE_PCF":2===e.shadowMapType?j="SHADOWMAP_TYPE_PCF_SOFT":3===e.shadowMapType&&(j="SHADOWMAP_TYPE_VSM"),j),l=function(a){let b="ENVMAP_TYPE_CUBE";if(a.envMap)switch(a.envMapMode){case 301:case 302:b="ENVMAP_TYPE_CUBE";break;case 306:case 307:b="ENVMAP_TYPE_CUBE_UV"}return b}(c),m=function(a){let b="ENVMAP_MODE_REFLECTION";if(a.envMap)switch(a.envMapMode){case 302:case 307:b="ENVMAP_MODE_REFRACTION"}return b}(c),n=function(a){let b="ENVMAP_BLENDING_NONE";if(a.envMap)switch(a.combine){case 0:b="ENVMAP_BLENDING_MULTIPLY";break;case 1:b="ENVMAP_BLENDING_MIX";break;case 2:b="ENVMAP_BLENDING_ADD"}return b}(c),o=a.gammaFactor>0?a.gammaFactor:1,p=c.isWebGL2?"":function(a){let b=[a.extensionDerivatives||a.envMapCubeUV||a.bumpMap||a.tangentSpaceNormalMap||a.clearcoatNormalMap||a.flatShading||"physical"===a.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(a.extensionFragDepth||a.logarithmicDepthBuffer)&&a.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",a.extensionDrawBuffers&&a.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(a.extensionShaderTextureLOD||a.envMap)&&a.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""];return b.filter(dg).join("\n")}(c),q=function(a){let b=[];for(let c in a){let d=a[c];!1!==d&&b.push("#define "+c+" "+d)}return b.join("\n")}(g),r=f.createProgram(),s,t,u=c.glslVersion?"#version "+c.glslVersion+"\n":"";c.isRawShaderMaterial?((s=[q].filter(dg).join("\n")).length>0&&(s+="\n"),(t=[p,q].filter(dg).join("\n")).length>0&&(t+="\n")):(s=[ds(c),"#define SHADER_NAME "+c.shaderName,q,c.instancing?"#define USE_INSTANCING":"",c.instancingColor?"#define USE_INSTANCING_COLOR":"",c.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+o,"#define MAX_BONES "+c.maxBones,c.useFog&&c.fog?"#define USE_FOG":"",c.useFog&&c.fogExp2?"#define FOG_EXP2":"",c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":"",c.envMap?"#define "+m:"",c.lightMap?"#define USE_LIGHTMAP":"",c.aoMap?"#define USE_AOMAP":"",c.emissiveMap?"#define USE_EMISSIVEMAP":"",c.bumpMap?"#define USE_BUMPMAP":"",c.normalMap?"#define USE_NORMALMAP":"",c.normalMap&&c.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",c.normalMap&&c.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",c.clearcoatMap?"#define USE_CLEARCOATMAP":"",c.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",c.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",c.displacementMap&&c.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",c.specularMap?"#define USE_SPECULARMAP":"",c.roughnessMap?"#define USE_ROUGHNESSMAP":"",c.metalnessMap?"#define USE_METALNESSMAP":"",c.alphaMap?"#define USE_ALPHAMAP":"",c.transmissionMap?"#define USE_TRANSMISSIONMAP":"",c.vertexTangents?"#define USE_TANGENT":"",c.vertexColors?"#define USE_COLOR":"",c.vertexUvs?"#define USE_UV":"",c.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",c.flatShading?"#define FLAT_SHADED":"",c.skinning?"#define USE_SKINNING":"",c.useVertexTexture?"#define BONE_TEXTURE":"",c.morphTargets?"#define USE_MORPHTARGETS":"",c.morphNormals&& !1===c.flatShading?"#define USE_MORPHNORMALS":"",c.doubleSided?"#define DOUBLE_SIDED":"",c.flipSided?"#define FLIP_SIDED":"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapEnabled?"#define "+k:"",c.sizeAttenuation?"#define USE_SIZEATTENUATION":"",c.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",c.logarithmicDepthBuffer&&c.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#ifdef USE_COLOR","	attribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif","\n"].filter(dg).join("\n"),t=[p,ds(c),"#define SHADER_NAME "+c.shaderName,q,c.alphaTest?"#define ALPHATEST "+c.alphaTest+(c.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+o,c.useFog&&c.fog?"#define USE_FOG":"",c.useFog&&c.fogExp2?"#define FOG_EXP2":"",c.map?"#define USE_MAP":"",c.matcap?"#define USE_MATCAP":"",c.envMap?"#define USE_ENVMAP":"",c.envMap?"#define "+l:"",c.envMap?"#define "+m:"",c.envMap?"#define "+n:"",c.lightMap?"#define USE_LIGHTMAP":"",c.aoMap?"#define USE_AOMAP":"",c.emissiveMap?"#define USE_EMISSIVEMAP":"",c.bumpMap?"#define USE_BUMPMAP":"",c.normalMap?"#define USE_NORMALMAP":"",c.normalMap&&c.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",c.normalMap&&c.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",c.clearcoatMap?"#define USE_CLEARCOATMAP":"",c.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",c.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",c.specularMap?"#define USE_SPECULARMAP":"",c.roughnessMap?"#define USE_ROUGHNESSMAP":"",c.metalnessMap?"#define USE_METALNESSMAP":"",c.alphaMap?"#define USE_ALPHAMAP":"",c.sheen?"#define USE_SHEEN":"",c.transmissionMap?"#define USE_TRANSMISSIONMAP":"",c.vertexTangents?"#define USE_TANGENT":"",c.vertexColors||c.instancingColor?"#define USE_COLOR":"",c.vertexUvs?"#define USE_UV":"",c.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",c.gradientMap?"#define USE_GRADIENTMAP":"",c.flatShading?"#define FLAT_SHADED":"",c.doubleSided?"#define DOUBLE_SIDED":"",c.flipSided?"#define FLIP_SIDED":"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapEnabled?"#define "+k:"",c.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",c.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",c.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",c.logarithmicDepthBuffer&&c.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(c.extensionShaderTextureLOD||c.envMap)&&c.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",0!==c.toneMapping?"#define TONE_MAPPING":"",0!==c.toneMapping?b7.tonemapping_pars_fragment:"",0!==c.toneMapping?function(a,b){let c;switch(b){case 1:c="Linear";break;case 2:c="Reinhard";break;case 3:c="OptimizedCineon";break;case 4:c="ACESFilmic";break;case 5:c="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",b),c="Linear"}return"vec3 "+a+"( vec3 color ) { return "+c+"ToneMapping( color ); }"}("toneMapping",c.toneMapping):"",c.dithering?"#define DITHERING":"",b7.encodings_pars_fragment,c.map?df("mapTexelToLinear",c.mapEncoding):"",c.matcap?df("matcapTexelToLinear",c.matcapEncoding):"",c.envMap?df("envMapTexelToLinear",c.envMapEncoding):"",c.emissiveMap?df("emissiveMapTexelToLinear",c.emissiveMapEncoding):"",c.lightMap?df("lightMapTexelToLinear",c.lightMapEncoding):"",function(a,b){let c=dd(b);return"vec4 "+a+"( vec4 value ) { return LinearTo"+c[0]+c[1]+"; }"}("linearToOutputTexel",c.outputEncoding),c.depthPacking?"#define DEPTH_PACKING "+c.depthPacking:"","\n"].filter(dg).join("\n")),h=dk(h),h=di(h=dh(h,c),c),i=dk(i),i=di(i=dh(i,c),c),h=dp(h),i=dp(i),c.isWebGL2&& !0!==c.isRawShaderMaterial&&(u="#version 300 es\n",s="#define attribute in\n#define varying out\n#define texture2D texture\n"+s,t=["#define varying in",c.glslVersion===y?"":"out highp vec4 pc_fragColor;",c.glslVersion===y?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+t);let v=u+s+h,w=u+t+i,x=db(f,35633,v),z=db(f,35632,w);if(f.attachShader(r,x),f.attachShader(r,z),void 0!==c.index0AttributeName?f.bindAttribLocation(r,0,c.index0AttributeName):!0===c.morphTargets&&f.bindAttribLocation(r,0,"position"),f.linkProgram(r),a.debug.checkShaderErrors){let A=f.getProgramInfoLog(r).trim(),B=f.getShaderInfoLog(x).trim(),C=f.getShaderInfoLog(z).trim(),D=!0,E=!0;if(!1===f.getProgramParameter(r,35714)){D=!1;let F=de(f,x,"vertex"),G=de(f,z,"fragment");console.error("THREE.WebGLProgram: shader error: ",f.getError(),"35715",f.getProgramParameter(r,35715),"gl.getProgramInfoLog",A,F,G)}else""!==A?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",A):(""===B||""===C)&&(E=!1);E&&(this.diagnostics={runnable:D,programLog:A,vertexShader:{log:B,prefix:s},fragmentShader:{log:C,prefix:t}})}f.deleteShader(x),f.deleteShader(z);let H;this.getUniforms=function(){return void 0===H&&(H=new da(f,r)),H};let I;return this.getAttributes=function(){return void 0===I&&(I=function(a,b){let c={},d=a.getProgramParameter(b,35721);for(let e=0;e<d;e++){let f=a.getActiveAttrib(b,e),g=f.name;c[g]=a.getAttribLocation(b,g)}return c}(f,r)),I},this.destroy=function(){d.releaseStatesOfProgram(this),f.deleteProgram(r),this.program=void 0},this.name=c.shaderName,this.id=dc++,this.cacheKey=b,this.usedTimes=1,this.program=r,this.vertexShader=x,this.fragmentShader=z,this}function du(a,b,c,d,e,f){let i=[],j=d.isWebGL2,k=d.logarithmicDepthBuffer,l=d.floatVertexTextures,m=d.maxVertexUniforms,n=d.vertexTextures,o=d.precision,p={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},q=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","instancingColor","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen","transmissionMap"];function r(a){let b;return a?a.isTexture?b=a.encoding:a.isWebGLRenderTarget&&(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),b=a.texture.encoding):b=3e3,b}return{getParameters:function(e,i,q,s,t){let u=s.fog,v=e.isMeshStandardMaterial?s.environment:null,w=b.get(e.envMap||v),y=p[e.type],z=t.isSkinnedMesh?function(a){let b=a.skeleton,c=b.bones;if(l)return 1024;{let d=m,e=Math.floor((d-20)/4),f=Math.min(e,c.length);return f<c.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+c.length+" bones. This GPU supports "+f+"."),0):f}}(t):0;null!==e.precision&&(o=d.getMaxPrecision(e.precision))!==e.precision&&console.warn("THREE.WebGLProgram.getParameters:",e.precision,"not supported, using",o,"instead.");let A,B;if(y){let C=b9[y];A=C.vertexShader,B=C.fragmentShader}else A=e.vertexShader,B=e.fragmentShader;let D=a.getRenderTarget(),E={isWebGL2:j,shaderID:y,shaderName:e.type,vertexShader:A,fragmentShader:B,defines:e.defines,isRawShaderMaterial:!0===e.isRawShaderMaterial,glslVersion:e.glslVersion,precision:o,instancing:!0===t.isInstancedMesh,instancingColor:!0===t.isInstancedMesh&&null!==t.instanceColor,supportsVertexTextures:n,outputEncoding:null!==D?r(D.texture):a.outputEncoding,map:!!e.map,mapEncoding:r(e.map),matcap:!!e.matcap,matcapEncoding:r(e.matcap),envMap:!!w,envMapMode:w&&w.mapping,envMapEncoding:r(w),envMapCubeUV:!!w&&(306===w.mapping||307===w.mapping),lightMap:!!e.lightMap,lightMapEncoding:r(e.lightMap),aoMap:!!e.aoMap,emissiveMap:!!e.emissiveMap,emissiveMapEncoding:r(e.emissiveMap),bumpMap:!!e.bumpMap,normalMap:!!e.normalMap,objectSpaceNormalMap:1===e.normalMapType,tangentSpaceNormalMap:e.normalMapType===x,clearcoatMap:!!e.clearcoatMap,clearcoatRoughnessMap:!!e.clearcoatRoughnessMap,clearcoatNormalMap:!!e.clearcoatNormalMap,displacementMap:!!e.displacementMap,roughnessMap:!!e.roughnessMap,metalnessMap:!!e.metalnessMap,specularMap:!!e.specularMap,alphaMap:!!e.alphaMap,gradientMap:!!e.gradientMap,sheen:!!e.sheen,transmissionMap:!!e.transmissionMap,combine:e.combine,vertexTangents:e.normalMap&&e.vertexTangents,vertexColors:e.vertexColors,vertexUvs:!!e.map||!!e.bumpMap||!!e.normalMap||!!e.specularMap||!!e.alphaMap||!!e.emissiveMap||!!e.roughnessMap||!!e.metalnessMap||!!e.clearcoatMap||!!e.clearcoatRoughnessMap||!!e.clearcoatNormalMap||!!e.displacementMap||!!e.transmissionMap,uvsVertexOnly:!(e.map||e.bumpMap||e.normalMap||e.specularMap||e.alphaMap||e.emissiveMap||e.roughnessMap||e.metalnessMap||e.clearcoatNormalMap||e.transmissionMap)&&!!e.displacementMap,fog:!!u,useFog:e.fog,fogExp2:u&&u.isFogExp2,flatShading:e.flatShading,sizeAttenuation:e.sizeAttenuation,logarithmicDepthBuffer:k,skinning:e.skinning&&z>0,maxBones:z,useVertexTexture:l,morphTargets:e.morphTargets,morphNormals:e.morphNormals,maxMorphTargets:a.maxMorphTargets,maxMorphNormals:a.maxMorphNormals,numDirLights:i.directional.length,numPointLights:i.point.length,numSpotLights:i.spot.length,numRectAreaLights:i.rectArea.length,numHemiLights:i.hemi.length,numDirLightShadows:i.directionalShadowMap.length,numPointLightShadows:i.pointShadowMap.length,numSpotLightShadows:i.spotShadowMap.length,numClippingPlanes:f.numPlanes,numClipIntersection:f.numIntersection,dithering:e.dithering,shadowMapEnabled:a.shadowMap.enabled&&q.length>0,shadowMapType:a.shadowMap.type,toneMapping:e.toneMapped?a.toneMapping:0,physicallyCorrectLights:a.physicallyCorrectLights,premultipliedAlpha:e.premultipliedAlpha,alphaTest:e.alphaTest,doubleSided:e.side===h,flipSided:e.side===g,depthPacking:void 0!==e.depthPacking&&e.depthPacking,index0AttributeName:e.index0AttributeName,extensionDerivatives:e.extensions&&e.extensions.derivatives,extensionFragDepth:e.extensions&&e.extensions.fragDepth,extensionDrawBuffers:e.extensions&&e.extensions.drawBuffers,extensionShaderTextureLOD:e.extensions&&e.extensions.shaderTextureLOD,rendererExtensionFragDepth:j||c.has("EXT_frag_depth"),rendererExtensionDrawBuffers:j||c.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:j||c.has("EXT_shader_texture_lod"),customProgramCacheKey:e.customProgramCacheKey()};return E},getProgramCacheKey:function(b){let c=[];if(b.shaderID?c.push(b.shaderID):(c.push(b.fragmentShader),c.push(b.vertexShader)),void 0!==b.defines)for(let d in b.defines)c.push(d),c.push(b.defines[d]);if(!1===b.isRawShaderMaterial){for(let e=0;e<q.length;e++)c.push(b[q[e]]);c.push(a.outputEncoding),c.push(a.gammaFactor)}return c.push(b.customProgramCacheKey),c.join()},getUniforms:function(a){let b=p[a.type],c;if(b){let d=b9[b];c=bV.clone(d.uniforms)}else c=a.uniforms;return c},acquireProgram:function(b,c){let d;for(let f=0,g=i.length;f<g;f++){let h=i[f];if(h.cacheKey===c){d=h,++d.usedTimes;break}}return void 0===d&&(d=new dt(a,c,b,e),i.push(d)),d},releaseProgram:function(a){if(0== --a.usedTimes){let b=i.indexOf(a);i[b]=i[i.length-1],i.pop(),a.destroy()}},programs:i}}function dv(){let a=new WeakMap;return{get:function(b){let c=a.get(b);return void 0===c&&(c={},a.set(b,c)),c},remove:function(b){a.delete(b)},update:function(b,c,d){a.get(b)[c]=d},dispose:function(){a=new WeakMap}}}function dw(a,b){if(a.groupOrder!==b.groupOrder)return a.groupOrder-b.groupOrder;if(a.renderOrder!==b.renderOrder)return a.renderOrder-b.renderOrder;if(a.program!==b.program)return a.program.id-b.program.id;if(a.material.id!==b.material.id)return a.material.id-b.material.id;if(a.z!==b.z)return a.z-b.z;else return a.id-b.id}function dx(a,b){return a.groupOrder!==b.groupOrder?a.groupOrder-b.groupOrder:a.renderOrder!==b.renderOrder?a.renderOrder-b.renderOrder:a.z!==b.z?b.z-a.z:a.id-b.id}function dy(a){let b=[],c=0,d=[],e=[],f={id:-1};function g(d,e,g,h,i,j){let k=b[c],l=a.get(g);return void 0===k?(k={id:d.id,object:d,geometry:e,material:g,program:l.program||f,groupOrder:h,renderOrder:d.renderOrder,z:i,group:j},b[c]=k):(k.id=d.id,k.object=d,k.geometry=e,k.material=g,k.program=l.program||f,k.groupOrder=h,k.renderOrder=d.renderOrder,k.z=i,k.group=j),c++,k}return{opaque:d,transparent:e,init:function(){c=0,d.length=0,e.length=0},push:function(a,b,c,f,h,i){let j=g(a,b,c,f,h,i);(!0===c.transparent?e:d).push(j)},unshift:function(a,b,c,f,h,i){let j=g(a,b,c,f,h,i);(!0===c.transparent?e:d).unshift(j)},finish:function(){for(let a=c,d=b.length;a<d;a++){let e=b[a];if(null===e.id)break;e.id=null,e.object=null,e.geometry=null,e.material=null,e.program=null,e.group=null}},sort:function(a,b){d.length>1&&d.sort(a||dw),e.length>1&&e.sort(b||dx)}}}function dz(a){let b=new WeakMap;return{get:function(c,d){let e=b.get(c),f;return void 0===e?(f=new dy(a),b.set(c,new WeakMap),b.get(c).set(d,f)):void 0===(f=e.get(d))&&(f=new dy(a),e.set(d,f)),f},dispose:function(){b=new WeakMap}}}function dA(){let a={};return{get:function(b){if(void 0!==a[b.id])return a[b.id];let c;switch(b.type){case"DirectionalLight":c={direction:new O,color:new a7};break;case"SpotLight":c={position:new O,direction:new O,color:new a7,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":c={position:new O,color:new a7,distance:0,decay:0};break;case"HemisphereLight":c={direction:new O,skyColor:new a7,groundColor:new a7};break;case"RectAreaLight":c={color:new a7,position:new O,halfWidth:new O,halfHeight:new O}}return a[b.id]=c,c}}}let dB=0;function dC(a,b){return(b.castShadow?1:0)-(a.castShadow?1:0)}function dD(){let a=new dA,b=function(){let a={};return{get:function(b){if(void 0!==a[b.id])return a[b.id];let c;switch(b.type){case"DirectionalLight":case"SpotLight":c={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new E};break;case"PointLight":c={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new E,shadowCameraNear:1,shadowCameraFar:1e3}}return a[b.id]=c,c}}}(),c={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let d=0;d<9;d++)c.probe.push(new O);let e=new O,f=new ao,g=new ao;return{setup:function(d,h,i){let j=0,k=0,l=0;for(let m=0;m<9;m++)c.probe[m].set(0,0,0);let n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=i.matrixWorldInverse;d.sort(dC);for(let w=0,x=d.length;w<x;w++){let y=d[w],z=y.color,A=y.intensity,B=y.distance,C=y.shadow&&y.shadow.map?y.shadow.map.texture:null;if(y.isAmbientLight)j+=z.r*A,k+=z.g*A,l+=z.b*A;else if(y.isLightProbe)for(let D=0;D<9;D++)c.probe[D].addScaledVector(y.sh.coefficients[D],A);else if(y.isDirectionalLight){let E=a.get(y);if(E.color.copy(y.color).multiplyScalar(y.intensity),E.direction.setFromMatrixPosition(y.matrixWorld),e.setFromMatrixPosition(y.target.matrixWorld),E.direction.sub(e),E.direction.transformDirection(v),y.castShadow){let F=y.shadow,G=b.get(y);G.shadowBias=F.bias,G.shadowNormalBias=F.normalBias,G.shadowRadius=F.radius,G.shadowMapSize=F.mapSize,c.directionalShadow[n]=G,c.directionalShadowMap[n]=C,c.directionalShadowMatrix[n]=y.shadow.matrix,s++}c.directional[n]=E,n++}else if(y.isSpotLight){let H=a.get(y);if(H.position.setFromMatrixPosition(y.matrixWorld),H.position.applyMatrix4(v),H.color.copy(z).multiplyScalar(A),H.distance=B,H.direction.setFromMatrixPosition(y.matrixWorld),e.setFromMatrixPosition(y.target.matrixWorld),H.direction.sub(e),H.direction.transformDirection(v),H.coneCos=Math.cos(y.angle),H.penumbraCos=Math.cos(y.angle*(1-y.penumbra)),H.decay=y.decay,y.castShadow){let I=y.shadow,J=b.get(y);J.shadowBias=I.bias,J.shadowNormalBias=I.normalBias,J.shadowRadius=I.radius,J.shadowMapSize=I.mapSize,c.spotShadow[p]=J,c.spotShadowMap[p]=C,c.spotShadowMatrix[p]=y.shadow.matrix,u++}c.spot[p]=H,p++}else if(y.isRectAreaLight){let K=a.get(y);K.color.copy(z).multiplyScalar(A),K.position.setFromMatrixPosition(y.matrixWorld),K.position.applyMatrix4(v),g.identity(),f.copy(y.matrixWorld),f.premultiply(v),g.extractRotation(f),K.halfWidth.set(.5*y.width,0,0),K.halfHeight.set(0,.5*y.height,0),K.halfWidth.applyMatrix4(g),K.halfHeight.applyMatrix4(g),c.rectArea[q]=K,q++}else if(y.isPointLight){let L=a.get(y);if(L.position.setFromMatrixPosition(y.matrixWorld),L.position.applyMatrix4(v),L.color.copy(y.color).multiplyScalar(y.intensity),L.distance=y.distance,L.decay=y.decay,y.castShadow){let M=y.shadow,N=b.get(y);N.shadowBias=M.bias,N.shadowNormalBias=M.normalBias,N.shadowRadius=M.radius,N.shadowMapSize=M.mapSize,N.shadowCameraNear=M.camera.near,N.shadowCameraFar=M.camera.far,c.pointShadow[o]=N,c.pointShadowMap[o]=C,c.pointShadowMatrix[o]=y.shadow.matrix,t++}c.point[o]=L,o++}else if(y.isHemisphereLight){let O=a.get(y);O.direction.setFromMatrixPosition(y.matrixWorld),O.direction.transformDirection(v),O.direction.normalize(),O.skyColor.copy(y.color).multiplyScalar(A),O.groundColor.copy(y.groundColor).multiplyScalar(A),c.hemi[r]=O,r++}}q>0&&(c.rectAreaLTC1=b8.LTC_1,c.rectAreaLTC2=b8.LTC_2),c.ambient[0]=j,c.ambient[1]=k,c.ambient[2]=l;let P=c.hash;(P.directionalLength!==n||P.pointLength!==o||P.spotLength!==p||P.rectAreaLength!==q||P.hemiLength!==r||P.numDirectionalShadows!==s||P.numPointShadows!==t||P.numSpotShadows!==u)&&(c.directional.length=n,c.spot.length=p,c.rectArea.length=q,c.point.length=o,c.hemi.length=r,c.directionalShadow.length=s,c.directionalShadowMap.length=s,c.pointShadow.length=t,c.pointShadowMap.length=t,c.spotShadow.length=u,c.spotShadowMap.length=u,c.directionalShadowMatrix.length=s,c.pointShadowMatrix.length=t,c.spotShadowMatrix.length=u,P.directionalLength=n,P.pointLength=o,P.spotLength=p,P.rectAreaLength=q,P.hemiLength=r,P.numDirectionalShadows=s,P.numPointShadows=t,P.numSpotShadows=u,c.version=dB++)},state:c}}function dE(){let a=new dD,b=[],c=[];return{init:function(){b.length=0,c.length=0},state:{lightsArray:b,shadowsArray:c,lights:a},setupLights:function(d){a.setup(b,c,d)},pushLight:function(a){b.push(a)},pushShadow:function(a){c.push(a)}}}function dF(){let a=new WeakMap;return{get:function(b,c){let d;return!1===a.has(b)?(d=new dE,a.set(b,new WeakMap),a.get(b).set(c,d)):!1===a.get(b).has(c)?(d=new dE,a.get(b).set(c,d)):d=a.get(b).get(c),d},dispose:function(){a=new WeakMap}}}function dG(a){ba.call(this),this.type="MeshDepthMaterial",this.depthPacking=3200,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(a)}function dH(a){ba.call(this),this.type="MeshDistanceMaterial",this.referencePosition=new O,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(a)}function dI(a,b,c){let d=new b3,e=new E,i=new E,j=new K,k=[],m=[],n={},p={0:g,1:f,2:h},q=new bW({defines:{SAMPLE_RATE:.25,HALF_SAMPLE_RATE:.125},uniforms:{shadow_pass:{value:null},resolution:{value:new E},radius:{value:4}},vertexShader:"void main() {\n	gl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n	float mean = 0.0;\n	float squared_mean = 0.0;\n	float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );\n	for ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n		#ifdef HORIZONAL_PASS\n			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n			mean += distribution.x;\n			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n		#else\n			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );\n			mean += depth;\n			squared_mean += depth * depth;\n		#endif\n	}\n	mean = mean * HALF_SAMPLE_RATE;\n	squared_mean = squared_mean * HALF_SAMPLE_RATE;\n	float std_dev = sqrt( squared_mean - mean * mean );\n	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),r=q.clone();r.defines.HORIZONAL_PASS=1;let s=new bx;s.setAttribute("position",new be(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));let t=new bP(s,q),u=this;function v(c,d){let e=b.update(t);q.uniforms.shadow_pass.value=c.map.texture,q.uniforms.resolution.value=c.mapSize,q.uniforms.radius.value=c.radius,a.setRenderTarget(c.mapPass),a.clear(),a.renderBufferDirect(d,null,e,q,t,null),r.uniforms.shadow_pass.value=c.mapPass.texture,r.uniforms.resolution.value=c.mapSize,r.uniforms.radius.value=c.radius,a.setRenderTarget(c.map),a.clear(),a.renderBufferDirect(d,null,e,r,t,null)}function w(a,b,c){let d=a<<0|b<<1|c<<2,e=k[d];return void 0===e&&(e=new dG({depthPacking:3201,morphTargets:a,skinning:b}),k[d]=e),e}function x(a,b,c){let d=a<<0|b<<1|c<<2,e=m[d];return void 0===e&&(e=new dH({morphTargets:a,skinning:b}),m[d]=e),e}function y(b,c,d,e,f,g,h){let i=null,j=w,k=b.customDepthMaterial;if(!0===e.isPointLight&&(j=x,k=b.customDistanceMaterial),void 0===k){let l=!1;!0===d.morphTargets&&(l=c.morphAttributes&&c.morphAttributes.position&&c.morphAttributes.position.length>0);let m=!1;!0===b.isSkinnedMesh&&(!0===d.skinning?m=!0:console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",b));let o=!0===b.isInstancedMesh;i=j(l,m,o)}else i=k;if(a.localClippingEnabled&& !0===d.clipShadows&&0!==d.clippingPlanes.length){let q=i.uuid,r=d.uuid,s=n[q];void 0===s&&(s={},n[q]=s);let t=s[r];void 0===t&&(t=i.clone(),s[r]=t),i=t}return i.visible=d.visible,i.wireframe=d.wireframe,3===h?i.side=null!==d.shadowSide?d.shadowSide:d.side:i.side=null!==d.shadowSide?d.shadowSide:p[d.side],i.clipShadows=d.clipShadows,i.clippingPlanes=d.clippingPlanes,i.clipIntersection=d.clipIntersection,i.wireframeLinewidth=d.wireframeLinewidth,i.linewidth=d.linewidth,!0===e.isPointLight&& !0===i.isMeshDistanceMaterial&&(i.referencePosition.setFromMatrixPosition(e.matrixWorld),i.nearDistance=f,i.farDistance=g),i}function z(c,e,f,g,h){if(!1===c.visible)return;let i=c.layers.test(e.layers);if(i&&(c.isMesh||c.isLine||c.isPoints)&&(c.castShadow||c.receiveShadow&&3===h)&&(!c.frustumCulled||d.intersectsObject(c))){c.modelViewMatrix.multiplyMatrices(f.matrixWorldInverse,c.matrixWorld);let j=b.update(c),k=c.material;if(Array.isArray(k)){let l=j.groups;for(let m=0,n=l.length;m<n;m++){let o=l[m],p=k[o.materialIndex];if(p&&p.visible){let q=y(c,j,p,g,f.near,f.far,h);a.renderBufferDirect(f,null,j,q,c,o)}}}else if(k.visible){let r=y(c,j,k,g,f.near,f.far,h);a.renderBufferDirect(f,null,j,r,c,null)}}let s=c.children;for(let t=0,u=s.length;t<u;t++)z(s[t],e,f,g,h)}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=1,this.render=function(b,f,g){if(!1===u.enabled|| !1===u.autoUpdate&& !1===u.needsUpdate||0===b.length)return;let h=a.getRenderTarget(),k=a.getActiveCubeFace(),m=a.getActiveMipmapLevel(),n=a.state;n.setBlending(0),n.buffers.color.setClear(1,1,1,1),n.buffers.depth.setTest(!0),n.setScissorTest(!1);for(let p=0,q=b.length;p<q;p++){let r=b[p],s=r.shadow;if(void 0===s){console.warn("THREE.WebGLShadowMap:",r,"has no shadow.");continue}if(!1===s.autoUpdate&& !1===s.needsUpdate)continue;e.copy(s.mapSize);let t=s.getFrameExtents();if(e.multiply(t),i.copy(s.mapSize),(e.x>c||e.y>c)&&(e.x>c&&(i.x=Math.floor(c/t.x),e.x=i.x*t.x,s.mapSize.x=i.x),e.y>c&&(i.y=Math.floor(c/t.y),e.y=i.y*t.y,s.mapSize.y=i.y)),null===s.map&&!s.isPointLightShadow&&3===this.type){let w={minFilter:o,magFilter:o,format:1023};s.map=new L(e.x,e.y,w),s.map.texture.name=r.name+".shadowMap",s.mapPass=new L(e.x,e.y,w),s.camera.updateProjectionMatrix()}if(null===s.map){let x={minFilter:l,magFilter:l,format:1023};s.map=new L(e.x,e.y,x),s.map.texture.name=r.name+".shadowMap",s.camera.updateProjectionMatrix()}a.setRenderTarget(s.map),a.clear();let y=s.getViewportCount();for(let A=0;A<y;A++){let B=s.getViewport(A);j.set(i.x*B.x,i.y*B.y,i.x*B.z,i.y*B.w),n.viewport(j),s.updateMatrices(r,A),d=s.getFrustum(),z(f,g,s.camera,r,this.type)}s.isPointLightShadow||3!==this.type||v(s,g),s.needsUpdate=!1}u.needsUpdate=!1,a.setRenderTarget(h,k,m)}}function dJ(a,b,c){let d=c.isWebGL2,e=new function(){let b=!1,c=new K,d=null,e=new K(0,0,0,0);return{setMask:function(c){d===c||b||(a.colorMask(c,c,c,c),d=c)},setLocked:function(a){b=a},setClear:function(b,d,f,g,h){!0===h&&(b*=g,d*=g,f*=g),c.set(b,d,f,g),!1===e.equals(c)&&(a.clearColor(b,d,f,g),e.copy(c))},reset:function(){b=!1,d=null,e.set(-1,0,0,0)}}},f=new function(){let b=!1,c=null,d=null,e=null;return{setTest:function(a){a?J(2929):L(2929)},setMask:function(d){c===d||b||(a.depthMask(d),c=d)},setFunc:function(b){if(d!==b){if(b)switch(b){case 0:a.depthFunc(512);break;case 1:a.depthFunc(519);break;case 2:a.depthFunc(513);break;case 3:default:a.depthFunc(515);break;case 4:a.depthFunc(514);break;case 5:a.depthFunc(518);break;case 6:a.depthFunc(516);break;case 7:a.depthFunc(517)}else a.depthFunc(515);d=b}},setLocked:function(a){b=a},setClear:function(b){e!==b&&(a.clearDepth(b),e=b)},reset:function(){b=!1,c=null,d=null,e=null}}},i=new function(){let b=!1,c=null,d=null,e=null,f=null,g=null,h=null,i=null,j=null;return{setTest:function(a){b||(a?J(2960):L(2960))},setMask:function(d){c===d||b||(a.stencilMask(d),c=d)},setFunc:function(b,c,g){(d!==b||e!==c||f!==g)&&(a.stencilFunc(b,c,g),d=b,e=c,f=g)},setOp:function(b,c,d){(g!==b||h!==c||i!==d)&&(a.stencilOp(b,c,d),g=b,h=c,i=d)},setLocked:function(a){b=a},setClear:function(b){j!==b&&(a.clearStencil(b),j=b)},reset:function(){b=!1,c=null,d=null,e=null,f=null,g=null,h=null,i=null,j=null}}},j={},k=null,l=null,m=null,n=null,o=null,p=null,q=null,r=null,s=null,t=!1,u=null,v=null,w=null,x=null,y=null,z=a.getParameter(35661),A=!1,B=0,C=a.getParameter(7938);-1!==C.indexOf("WebGL")?A=parseFloat(/^WebGL\ ([0-9])/.exec(C)[1])>=1:-1!==C.indexOf("OpenGL ES")&&(A=parseFloat(/^OpenGL\ ES\ ([0-9])/.exec(C)[1])>=2);let D=null,E={},F=new K,G=new K;function H(b,c,d){let e=new Uint8Array(4),f=a.createTexture();a.bindTexture(b,f),a.texParameteri(b,10241,9728),a.texParameteri(b,10240,9728);for(let g=0;g<d;g++)a.texImage2D(c+g,0,6408,1,1,0,6408,5121,e);return f}let I={};function J(b){!0!==j[b]&&(a.enable(b),j[b]=!0)}function L(b){!1!==j[b]&&(a.disable(b),j[b]=!1)}I[3553]=H(3553,3553,1),I[34067]=H(34067,34069,6),e.setClear(0,0,0,1),f.setClear(1),i.setClear(0),J(2929),f.setFunc(3),Q(!1),R(1),J(2884),P(0);let M={100:32774,101:32778,102:32779};if(d)M[103]=32775,M[104]=32776;else{let N=b.get("EXT_blend_minmax");null!==N&&(M[103]=N.MIN_EXT,M[104]=N.MAX_EXT)}let O={200:0,201:1,202:768,204:770,210:776,208:774,206:772,203:769,205:771,209:775,207:773};function P(b,c,d,e,f,g,h,i){if(0===b){l&&(L(3042),l=!1);return}if(l||(J(3042),l=!0),5!==b){if(b!==m||i!==t){if((100!==n||100!==q)&&(a.blendEquation(32774),n=100,q=100),i)switch(b){case 1:a.blendFuncSeparate(1,771,1,771);break;case 2:a.blendFunc(1,1);break;case 3:a.blendFuncSeparate(0,0,769,771);break;case 4:a.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",b)}else switch(b){case 1:a.blendFuncSeparate(770,771,1,771);break;case 2:a.blendFunc(770,1);break;case 3:a.blendFunc(0,769);break;case 4:a.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",b)}o=null,p=null,r=null,s=null,m=b,t=i}return}f=f||c,g=g||d,h=h||e,(c!==n||f!==q)&&(a.blendEquationSeparate(M[c],M[f]),n=c,q=f),(d!==o||e!==p||g!==r||h!==s)&&(a.blendFuncSeparate(O[d],O[e],O[g],O[h]),o=d,p=e,r=g,s=h),m=b,t=null}function Q(b){u!==b&&(b?a.frontFace(2304):a.frontFace(2305),u=b)}function R(b){0!==b?(J(2884),b!==v&&(1===b?a.cullFace(1029):2===b?a.cullFace(1028):a.cullFace(1032))):L(2884),v=b}function S(b,c,d){b?(J(32823),(x!==c||y!==d)&&(a.polygonOffset(c,d),x=c,y=d)):L(32823)}function T(b){void 0===b&&(b=33984+z-1),D!==b&&(a.activeTexture(b),D=b)}return{buffers:{color:e,depth:f,stencil:i},enable:J,disable:L,useProgram:function(b){return k!==b&&(a.useProgram(b),k=b,!0)},setBlending:P,setMaterial:function(a,b){a.side===h?L(2884):J(2884);let c=a.side===g;b&&(c=!c),Q(c),1===a.blending&& !1===a.transparent?P(0):P(a.blending,a.blendEquation,a.blendSrc,a.blendDst,a.blendEquationAlpha,a.blendSrcAlpha,a.blendDstAlpha,a.premultipliedAlpha),f.setFunc(a.depthFunc),f.setTest(a.depthTest),f.setMask(a.depthWrite),e.setMask(a.colorWrite);let d=a.stencilWrite;i.setTest(d),d&&(i.setMask(a.stencilWriteMask),i.setFunc(a.stencilFunc,a.stencilRef,a.stencilFuncMask),i.setOp(a.stencilFail,a.stencilZFail,a.stencilZPass)),S(a.polygonOffset,a.polygonOffsetFactor,a.polygonOffsetUnits)},setFlipSided:Q,setCullFace:R,setLineWidth:function(b){b!==w&&(A&&a.lineWidth(b),w=b)},setPolygonOffset:S,setScissorTest:function(a){a?J(3089):L(3089)},activeTexture:T,bindTexture:function(b,c){null===D&&T();let d=E[D];void 0===d&&(d={type:void 0,texture:void 0},E[D]=d),(d.type!==b||d.texture!==c)&&(a.bindTexture(b,c||I[b]),d.type=b,d.texture=c)},unbindTexture:function(){let b=E[D];void 0!==b&& void 0!==b.type&&(a.bindTexture(b.type,null),b.type=void 0,b.texture=void 0)},compressedTexImage2D:function(){try{a.compressedTexImage2D.apply(a,arguments)}catch(b){console.error("THREE.WebGLState:",b)}},texImage2D:function(){try{a.texImage2D.apply(a,arguments)}catch(b){console.error("THREE.WebGLState:",b)}},texImage3D:function(){try{a.texImage3D.apply(a,arguments)}catch(b){console.error("THREE.WebGLState:",b)}},scissor:function(b){!1===F.equals(b)&&(a.scissor(b.x,b.y,b.z,b.w),F.copy(b))},viewport:function(b){!1===G.equals(b)&&(a.viewport(b.x,b.y,b.z,b.w),G.copy(b))},reset:function(){j={},D=null,E={},k=null,m=null,u=null,v=null,e.reset(),f.reset(),i.reset()}}}function dK(a,b,c,d,e,f,g){let h=e.isWebGL2,s=e.maxTextures,t=e.maxCubemapSize,u=e.maxTextureSize,v=e.maxSamples,w=new WeakMap,x,y=!1;try{y="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(z){}function A(a,b){return y?new OffscreenCanvas(a,b):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function B(a,b,c,d){let e=1;if((a.width>d||a.height>d)&&(e=d/Math.max(a.width,a.height)),e<1|| !0===b){if("undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&a instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&a instanceof ImageBitmap){let f=b?D.floorPowerOfTwo:Math.floor,g=f(e*a.width),h=f(e*a.height);void 0===x&&(x=A(g,h));let i=c?A(g,h):x;i.width=g,i.height=h;let j=i.getContext("2d");return j.drawImage(a,0,0,g,h),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+a.width+"x"+a.height+") to ("+g+"x"+h+")."),i}"data"in a&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+a.width+"x"+a.height+").")}return a}function C(a){return D.isPowerOfTwo(a.width)&&D.isPowerOfTwo(a.height)}function E(a,b){return a.generateMipmaps&&b&&a.minFilter!==l&&a.minFilter!==o}function F(b,c,e,f){a.generateMipmap(b);let g=d.get(c);g.__maxMipLevel=Math.log(Math.max(e,f))*Math.LOG2E}function G(c,d,e){if(!1===h)return d;if(null!==c){if(void 0!==a[c])return a[c];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+c+"'")}let f=d;return 6403===d&&(5126===e&&(f=33326),5131===e&&(f=33325),5121===e&&(f=33321)),6407===d&&(5126===e&&(f=34837),5131===e&&(f=34843),5121===e&&(f=32849)),6408===d&&(5126===e&&(f=34836),5131===e&&(f=34842),5121===e&&(f=32856)),(33325===f||33326===f||34842===f||34836===f)&&b.get("EXT_color_buffer_float"),f}function H(a){return a===l||a===m||a===n?9728:9729}function I(a){let b=a.target;b.removeEventListener("dispose",I),K(b),b.isVideoTexture&&w.delete(b),g.memory.textures--}function J(a){let b=a.target;b.removeEventListener("dispose",J),L(b),g.memory.textures--}function K(b){let c=d.get(b);void 0!==c.__webglInit&&(a.deleteTexture(c.__webglTexture),d.remove(b))}function L(b){let c=d.get(b),e=d.get(b.texture);if(b){if(void 0!==e.__webglTexture&&a.deleteTexture(e.__webglTexture),b.depthTexture&&b.depthTexture.dispose(),b.isWebGLCubeRenderTarget)for(let f=0;f<6;f++)a.deleteFramebuffer(c.__webglFramebuffer[f]),c.__webglDepthbuffer&&a.deleteRenderbuffer(c.__webglDepthbuffer[f]);else a.deleteFramebuffer(c.__webglFramebuffer),c.__webglDepthbuffer&&a.deleteRenderbuffer(c.__webglDepthbuffer),c.__webglMultisampledFramebuffer&&a.deleteFramebuffer(c.__webglMultisampledFramebuffer),c.__webglColorRenderbuffer&&a.deleteRenderbuffer(c.__webglColorRenderbuffer),c.__webglDepthRenderbuffer&&a.deleteRenderbuffer(c.__webglDepthRenderbuffer);d.remove(b.texture),d.remove(b)}}let M=0;function N(a,b){let e=d.get(a);if(a.isVideoTexture&&Y(a),a.version>0&&e.__version!==a.version){let f=a.image;if(void 0===f)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else if(!1===f.complete)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{T(e,a,b);return}}c.activeTexture(33984+b),c.bindTexture(3553,e.__webglTexture)}function O(a,b){let e=d.get(a);if(a.version>0&&e.__version!==a.version){U(e,a,b);return}c.activeTexture(33984+b),c.bindTexture(34067,e.__webglTexture)}let P={[i]:10497,[j]:33071,[k]:33648},Q={[l]:9728,[m]:9984,[n]:9986,[o]:9729,[p]:9985,[q]:9987};function R(c,f,g){g?(a.texParameteri(c,10242,P[f.wrapS]),a.texParameteri(c,10243,P[f.wrapT]),(32879===c||35866===c)&&a.texParameteri(c,32882,P[f.wrapR]),a.texParameteri(c,10240,Q[f.magFilter]),a.texParameteri(c,10241,Q[f.minFilter])):(a.texParameteri(c,10242,33071),a.texParameteri(c,10243,33071),(32879===c||35866===c)&&a.texParameteri(c,32882,33071),(f.wrapS!==j||f.wrapT!==j)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),a.texParameteri(c,10240,H(f.magFilter)),a.texParameteri(c,10241,H(f.minFilter)),f.minFilter!==l&&f.minFilter!==o&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter."));let i=b.get("EXT_texture_filter_anisotropic");if(i){if(1015===f.type&&null===b.get("OES_texture_float_linear")||1016===f.type&&null===(h||b.get("OES_texture_half_float_linear")))return;(f.anisotropy>1||d.get(f).__currentAnisotropy)&&(a.texParameterf(c,i.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(f.anisotropy,e.getMaxAnisotropy())),d.get(f).__currentAnisotropy=f.anisotropy)}}function S(b,c){void 0===b.__webglInit&&(b.__webglInit=!0,c.addEventListener("dispose",I),b.__webglTexture=a.createTexture(),g.memory.textures++)}function T(b,d,e){var g;let i=3553;d.isDataTexture2DArray&&(i=35866),d.isDataTexture3D&&(i=32879),S(b,d),c.activeTexture(33984+e),c.bindTexture(i,b.__webglTexture),a.pixelStorei(37440,d.flipY),a.pixelStorei(37441,d.premultiplyAlpha),a.pixelStorei(3317,d.unpackAlignment);let k=(g=d,!h&&(g.wrapS!==j||g.wrapT!==j||g.minFilter!==l&&g.minFilter!==o)&& !1===C(d.image)),m=B(d.image,k,!1,u),n=C(m)||h,p=f.convert(d.format),q=f.convert(d.type),s=G(d.internalFormat,p,q);R(i,d,n);let t,v=d.mipmaps;if(d.isDepthTexture)s=6402,h?s=1015===d.type?36012:1014===d.type?33190:1020===d.type?35056:33189:1015===d.type&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),1026===d.format&&6402===s&&1012!==d.type&&1014!==d.type&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),d.type=1012,q=f.convert(d.type)),1027===d.format&&6402===s&&(s=34041,1020!==d.type&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),d.type=1020,q=f.convert(d.type))),c.texImage2D(3553,0,s,m.width,m.height,0,p,q,null);else if(d.isDataTexture){if(v.length>0&&n){for(let w=0,x=v.length;w<x;w++)t=v[w],c.texImage2D(3553,w,s,t.width,t.height,0,p,q,t.data);d.generateMipmaps=!1,b.__maxMipLevel=v.length-1}else c.texImage2D(3553,0,s,m.width,m.height,0,p,q,m.data),b.__maxMipLevel=0}else if(d.isCompressedTexture){for(let y=0,z=v.length;y<z;y++)t=v[y],1023!==d.format&&d.format!==r?null!==p?c.compressedTexImage2D(3553,y,s,t.width,t.height,0,t.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):c.texImage2D(3553,y,s,t.width,t.height,0,p,q,t.data);b.__maxMipLevel=v.length-1}else if(d.isDataTexture2DArray)c.texImage3D(35866,0,s,m.width,m.height,m.depth,0,p,q,m.data),b.__maxMipLevel=0;else if(d.isDataTexture3D)c.texImage3D(32879,0,s,m.width,m.height,m.depth,0,p,q,m.data),b.__maxMipLevel=0;else if(v.length>0&&n){for(let A=0,D=v.length;A<D;A++)t=v[A],c.texImage2D(3553,A,s,p,q,t);d.generateMipmaps=!1,b.__maxMipLevel=v.length-1}else c.texImage2D(3553,0,s,p,q,m),b.__maxMipLevel=0;E(d,n)&&F(i,d,m.width,m.height),b.__version=d.version,d.onUpdate&&d.onUpdate(d)}function U(b,d,e){if(6!==d.image.length)return;S(b,d),c.activeTexture(33984+e),c.bindTexture(34067,b.__webglTexture),a.pixelStorei(37440,d.flipY);let g=d&&(d.isCompressedTexture||d.image[0].isCompressedTexture),i=d.image[0]&&d.image[0].isDataTexture,j=[];for(let k=0;k<6;k++)g||i?j[k]=i?d.image[k].image:d.image[k]:j[k]=B(d.image[k],!1,!0,t);let l=j[0],m=C(l)||h,n=f.convert(d.format),o=f.convert(d.type),p=G(d.internalFormat,n,o);R(34067,d,m);let q;if(g){for(let s=0;s<6;s++){q=j[s].mipmaps;for(let u=0;u<q.length;u++){let v=q[u];1023!==d.format&&d.format!==r?null!==n?c.compressedTexImage2D(34069+s,u,p,v.width,v.height,0,v.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):c.texImage2D(34069+s,u,p,v.width,v.height,0,n,o,v.data)}}b.__maxMipLevel=q.length-1}else{q=d.mipmaps;for(let w=0;w<6;w++)if(i){c.texImage2D(34069+w,0,p,j[w].width,j[w].height,0,n,o,j[w].data);for(let x=0;x<q.length;x++){let y=q[x],z=y.image[w].image;c.texImage2D(34069+w,x+1,p,z.width,z.height,0,n,o,z.data)}}else{c.texImage2D(34069+w,0,p,n,o,j[w]);for(let A=0;A<q.length;A++){let D=q[A];c.texImage2D(34069+w,A+1,p,n,o,D.image[w])}}b.__maxMipLevel=q.length}E(d,m)&&F(34067,d,l.width,l.height),b.__version=d.version,d.onUpdate&&d.onUpdate(d)}function V(b,e,g,h){let i=f.convert(e.texture.format),j=f.convert(e.texture.type),k=G(e.texture.internalFormat,i,j);c.texImage2D(h,0,k,e.width,e.height,0,i,j,null),a.bindFramebuffer(36160,b),a.framebufferTexture2D(36160,g,h,d.get(e.texture).__webglTexture,0),a.bindFramebuffer(36160,null)}function W(b,c,d){if(a.bindRenderbuffer(36161,b),c.depthBuffer&&!c.stencilBuffer){let e=33189;if(d){let g=c.depthTexture;g&&g.isDepthTexture&&(1015===g.type?e=36012:1014===g.type&&(e=33190));let h=X(c);a.renderbufferStorageMultisample(36161,h,e,c.width,c.height)}else a.renderbufferStorage(36161,e,c.width,c.height);a.framebufferRenderbuffer(36160,36096,36161,b)}else if(c.depthBuffer&&c.stencilBuffer){if(d){let i=X(c);a.renderbufferStorageMultisample(36161,i,35056,c.width,c.height)}else a.renderbufferStorage(36161,34041,c.width,c.height);a.framebufferRenderbuffer(36160,33306,36161,b)}else{let j=f.convert(c.texture.format),k=f.convert(c.texture.type),l=G(c.texture.internalFormat,j,k);if(d){let m=X(c);a.renderbufferStorageMultisample(36161,m,l,c.width,c.height)}else a.renderbufferStorage(36161,l,c.width,c.height)}a.bindRenderbuffer(36161,null)}function X(a){return h&&a.isWebGLMultisampleRenderTarget?Math.min(v,a.samples):0}function Y(a){let b=g.render.frame;w.get(a)!==b&&(w.set(a,b),a.update())}let Z=!1,$=!1;this.allocateTextureUnit=function(){let a=M;return a>=s&&console.warn("THREE.WebGLTextures: Trying to use "+a+" texture units while this GPU supports only "+s),M+=1,a},this.resetTextureUnits=function(){M=0},this.setTexture2D=N,this.setTexture2DArray=function(a,b){let e=d.get(a);if(a.version>0&&e.__version!==a.version){T(e,a,b);return}c.activeTexture(33984+b),c.bindTexture(35866,e.__webglTexture)},this.setTexture3D=function(a,b){let e=d.get(a);if(a.version>0&&e.__version!==a.version){T(e,a,b);return}c.activeTexture(33984+b),c.bindTexture(32879,e.__webglTexture)},this.setTextureCube=O,this.setupRenderTarget=function(b){let e=d.get(b),i=d.get(b.texture);b.addEventListener("dispose",J),i.__webglTexture=a.createTexture(),g.memory.textures++;let j=!0===b.isWebGLCubeRenderTarget,k=!0===b.isWebGLMultisampleRenderTarget,l=C(b)||h;if(h&&b.texture.format===r&&(1015===b.texture.type||1016===b.texture.type)&&(b.texture.format=1023,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),j){e.__webglFramebuffer=[];for(let m=0;m<6;m++)e.__webglFramebuffer[m]=a.createFramebuffer()}else if(e.__webglFramebuffer=a.createFramebuffer(),k){if(h){e.__webglMultisampledFramebuffer=a.createFramebuffer(),e.__webglColorRenderbuffer=a.createRenderbuffer(),a.bindRenderbuffer(36161,e.__webglColorRenderbuffer);let n=f.convert(b.texture.format),o=f.convert(b.texture.type),p=G(b.texture.internalFormat,n,o),q=X(b);a.renderbufferStorageMultisample(36161,q,p,b.width,b.height),a.bindFramebuffer(36160,e.__webglMultisampledFramebuffer),a.framebufferRenderbuffer(36160,36064,36161,e.__webglColorRenderbuffer),a.bindRenderbuffer(36161,null),b.depthBuffer&&(e.__webglDepthRenderbuffer=a.createRenderbuffer(),W(e.__webglDepthRenderbuffer,b,!0)),a.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")}if(j){c.bindTexture(34067,i.__webglTexture),R(34067,b.texture,l);for(let s=0;s<6;s++)V(e.__webglFramebuffer[s],b,36064,34069+s);E(b.texture,l)&&F(34067,b.texture,b.width,b.height),c.bindTexture(34067,null)}else c.bindTexture(3553,i.__webglTexture),R(3553,b.texture,l),V(e.__webglFramebuffer,b,36064,3553),E(b.texture,l)&&F(3553,b.texture,b.width,b.height),c.bindTexture(3553,null);b.depthBuffer&&function(b){let c=d.get(b),e=!0===b.isWebGLCubeRenderTarget;if(b.depthTexture){if(e)throw Error("target.depthTexture not supported in Cube render targets");!function(b,c){let e=c&&c.isWebGLCubeRenderTarget;if(e)throw Error("Depth Texture with cube render targets is not supported");if(a.bindFramebuffer(36160,b),!(c.depthTexture&&c.depthTexture.isDepthTexture))throw Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");d.get(c.depthTexture).__webglTexture&&c.depthTexture.image.width===c.width&&c.depthTexture.image.height===c.height||(c.depthTexture.image.width=c.width,c.depthTexture.image.height=c.height,c.depthTexture.needsUpdate=!0),N(c.depthTexture,0);let f=d.get(c.depthTexture).__webglTexture;if(1026===c.depthTexture.format)a.framebufferTexture2D(36160,36096,3553,f,0);else if(1027===c.depthTexture.format)a.framebufferTexture2D(36160,33306,3553,f,0);else throw Error("Unknown depthTexture format")}(c.__webglFramebuffer,b)}else if(e){c.__webglDepthbuffer=[];for(let f=0;f<6;f++)a.bindFramebuffer(36160,c.__webglFramebuffer[f]),c.__webglDepthbuffer[f]=a.createRenderbuffer(),W(c.__webglDepthbuffer[f],b,!1)}else a.bindFramebuffer(36160,c.__webglFramebuffer),c.__webglDepthbuffer=a.createRenderbuffer(),W(c.__webglDepthbuffer,b,!1);a.bindFramebuffer(36160,null)}(b)},this.updateRenderTargetMipmap=function(a){let b=a.texture,e=C(a)||h;if(E(b,e)){let f=a.isWebGLCubeRenderTarget?34067:3553,g=d.get(b).__webglTexture;c.bindTexture(f,g),F(f,b,a.width,a.height),c.bindTexture(f,null)}},this.updateMultisampleRenderTarget=function(b){if(b.isWebGLMultisampleRenderTarget){if(h){let c=d.get(b);a.bindFramebuffer(36008,c.__webglMultisampledFramebuffer),a.bindFramebuffer(36009,c.__webglFramebuffer);let e=b.width,f=b.height,g=16384;b.depthBuffer&&(g|=256),b.stencilBuffer&&(g|=1024),a.blitFramebuffer(0,0,e,f,0,0,e,f,g,9728),a.bindFramebuffer(36160,c.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")}},this.safeSetTexture2D=function(a,b){a&&a.isWebGLRenderTarget&&(!1===Z&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),Z=!0),a=a.texture),N(a,b)},this.safeSetTextureCube=function(a,b){a&&a.isWebGLCubeRenderTarget&&(!1===$&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),$=!0),a=a.texture),O(a,b)}}function dL(a,b,c){let d=c.isWebGL2;return{convert:function(a){let c;if(1009===a)return 5121;if(1017===a)return 32819;if(1018===a)return 32820;if(1019===a)return 33635;if(1010===a)return 5120;if(1011===a)return 5122;if(1012===a)return 5123;if(1013===a)return 5124;if(1014===a)return 5125;if(1015===a)return 5126;if(1016===a)return d?5131:null!==(c=b.get("OES_texture_half_float"))?c.HALF_FLOAT_OES:null;if(1021===a)return 6406;if(a===r)return 6407;if(1023===a)return 6408;if(1024===a)return 6409;if(1025===a)return 6410;if(1026===a)return 6402;if(1027===a)return 34041;if(1028===a)return 6403;if(1029===a)return 36244;if(1030===a)return 33319;if(1031===a)return 33320;if(1032===a)return 36248;if(1033===a)return 36249;if(33776===a||33777===a||33778===a||33779===a){if(null===(c=b.get("WEBGL_compressed_texture_s3tc")))return null;if(33776===a)return c.COMPRESSED_RGB_S3TC_DXT1_EXT;if(33777===a)return c.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(33778===a)return c.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(33779===a)return c.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(35840===a||35841===a||35842===a||35843===a){if(null===(c=b.get("WEBGL_compressed_texture_pvrtc")))return null;if(35840===a)return c.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(35841===a)return c.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(35842===a)return c.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(35843===a)return c.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(36196===a)return null!==(c=b.get("WEBGL_compressed_texture_etc1"))?c.COMPRESSED_RGB_ETC1_WEBGL:null;if((37492===a||37496===a)&&null!==(c=b.get("WEBGL_compressed_texture_etc"))){if(37492===a)return c.COMPRESSED_RGB8_ETC2;if(37496===a)return c.COMPRESSED_RGBA8_ETC2_EAC}return 37808===a||37809===a||37810===a||37811===a||37812===a||37813===a||37814===a||37815===a||37816===a||37817===a||37818===a||37819===a||37820===a||37821===a||37840===a||37841===a||37842===a||37843===a||37844===a||37845===a||37846===a||37847===a||37848===a||37849===a||37850===a||37851===a||37852===a||37853===a?null!==(c=b.get("WEBGL_compressed_texture_astc"))?a:null:36492===a?null!==(c=b.get("EXT_texture_compression_bptc"))?a:null:1020===a?d?34042:null!==(c=b.get("WEBGL_depth_texture"))?c.UNSIGNED_INT_24_8_WEBGL:null:void 0}}}function dM(a){bY.call(this),this.cameras=a||[]}function dN(){aN.call(this),this.type="Group"}function dO(){this._targetRay=null,this._grip=null,this._hand=null}function dP(a,b){let c=this,d=null,e=1,f=null,g="local-floor",h=null,i=[],j=new Map,k=new bY;k.layers.enable(1),k.viewport=new K;let l=new bY;l.layers.enable(2),l.viewport=new K;let m=[k,l],n=new dM;n.layers.enable(1),n.layers.enable(2);let o=null,p=null;function q(a){let b=j.get(a.inputSource);b&&b.dispatchEvent({type:a.type,data:a.inputSource})}function r(){j.forEach(function(a,b){a.disconnect(b)}),j.clear(),a.setFramebuffer(null),a.setRenderTarget(a.getRenderTarget()),y.stop(),c.isPresenting=!1,c.dispatchEvent({type:"sessionend"})}function s(a){f=a,y.setContext(d),y.start(),c.isPresenting=!0,c.dispatchEvent({type:"sessionstart"})}function t(a){let b=d.inputSources;for(let c=0;c<i.length;c++)j.set(b[c],i[c]);for(let e=0;e<a.removed.length;e++){let f=a.removed[e],g=j.get(f);g&&(g.dispatchEvent({type:"disconnected",data:f}),j.delete(f))}for(let h=0;h<a.added.length;h++){let k=a.added[h],l=j.get(k);l&&l.dispatchEvent({type:"connected",data:k})}}this.enabled=!1,this.isPresenting=!1,this.getController=function(a){let b=i[a];return void 0===b&&(b=new dO,i[a]=b),b.getTargetRaySpace()},this.getControllerGrip=function(a){let b=i[a];return void 0===b&&(b=new dO,i[a]=b),b.getGripSpace()},this.getHand=function(a){let b=i[a];return void 0===b&&(b=new dO,i[a]=b),b.getHandSpace()},this.setFramebufferScaleFactor=function(a){e=a,!0===c.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(a){g=a,!0===c.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return f},this.getSession=function(){return d},this.setSession=function(a){if(null!==(d=a)){d.addEventListener("select",q),d.addEventListener("selectstart",q),d.addEventListener("selectend",q),d.addEventListener("squeeze",q),d.addEventListener("squeezestart",q),d.addEventListener("squeezeend",q),d.addEventListener("end",r);let c=b.getContextAttributes();!0!==c.xrCompatible&&b.makeXRCompatible();let f={antialias:c.antialias,alpha:c.alpha,depth:c.depth,stencil:c.stencil,framebufferScaleFactor:e},h=new XRWebGLLayer(d,b,f);d.updateRenderState({baseLayer:h}),d.requestReferenceSpace(g).then(s),d.addEventListener("inputsourceschange",t)}};let u=new O,v=new O;function w(a,b){null===b?a.matrixWorld.copy(a.matrix):a.matrixWorld.multiplyMatrices(b.matrixWorld,a.matrix),a.matrixWorldInverse.getInverse(a.matrixWorld)}this.getCamera=function(a){n.near=l.near=k.near=a.near,n.far=l.far=k.far=a.far,(o!==n.near||p!==n.far)&&(d.updateRenderState({depthNear:n.near,depthFar:n.far}),o=n.near,p=n.far);let b=a.parent,c=n.cameras;w(n,b);for(let e=0;e<c.length;e++)w(c[e],b);a.matrixWorld.copy(n.matrixWorld);let f=a.children;for(let g=0,h=f.length;g<h;g++)f[g].updateMatrixWorld(!0);return 2===c.length?function(a,b,c){u.setFromMatrixPosition(b.matrixWorld),v.setFromMatrixPosition(c.matrixWorld);let d=u.distanceTo(v),e=b.projectionMatrix.elements,f=c.projectionMatrix.elements,g=e[14]/(e[10]-1),h=e[14]/(e[10]+1),i=(e[9]+1)/e[5],j=(e[9]-1)/e[5],k=(e[8]-1)/e[0],l=(f[8]+1)/f[0],m=d/(-k+l),n=-(m*k);b.matrixWorld.decompose(a.position,a.quaternion,a.scale),a.translateX(n),a.translateZ(m),a.matrixWorld.compose(a.position,a.quaternion,a.scale),a.matrixWorldInverse.getInverse(a.matrixWorld);let o=g+m,p=h+m;a.projectionMatrix.makePerspective(g*k-n,g*l+(d-n),i*h/p*o,j*h/p*o,o,p)}(n,k,l):n.projectionMatrix.copy(k.projectionMatrix),n};let x=null,y=new b4;y.setAnimationLoop(function(b,c){if(null!==(h=c.getViewerPose(f))){let e=h.views,g=d.renderState.baseLayer;a.setFramebuffer(g.framebuffer);let j=!1;e.length!==n.cameras.length&&(n.cameras.length=0,j=!0);for(let k=0;k<e.length;k++){let l=e[k],o=g.getViewport(l),p=m[k];p.matrix.fromArray(l.transform.matrix),p.projectionMatrix.fromArray(l.projectionMatrix),p.viewport.set(o.x,o.y,o.width,o.height),0===k&&n.matrix.copy(p.matrix),!0===j&&n.cameras.push(p)}}let q=d.inputSources;for(let r=0;r<i.length;r++){let s=i[r],t=q[r];s.update(t,c,f)}x&&x(b,c)}),this.setAnimationLoop=function(a){x=a},this.dispose=function(){}}function dQ(a){function b(b,c){b.opacity.value=c.opacity,c.color&&b.diffuse.value.copy(c.color),c.emissive&&b.emissive.value.copy(c.emissive).multiplyScalar(c.emissiveIntensity),c.map&&(b.map.value=c.map),c.alphaMap&&(b.alphaMap.value=c.alphaMap),c.specularMap&&(b.specularMap.value=c.specularMap);let d=a.get(c).envMap;if(d){b.envMap.value=d,b.flipEnvMap.value=d.isCubeTexture&&d._needsFlipEnvMap?-1:1,b.reflectivity.value=c.reflectivity,b.refractionRatio.value=c.refractionRatio;let e=a.get(d).__maxMipLevel;void 0!==e&&(b.maxMipLevel.value=e)}c.lightMap&&(b.lightMap.value=c.lightMap,b.lightMapIntensity.value=c.lightMapIntensity),c.aoMap&&(b.aoMap.value=c.aoMap,b.aoMapIntensity.value=c.aoMapIntensity);let f;c.map?f=c.map:c.specularMap?f=c.specularMap:c.displacementMap?f=c.displacementMap:c.normalMap?f=c.normalMap:c.bumpMap?f=c.bumpMap:c.roughnessMap?f=c.roughnessMap:c.metalnessMap?f=c.metalnessMap:c.alphaMap?f=c.alphaMap:c.emissiveMap?f=c.emissiveMap:c.clearcoatMap?f=c.clearcoatMap:c.clearcoatNormalMap?f=c.clearcoatNormalMap:c.clearcoatRoughnessMap&&(f=c.clearcoatRoughnessMap),void 0!==f&&(f.isWebGLRenderTarget&&(f=f.texture),!0===f.matrixAutoUpdate&&f.updateMatrix(),b.uvTransform.value.copy(f.matrix));let g;c.aoMap?g=c.aoMap:c.lightMap&&(g=c.lightMap),void 0!==g&&(g.isWebGLRenderTarget&&(g=g.texture),!0===g.matrixAutoUpdate&&g.updateMatrix(),b.uv2Transform.value.copy(g.matrix))}function c(b,c){b.roughness.value=c.roughness,b.metalness.value=c.metalness,c.roughnessMap&&(b.roughnessMap.value=c.roughnessMap),c.metalnessMap&&(b.metalnessMap.value=c.metalnessMap),c.emissiveMap&&(b.emissiveMap.value=c.emissiveMap),c.bumpMap&&(b.bumpMap.value=c.bumpMap,b.bumpScale.value=c.bumpScale,c.side===g&&(b.bumpScale.value*=-1)),c.normalMap&&(b.normalMap.value=c.normalMap,b.normalScale.value.copy(c.normalScale),c.side===g&&b.normalScale.value.negate()),c.displacementMap&&(b.displacementMap.value=c.displacementMap,b.displacementScale.value=c.displacementScale,b.displacementBias.value=c.displacementBias);let d=a.get(c).envMap;d&&(b.envMapIntensity.value=c.envMapIntensity)}return{refreshFogUniforms:function(a,b){a.fogColor.value.copy(b.color),b.isFog?(a.fogNear.value=b.near,a.fogFar.value=b.far):b.isFogExp2&&(a.fogDensity.value=b.density)},refreshMaterialUniforms:function(a,d,e,f){var h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G;let H,I;d.isMeshBasicMaterial?b(a,d):d.isMeshLambertMaterial?(b(a,d),h=a,(i=d).emissiveMap&&(h.emissiveMap.value=i.emissiveMap)):d.isMeshToonMaterial?(b(a,d),j=a,(k=d).gradientMap&&(j.gradientMap.value=k.gradientMap),k.emissiveMap&&(j.emissiveMap.value=k.emissiveMap),k.bumpMap&&(j.bumpMap.value=k.bumpMap,j.bumpScale.value=k.bumpScale,k.side===g&&(j.bumpScale.value*=-1)),k.normalMap&&(j.normalMap.value=k.normalMap,j.normalScale.value.copy(k.normalScale),k.side===g&&j.normalScale.value.negate()),k.displacementMap&&(j.displacementMap.value=k.displacementMap,j.displacementScale.value=k.displacementScale,j.displacementBias.value=k.displacementBias)):d.isMeshPhongMaterial?(b(a,d),l=a,m=d,l.specular.value.copy(m.specular),l.shininess.value=Math.max(m.shininess,1e-4),m.emissiveMap&&(l.emissiveMap.value=m.emissiveMap),m.bumpMap&&(l.bumpMap.value=m.bumpMap,l.bumpScale.value=m.bumpScale,m.side===g&&(l.bumpScale.value*=-1)),m.normalMap&&(l.normalMap.value=m.normalMap,l.normalScale.value.copy(m.normalScale),m.side===g&&l.normalScale.value.negate()),m.displacementMap&&(l.displacementMap.value=m.displacementMap,l.displacementScale.value=m.displacementScale,l.displacementBias.value=m.displacementBias)):d.isMeshStandardMaterial?(b(a,d),d.isMeshPhysicalMaterial?(n=a,o=d,c(n,o),n.reflectivity.value=o.reflectivity,n.clearcoat.value=o.clearcoat,n.clearcoatRoughness.value=o.clearcoatRoughness,o.sheen&&n.sheen.value.copy(o.sheen),o.clearcoatMap&&(n.clearcoatMap.value=o.clearcoatMap),o.clearcoatRoughnessMap&&(n.clearcoatRoughnessMap.value=o.clearcoatRoughnessMap),o.clearcoatNormalMap&&(n.clearcoatNormalScale.value.copy(o.clearcoatNormalScale),n.clearcoatNormalMap.value=o.clearcoatNormalMap,o.side===g&&n.clearcoatNormalScale.value.negate()),n.transmission.value=o.transmission,o.transmissionMap&&(n.transmissionMap.value=o.transmissionMap)):c(a,d)):d.isMeshMatcapMaterial?(b(a,d),p=a,(q=d).matcap&&(p.matcap.value=q.matcap),q.bumpMap&&(p.bumpMap.value=q.bumpMap,p.bumpScale.value=q.bumpScale,q.side===g&&(p.bumpScale.value*=-1)),q.normalMap&&(p.normalMap.value=q.normalMap,p.normalScale.value.copy(q.normalScale),q.side===g&&p.normalScale.value.negate()),q.displacementMap&&(p.displacementMap.value=q.displacementMap,p.displacementScale.value=q.displacementScale,p.displacementBias.value=q.displacementBias)):d.isMeshDepthMaterial?(b(a,d),r=a,(s=d).displacementMap&&(r.displacementMap.value=s.displacementMap,r.displacementScale.value=s.displacementScale,r.displacementBias.value=s.displacementBias)):d.isMeshDistanceMaterial?(b(a,d),t=a,(u=d).displacementMap&&(t.displacementMap.value=u.displacementMap,t.displacementScale.value=u.displacementScale,t.displacementBias.value=u.displacementBias),t.referencePosition.value.copy(u.referencePosition),t.nearDistance.value=u.nearDistance,t.farDistance.value=u.farDistance):d.isMeshNormalMaterial?(b(a,d),v=a,(w=d).bumpMap&&(v.bumpMap.value=w.bumpMap,v.bumpScale.value=w.bumpScale,w.side===g&&(v.bumpScale.value*=-1)),w.normalMap&&(v.normalMap.value=w.normalMap,v.normalScale.value.copy(w.normalScale),w.side===g&&v.normalScale.value.negate()),w.displacementMap&&(v.displacementMap.value=w.displacementMap,v.displacementScale.value=w.displacementScale,v.displacementBias.value=w.displacementBias)):d.isLineBasicMaterial?(x=a,y=d,x.diffuse.value.copy(y.color),x.opacity.value=y.opacity,d.isLineDashedMaterial&&(z=a,A=d,z.dashSize.value=A.dashSize,z.totalSize.value=A.dashSize+A.gapSize,z.scale.value=A.scale)):d.isPointsMaterial?(B=a,C=d,D=e,E=f,B.diffuse.value.copy(C.color),B.opacity.value=C.opacity,B.size.value=C.size*D,B.scale.value=.5*E,C.map&&(B.map.value=C.map),C.alphaMap&&(B.alphaMap.value=C.alphaMap),C.map?H=C.map:C.alphaMap&&(H=C.alphaMap),void 0!==H&&(!0===H.matrixAutoUpdate&&H.updateMatrix(),B.uvTransform.value.copy(H.matrix))):d.isSpriteMaterial?(F=a,G=d,F.diffuse.value.copy(G.color),F.opacity.value=G.opacity,F.rotation.value=G.rotation,G.map&&(F.map.value=G.map),G.alphaMap&&(F.alphaMap.value=G.alphaMap),G.map?I=G.map:G.alphaMap&&(I=G.alphaMap),void 0!==I&&(!0===I.matrixAutoUpdate&&I.updateMatrix(),F.uvTransform.value.copy(I.matrix))):d.isShadowMaterial?(a.color.value.copy(d.color),a.opacity.value=d.opacity):d.isShaderMaterial&&(d.uniformsNeedUpdate=!1)}}}function dR(a){a=a||{};let b=void 0!==a.canvas?a.canvas:document.createElementNS("http://www.w3.org/1999/xhtml","canvas"),c=void 0!==a.context?a.context:null,d=void 0!==a.alpha&&a.alpha,e=void 0===a.depth||a.depth,f=void 0===a.stencil||a.stencil,g=void 0!==a.antialias&&a.antialias,h=void 0===a.premultipliedAlpha||a.premultipliedAlpha,i=void 0!==a.preserveDrawingBuffer&&a.preserveDrawingBuffer,j=void 0!==a.powerPreference?a.powerPreference:"default",k=void 0!==a.failIfMajorPerformanceCaveat&&a.failIfMajorPerformanceCaveat,l=null,m=null;this.domElement=b,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=3e3,this.physicallyCorrectLights=!1,this.toneMapping=0,this.toneMappingExposure=1,this.maxMorphTargets=8,this.maxMorphNormals=4;let n=this,o=!1,p=null,q=0,r=0,s=null,t=null,u=-1,v=null,w=null,x=new K,y=new K,z=null,A=b.width,B=b.height,C=1,F=null,G=null,H=new K(0,0,A,B),I=new K(0,0,A,B),J=!1,L=new b3,M=!1,N=!1,P=new ao,Q=new O,R={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function S(){return null===s?C:1}let T=c;function U(a,c){for(let d=0;d<a.length;d++){let e=a[d],f=b.getContext(e,c);if(null!==f)return f}return null}try{let V={alpha:d,depth:e,stencil:f,antialias:g,premultipliedAlpha:h,preserveDrawingBuffer:i,powerPreference:j,failIfMajorPerformanceCaveat:k};if(b.addEventListener("webglcontextlost",av,!1),b.addEventListener("webglcontextrestored",aw,!1),null===T){let W=["webgl2","webgl","experimental-webgl"];if(!0===n.isWebGL1Renderer&&W.shift(),T=U(W,V),null===T){if(U(W))throw Error("Error creating WebGL context with your selected attributes.");throw Error("Error creating WebGL context.")}}void 0===T.getShaderPrecisionFormat&&(T.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(X){throw console.error("THREE.WebGLRenderer: "+X.message),X}let Y,Z,$,_,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ap,aq,ar;function as(){Y=new cg(T),!1===(Z=new cd(T,Y,a)).isWebGL2&&(Y.get("WEBGL_depth_texture"),Y.get("OES_texture_float"),Y.get("OES_texture_half_float"),Y.get("OES_texture_half_float_linear"),Y.get("OES_standard_derivatives"),Y.get("OES_element_index_uint"),Y.get("OES_vertex_array_object"),Y.get("ANGLE_instanced_arrays")),Y.get("OES_texture_float_linear"),aq=new dL(T,Y,Z),($=new dJ(T,Y,Z)).scissor(y.copy(I).multiplyScalar(C).floor()),$.viewport(x.copy(H).multiplyScalar(C).floor()),_=new cj(T),aa=new dv,ab=new dK(T,Y,$,aa,Z,aq,_),ac=new cf(n),ad=new b5(T,Z),ar=new cb(T,Y,ad,Z),ae=new ch(T,ad,_,ar),af=new cn(T,ae,ad,_),am=new cm(T),ak=new ce(aa),ag=new du(n,ac,Y,Z,ar,ak),ah=new dQ(aa),ai=new dz(aa),aj=new dF,al=new ca(n,ac,$,af,h),an=new cc(T,Y,_,Z),ap=new ci(T,Y,_,Z),_.programs=ag.programs,n.capabilities=Z,n.extensions=Y,n.properties=aa,n.renderLists=ai,n.state=$,n.info=_}as();let at=new dP(n,T);this.xr=at;let au=new dI(n,af,Z.maxTextureSize);function av(a){a.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),o=!0}function aw(){console.log("THREE.WebGLRenderer: Context Restored."),o=!1,as()}function ax(a){let b=a.target;b.removeEventListener("dispose",ax),ay(b)}function ay(a){az(a),aa.remove(a)}function az(a){let b=aa.get(a).program;void 0!==b&&ag.releaseProgram(b)}this.shadowMap=au,this.getContext=function(){return T},this.getContextAttributes=function(){return T.getContextAttributes()},this.forceContextLoss=function(){let a=Y.get("WEBGL_lose_context");a&&a.loseContext()},this.forceContextRestore=function(){let a=Y.get("WEBGL_lose_context");a&&a.restoreContext()},this.getPixelRatio=function(){return C},this.setPixelRatio=function(a){void 0!==a&&(C=a,this.setSize(A,B,!1))},this.getSize=function(a){return void 0===a&&(console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),a=new E),a.set(A,B)},this.setSize=function(a,c,d){if(at.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}A=a,B=c,b.width=Math.floor(a*C),b.height=Math.floor(c*C),!1!==d&&(b.style.width=a+"px",b.style.height=c+"px"),this.setViewport(0,0,a,c)},this.getDrawingBufferSize=function(a){return void 0===a&&(console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),a=new E),a.set(A*C,B*C).floor()},this.setDrawingBufferSize=function(a,c,d){A=a,B=c,C=d,b.width=Math.floor(a*d),b.height=Math.floor(c*d),this.setViewport(0,0,a,c)},this.getCurrentViewport=function(a){return void 0===a&&(console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),a=new K),a.copy(x)},this.getViewport=function(a){return a.copy(H)},this.setViewport=function(a,b,c,d){a.isVector4?H.set(a.x,a.y,a.z,a.w):H.set(a,b,c,d),$.viewport(x.copy(H).multiplyScalar(C).floor())},this.getScissor=function(a){return a.copy(I)},this.setScissor=function(a,b,c,d){a.isVector4?I.set(a.x,a.y,a.z,a.w):I.set(a,b,c,d),$.scissor(y.copy(I).multiplyScalar(C).floor())},this.getScissorTest=function(){return J},this.setScissorTest=function(a){$.setScissorTest(J=a)},this.setOpaqueSort=function(a){F=a},this.setTransparentSort=function(a){G=a},this.getClearColor=function(){return al.getClearColor()},this.setClearColor=function(){al.setClearColor.apply(al,arguments)},this.getClearAlpha=function(){return al.getClearAlpha()},this.setClearAlpha=function(){al.setClearAlpha.apply(al,arguments)},this.clear=function(a,b,c){let d=0;(void 0===a||a)&&(d|=16384),(void 0===b||b)&&(d|=256),(void 0===c||c)&&(d|=1024),T.clear(d)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){b.removeEventListener("webglcontextlost",av,!1),b.removeEventListener("webglcontextrestored",aw,!1),ai.dispose(),aj.dispose(),aa.dispose(),ac.dispose(),af.dispose(),ar.dispose(),at.dispose(),aB.stop()},this.renderBufferImmediate=function(a,b){ar.initAttributes();let c=aa.get(a);a.hasPositions&&!c.position&&(c.position=T.createBuffer()),a.hasNormals&&!c.normal&&(c.normal=T.createBuffer()),a.hasUvs&&!c.uv&&(c.uv=T.createBuffer()),a.hasColors&&!c.color&&(c.color=T.createBuffer());let d=b.getAttributes();a.hasPositions&&(T.bindBuffer(34962,c.position),T.bufferData(34962,a.positionArray,35048),ar.enableAttribute(d.position),T.vertexAttribPointer(d.position,3,5126,!1,0,0)),a.hasNormals&&(T.bindBuffer(34962,c.normal),T.bufferData(34962,a.normalArray,35048),ar.enableAttribute(d.normal),T.vertexAttribPointer(d.normal,3,5126,!1,0,0)),a.hasUvs&&(T.bindBuffer(34962,c.uv),T.bufferData(34962,a.uvArray,35048),ar.enableAttribute(d.uv),T.vertexAttribPointer(d.uv,2,5126,!1,0,0)),a.hasColors&&(T.bindBuffer(34962,c.color),T.bufferData(34962,a.colorArray,35048),ar.enableAttribute(d.color),T.vertexAttribPointer(d.color,3,5126,!1,0,0)),ar.disableUnusedAttributes(),T.drawArrays(4,0,a.count),a.count=0},this.renderBufferDirect=function(a,b,c,d,e,f){null===b&&(b=R);let g=e.isMesh&&0>e.matrixWorld.determinant(),h=aG(a,b,d,e);$.setMaterial(d,g);let i=c.index,j=c.attributes.position;if(null===i){if(void 0===j||0===j.count)return}else if(0===i.count)return;let k=1;!0===d.wireframe&&(i=ae.getWireframeAttribute(c),k=2),(d.morphTargets||d.morphNormals)&&am.update(e,c,d,h),ar.setup(e,d,h,c,i);let l,m=an;null!==i&&(l=ad.get(i),(m=ap).setIndex(l));let n=null!==i?i.count:j.count,o=c.drawRange.start*k,p=c.drawRange.count*k,q=null!==f?f.start*k:0,r=null!==f?f.count*k:1/0,s=Math.max(o,q),t=Math.max(0,Math.min(n,o+p,q+r)-1-s+1);if(0!==t){if(e.isMesh)!0===d.wireframe?($.setLineWidth(d.wireframeLinewidth*S()),m.setMode(1)):m.setMode(4);else if(e.isLine){let u=d.linewidth;void 0===u&&(u=1),$.setLineWidth(u*S()),e.isLineSegments?m.setMode(1):e.isLineLoop?m.setMode(2):m.setMode(3)}else e.isPoints?m.setMode(0):e.isSprite&&m.setMode(4);if(e.isInstancedMesh)m.renderInstances(s,t,e.count);else if(c.isInstancedBufferGeometry){let v=Math.min(c.instanceCount,c._maxInstanceCount);m.renderInstances(s,t,v)}else m.render(s,t)}},this.compile=function(a,b){(m=aj.get(a,b)).init(),a.traverse(function(a){a.isLight&&(m.pushLight(a),a.castShadow&&m.pushShadow(a))}),m.setupLights(b);let c=new WeakMap;a.traverse(function(b){let d=b.material;if(d){if(Array.isArray(d))for(let e=0;e<d.length;e++){let f=d[e];!1===c.has(f)&&(aF(f,a,b),c.set(f))}else!1===c.has(d)&&(aF(d,a,b),c.set(d))}})};let aA=null,aB=new b4;function aC(a,b,c,d){if(!1===a.visible)return;let e=a.layers.test(b.layers);if(e){if(a.isGroup)c=a.renderOrder;else if(a.isLOD)!0===a.autoUpdate&&a.update(b);else if(a.isLight)m.pushLight(a),a.castShadow&&m.pushShadow(a);else if(a.isSprite){if(!a.frustumCulled||L.intersectsSprite(a)){d&&Q.setFromMatrixPosition(a.matrixWorld).applyMatrix4(P);let f=af.update(a),g=a.material;g.visible&&l.push(a,f,g,c,Q.z,null)}}else if(a.isImmediateRenderObject)d&&Q.setFromMatrixPosition(a.matrixWorld).applyMatrix4(P),l.push(a,null,a.material,c,Q.z,null);else if((a.isMesh||a.isLine||a.isPoints)&&(a.isSkinnedMesh&&a.skeleton.frame!==_.render.frame&&(a.skeleton.update(),a.skeleton.frame=_.render.frame),!a.frustumCulled||L.intersectsObject(a))){d&&Q.setFromMatrixPosition(a.matrixWorld).applyMatrix4(P);let h=af.update(a),i=a.material;if(Array.isArray(i)){let j=h.groups;for(let k=0,n=j.length;k<n;k++){let o=j[k],p=i[o.materialIndex];p&&p.visible&&l.push(a,h,p,c,Q.z,o)}}else i.visible&&l.push(a,h,i,c,Q.z,null)}}let q=a.children;for(let r=0,s=q.length;r<s;r++)aC(q[r],b,c,d)}function aD(a,b,c){let d=!0===b.isScene?b.overrideMaterial:null;for(let e=0,f=a.length;e<f;e++){let g=a[e],h=g.object,i=g.geometry,j=null===d?g.material:d,k=g.group;if(c.isArrayCamera){w=c;let l=c.cameras;for(let n=0,o=l.length;n<o;n++){let p=l[n];h.layers.test(p.layers)&&($.viewport(x.copy(p.viewport)),m.setupLights(p),aE(h,b,p,i,j,k))}}else w=null,aE(h,b,c,i,j,k)}}function aE(a,b,c,d,e,f){if(a.onBeforeRender(n,b,c,d,e,f),m=aj.get(b,w||c),a.modelViewMatrix.multiplyMatrices(c.matrixWorldInverse,a.matrixWorld),a.normalMatrix.getNormalMatrix(a.modelViewMatrix),a.isImmediateRenderObject){let g=aG(c,b,e,a);$.setMaterial(e),ar.reset(),function(a,b){a.render(function(a){n.renderBufferImmediate(a,b)})}(a,g)}else n.renderBufferDirect(c,b,d,e,a,f);a.onAfterRender(n,b,c,d,e,f),m=aj.get(b,w||c)}function aF(a,b,c){!0!==b.isScene&&(b=R);let d=aa.get(a),e=m.state.lights,f=m.state.shadowsArray,g=e.state.version,h=ag.getParameters(a,e.state,f,b,c),i=ag.getProgramCacheKey(h),j=d.program,k=!0;if(void 0===j)a.addEventListener("dispose",ax);else if(j.cacheKey!==i)az(a);else if(d.lightsStateVersion!==g)k=!1;else if(void 0!==h.shaderID){let l=a.isMeshStandardMaterial?b.environment:null;d.envMap=ac.get(a.envMap||l);return}else k=!1;k&&(h.uniforms=ag.getUniforms(a),a.onBeforeCompile(h,n),j=ag.acquireProgram(h,i),d.program=j,d.uniforms=h.uniforms,d.outputEncoding=h.outputEncoding);let o=d.uniforms;(a.isShaderMaterial||a.isRawShaderMaterial)&& !0!==a.clipping||(d.numClippingPlanes=ak.numPlanes,d.numIntersection=ak.numIntersection,o.clippingPlanes=ak.uniform),d.environment=a.isMeshStandardMaterial?b.environment:null,d.fog=b.fog,d.envMap=ac.get(a.envMap||d.environment),d.needsLights=aI(a),d.lightsStateVersion=g,d.needsLights&&(o.ambientLightColor.value=e.state.ambient,o.lightProbe.value=e.state.probe,o.directionalLights.value=e.state.directional,o.directionalLightShadows.value=e.state.directionalShadow,o.spotLights.value=e.state.spot,o.spotLightShadows.value=e.state.spotShadow,o.rectAreaLights.value=e.state.rectArea,o.ltc_1.value=e.state.rectAreaLTC1,o.ltc_2.value=e.state.rectAreaLTC2,o.pointLights.value=e.state.point,o.pointLightShadows.value=e.state.pointShadow,o.hemisphereLights.value=e.state.hemi,o.directionalShadowMap.value=e.state.directionalShadowMap,o.directionalShadowMatrix.value=e.state.directionalShadowMatrix,o.spotShadowMap.value=e.state.spotShadowMap,o.spotShadowMatrix.value=e.state.spotShadowMatrix,o.pointShadowMap.value=e.state.pointShadowMap,o.pointShadowMatrix.value=e.state.pointShadowMatrix);let p=d.program.getUniforms(),q=da.seqWithValue(p.seq,o);d.uniformsList=q}function aG(a,b,c,d){!0!==b.isScene&&(b=R),ab.resetTextureUnits();let e=b.fog,f=c.isMeshStandardMaterial?b.environment:null,g=null===s?n.outputEncoding:s.texture.encoding,h=ac.get(c.envMap||f),i=aa.get(c),j=m.state.lights;if(!0===M&&(!0===N||a!==v)){let k=a===v&&c.id===u;ak.setState(c,a,k)}c.version===i.__version?c.fog&&i.fog!==e?aF(c,b,d):i.environment!==f?aF(c,b,d):i.needsLights&&i.lightsStateVersion!==j.state.version?aF(c,b,d):void 0!==i.numClippingPlanes&&(i.numClippingPlanes!==ak.numPlanes||i.numIntersection!==ak.numIntersection)?aF(c,b,d):i.outputEncoding!==g?aF(c,b,d):i.envMap!==h&&aF(c,b,d):(aF(c,b,d),i.__version=c.version);let l=!1,o=!1,p=!1,q=i.program,r=q.getUniforms(),t=i.uniforms;if($.useProgram(q.program)&&(l=!0,o=!0,p=!0),c.id!==u&&(u=c.id,o=!0),l||v!==a){if(r.setValue(T,"projectionMatrix",a.projectionMatrix),Z.logarithmicDepthBuffer&&r.setValue(T,"logDepthBufFC",2/(Math.log(a.far+1)/Math.LN2)),v!==a&&(v=a,o=!0,p=!0),c.isShaderMaterial||c.isMeshPhongMaterial||c.isMeshToonMaterial||c.isMeshStandardMaterial||c.envMap){let w=r.map.cameraPosition;void 0!==w&&w.setValue(T,Q.setFromMatrixPosition(a.matrixWorld))}(c.isMeshPhongMaterial||c.isMeshToonMaterial||c.isMeshLambertMaterial||c.isMeshBasicMaterial||c.isMeshStandardMaterial||c.isShaderMaterial)&&r.setValue(T,"isOrthographic",!0===a.isOrthographicCamera),(c.isMeshPhongMaterial||c.isMeshToonMaterial||c.isMeshLambertMaterial||c.isMeshBasicMaterial||c.isMeshStandardMaterial||c.isShaderMaterial||c.isShadowMaterial||c.skinning)&&r.setValue(T,"viewMatrix",a.matrixWorldInverse)}if(c.skinning){r.setOptional(T,d,"bindMatrix"),r.setOptional(T,d,"bindMatrixInverse");let x=d.skeleton;if(x){let y=x.bones;if(Z.floatVertexTextures){if(void 0===x.boneTexture){let z=Math.sqrt(4*y.length);z=Math.max(z=D.ceilPowerOfTwo(z),4);let A=new Float32Array(z*z*4);A.set(x.boneMatrices);let E=new b0(A,z,z,1023,1015);x.boneMatrices=A,x.boneTexture=E,x.boneTextureSize=z}r.setValue(T,"boneTexture",x.boneTexture,ab),r.setValue(T,"boneTextureSize",x.boneTextureSize)}else r.setOptional(T,x,"boneMatrices")}}return(o||i.receiveShadow!==d.receiveShadow)&&(i.receiveShadow=d.receiveShadow,r.setValue(T,"receiveShadow",d.receiveShadow)),o&&(r.setValue(T,"toneMappingExposure",n.toneMappingExposure),i.needsLights&&aH(t,p),e&&c.fog&&ah.refreshFogUniforms(t,e),ah.refreshMaterialUniforms(t,c,C,B),da.upload(T,i.uniformsList,t,ab)),c.isShaderMaterial&& !0===c.uniformsNeedUpdate&&(da.upload(T,i.uniformsList,t,ab),c.uniformsNeedUpdate=!1),c.isSpriteMaterial&&r.setValue(T,"center",d.center),r.setValue(T,"modelViewMatrix",d.modelViewMatrix),r.setValue(T,"normalMatrix",d.normalMatrix),r.setValue(T,"modelMatrix",d.matrixWorld),q}function aH(a,b){a.ambientLightColor.needsUpdate=b,a.lightProbe.needsUpdate=b,a.directionalLights.needsUpdate=b,a.directionalLightShadows.needsUpdate=b,a.pointLights.needsUpdate=b,a.pointLightShadows.needsUpdate=b,a.spotLights.needsUpdate=b,a.spotLightShadows.needsUpdate=b,a.rectAreaLights.needsUpdate=b,a.hemisphereLights.needsUpdate=b}function aI(a){return a.isMeshLambertMaterial||a.isMeshToonMaterial||a.isMeshPhongMaterial||a.isMeshStandardMaterial||a.isShadowMaterial||a.isShaderMaterial&& !0===a.lights}aB.setAnimationLoop(function(a){!at.isPresenting&&aA&&aA(a)}),"undefined"!=typeof window&&aB.setContext(window),this.setAnimationLoop=function(a){aA=a,at.setAnimationLoop(a),null===a?aB.stop():aB.start()},this.render=function(a,b){let c,d;if(void 0!==arguments[2]&&(console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),c=arguments[2]),void 0!==arguments[3]&&(console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."),d=arguments[3]),void 0!==b&& !0!==b.isCamera){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(!0===o)return;ar.resetDefaultState(),u=-1,v=null,!0===a.autoUpdate&&a.updateMatrixWorld(),null===b.parent&&b.updateMatrixWorld(),!0===at.enabled&& !0===at.isPresenting&&(b=at.getCamera(b)),!0===a.isScene&&a.onBeforeRender(n,a,b,c||s),(m=aj.get(a,b)).init(),P.multiplyMatrices(b.projectionMatrix,b.matrixWorldInverse),L.setFromProjectionMatrix(P),N=this.localClippingEnabled,M=ak.init(this.clippingPlanes,N,b),(l=ai.get(a,b)).init(),aC(a,b,0,n.sortObjects),l.finish(),!0===n.sortObjects&&l.sort(F,G),!0===M&&ak.beginShadows();let e=m.state.shadowsArray;au.render(e,a,b),m.setupLights(b),!0===M&&ak.endShadows(),!0===this.info.autoReset&&this.info.reset(),void 0!==c&&this.setRenderTarget(c),al.render(l,a,b,d);let f=l.opaque,g=l.transparent;f.length>0&&aD(f,a,b),g.length>0&&aD(g,a,b),!0===a.isScene&&a.onAfterRender(n,a,b),null!==s&&(ab.updateRenderTargetMipmap(s),ab.updateMultisampleRenderTarget(s)),$.buffers.depth.setTest(!0),$.buffers.depth.setMask(!0),$.buffers.color.setMask(!0),$.setPolygonOffset(!1),l=null,m=null},this.setFramebuffer=function(a){p!==a&&null===s&&T.bindFramebuffer(36160,a),p=a},this.getActiveCubeFace=function(){return q},this.getActiveMipmapLevel=function(){return r},this.getRenderList=function(){return l},this.setRenderList=function(a){l=a},this.getRenderState=function(){return m},this.setRenderState=function(a){m=a},this.getRenderTarget=function(){return s},this.setRenderTarget=function(a,b=0,c=0){s=a,q=b,r=c,a&& void 0===aa.get(a).__webglFramebuffer&&ab.setupRenderTarget(a);let d=p,e=!1;if(a){let f=aa.get(a).__webglFramebuffer;a.isWebGLCubeRenderTarget?(d=f[b],e=!0):d=a.isWebGLMultisampleRenderTarget?aa.get(a).__webglMultisampledFramebuffer:f,x.copy(a.viewport),y.copy(a.scissor),z=a.scissorTest}else x.copy(H).multiplyScalar(C).floor(),y.copy(I).multiplyScalar(C).floor(),z=J;if(t!==d&&(T.bindFramebuffer(36160,d),t=d),$.viewport(x),$.scissor(y),$.setScissorTest(z),e){let g=aa.get(a.texture);T.framebufferTexture2D(36160,36064,34069+b,g.__webglTexture,c)}},this.readRenderTargetPixels=function(a,b,c,d,e,f,g){if(!(a&&a.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let h=aa.get(a).__webglFramebuffer;if(a.isWebGLCubeRenderTarget&& void 0!==g&&(h=h[g]),h){let i=!1;h!==t&&(T.bindFramebuffer(36160,h),i=!0);try{let j=a.texture,k=j.format,l=j.type;if(1023!==k&&aq.convert(k)!==T.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(1009!==l&&aq.convert(l)!==T.getParameter(35738)&&!(1015===l&&(Z.isWebGL2||Y.get("OES_texture_float")||Y.get("WEBGL_color_buffer_float")))&&!(1016===l&&(Z.isWebGL2?Y.get("EXT_color_buffer_float"):Y.get("EXT_color_buffer_half_float")))){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}36053===T.checkFramebufferStatus(36160)?b>=0&&b<=a.width-d&&c>=0&&c<=a.height-e&&T.readPixels(b,c,d,e,aq.convert(k),aq.convert(l),f):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{i&&T.bindFramebuffer(36160,t)}}},this.copyFramebufferToTexture=function(a,b,c){void 0===c&&(c=0);let d=Math.pow(2,-c),e=Math.floor(b.image.width*d),f=Math.floor(b.image.height*d),g=aq.convert(b.format);ab.setTexture2D(b,0),T.copyTexImage2D(3553,c,g,a.x,a.y,e,f,0),$.unbindTexture()},this.copyTextureToTexture=function(a,b,c,d){void 0===d&&(d=0);let e=b.image.width,f=b.image.height,g=aq.convert(c.format),h=aq.convert(c.type);ab.setTexture2D(c,0),T.pixelStorei(37440,c.flipY),T.pixelStorei(37441,c.premultiplyAlpha),T.pixelStorei(3317,c.unpackAlignment),b.isDataTexture?T.texSubImage2D(3553,d,a.x,a.y,e,f,g,h,b.image.data):b.isCompressedTexture?T.compressedTexSubImage2D(3553,d,a.x,a.y,b.mipmaps[0].width,b.mipmaps[0].height,g,b.mipmaps[0].data):T.texSubImage2D(3553,d,a.x,a.y,g,h,b.image),0===d&&c.generateMipmaps&&T.generateMipmap(3553),$.unbindTexture()},this.initTexture=function(a){ab.setTexture2D(a,0),$.unbindTexture()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}function dS(a){dR.call(this,a)}dG.prototype=Object.create(ba.prototype),dG.prototype.constructor=dG,dG.prototype.isMeshDepthMaterial=!0,dG.prototype.copy=function(a){return ba.prototype.copy.call(this,a),this.depthPacking=a.depthPacking,this.skinning=a.skinning,this.morphTargets=a.morphTargets,this.map=a.map,this.alphaMap=a.alphaMap,this.displacementMap=a.displacementMap,this.displacementScale=a.displacementScale,this.displacementBias=a.displacementBias,this.wireframe=a.wireframe,this.wireframeLinewidth=a.wireframeLinewidth,this},dH.prototype=Object.create(ba.prototype),dH.prototype.constructor=dH,dH.prototype.isMeshDistanceMaterial=!0,dH.prototype.copy=function(a){return ba.prototype.copy.call(this,a),this.referencePosition.copy(a.referencePosition),this.nearDistance=a.nearDistance,this.farDistance=a.farDistance,this.skinning=a.skinning,this.morphTargets=a.morphTargets,this.map=a.map,this.alphaMap=a.alphaMap,this.displacementMap=a.displacementMap,this.displacementScale=a.displacementScale,this.displacementBias=a.displacementBias,this},dM.prototype=Object.assign(Object.create(bY.prototype),{constructor:dM,isArrayCamera:!0}),dN.prototype=Object.assign(Object.create(aN.prototype),{constructor:dN,isGroup:!0}),Object.assign(dO.prototype,{constructor:dO,getHandSpace:function(){if(null===this._hand&&(this._hand=new dN,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints=[],this._hand.inputState={pinching:!1},window.XRHand))for(let a=0;a<=window.XRHand.LITTLE_PHALANX_TIP;a++){let b=new dN;b.matrixAutoUpdate=!1,b.visible=!1,this._hand.joints.push(b),this._hand.add(b)}return this._hand},getTargetRaySpace:function(){return null===this._targetRay&&(this._targetRay=new dN,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1),this._targetRay},getGripSpace:function(){return null===this._grip&&(this._grip=new dN,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1),this._grip},dispatchEvent:function(a){return null!==this._targetRay&&this._targetRay.dispatchEvent(a),null!==this._grip&&this._grip.dispatchEvent(a),null!==this._hand&&this._hand.dispatchEvent(a),this},disconnect:function(a){return this.dispatchEvent({type:"disconnected",data:a}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this},update:function(a,b,c){let d=null,e=null,f=null,g=this._targetRay,h=this._grip,i=this._hand;if(a){if(i&&a.hand){f=!0;for(let j=0;j<=window.XRHand.LITTLE_PHALANX_TIP;j++)if(a.hand[j]){let k=b.getJointPose(a.hand[j],c),l=i.joints[j];null!==k&&(l.matrix.fromArray(k.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),l.jointRadius=k.radius),l.visible=null!==k;let m=i.joints[window.XRHand.INDEX_PHALANX_TIP],n=i.joints[window.XRHand.THUMB_PHALANX_TIP],o=m.position.distanceTo(n.position),p=.02,q=.005;i.inputState.pinching&&o>p+q?(i.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:a.handedness,target:this})):!i.inputState.pinching&&o<=p-q&&(i.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:a.handedness,target:this}))}}else null!==g&&null!==(d=b.getPose(a.targetRaySpace,c))&&(g.matrix.fromArray(d.transform.matrix),g.matrix.decompose(g.position,g.rotation,g.scale)),null!==h&&a.gripSpace&&null!==(e=b.getPose(a.gripSpace,c))&&(h.matrix.fromArray(e.transform.matrix),h.matrix.decompose(h.position,h.rotation,h.scale))}return null!==g&&(g.visible=null!==d),null!==h&&(h.visible=null!==e),null!==i&&(i.visible=null!==f),this}}),Object.assign(dP.prototype,z.prototype),dS.prototype=Object.assign(Object.create(dR.prototype),{constructor:dS,isWebGL1Renderer:!0});class dT{constructor(a,b){Object.defineProperty(this,"isFogExp2",{value:!0}),this.name="",this.color=new a7(a),this.density=void 0!==b?b:25e-5}clone(){return new dT(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}class dU{constructor(a,b,c){Object.defineProperty(this,"isFog",{value:!0}),this.name="",this.color=new a7(a),this.near=void 0!==b?b:1,this.far=void 0!==c?c:1e3}clone(){return new dU(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}class dV extends aN{constructor(){super(),Object.defineProperty(this,"isScene",{value:!0}),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(a,b){return super.copy(a,b),null!==a.background&&(this.background=a.background.clone()),null!==a.environment&&(this.environment=a.environment.clone()),null!==a.fog&&(this.fog=a.fog.clone()),null!==a.overrideMaterial&&(this.overrideMaterial=a.overrideMaterial.clone()),this.autoUpdate=a.autoUpdate,this.matrixAutoUpdate=a.matrixAutoUpdate,this}toJSON(a){let b=super.toJSON(a);return null!==this.background&&(b.object.background=this.background.toJSON(a)),null!==this.environment&&(b.object.environment=this.environment.toJSON(a)),null!==this.fog&&(b.object.fog=this.fog.toJSON()),b}}function dW(a,b){this.array=a,this.stride=b,this.count=void 0!==a?a.length/b:0,this.usage=35044,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=D.generateUUID()}Object.defineProperty(dW.prototype,"needsUpdate",{set:function(a){!0===a&&this.version++}}),Object.assign(dW.prototype,{isInterleavedBuffer:!0,onUploadCallback:function(){},setUsage:function(a){return this.usage=a,this},copy:function(a){return this.array=new a.array.constructor(a.array),this.count=a.count,this.stride=a.stride,this.usage=a.usage,this},copyAt:function(a,b,c){a*=this.stride,c*=b.stride;for(let d=0,e=this.stride;d<e;d++)this.array[a+d]=b.array[c+d];return this},set:function(a,b){return void 0===b&&(b=0),this.array.set(a,b),this},clone:function(a){void 0===a.arrayBuffers&&(a.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=D.generateUUID()),void 0===a.arrayBuffers[this.array.buffer._uuid]&&(a.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);let b=new this.array.constructor(a.arrayBuffers[this.array.buffer._uuid]),c=new dW(b,this.stride);return c.setUsage(this.usage),c},onUpload:function(a){return this.onUploadCallback=a,this},toJSON:function(a){return void 0===a.arrayBuffers&&(a.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=D.generateUUID()),void 0===a.arrayBuffers[this.array.buffer._uuid]&&(a.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}});let dX=new O;function dY(a,b,c,d){this.name="",this.data=a,this.itemSize=b,this.offset=c,this.normalized=!0===d}function dZ(a){ba.call(this),this.type="SpriteMaterial",this.color=new a7(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(a)}Object.defineProperties(dY.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}},needsUpdate:{set:function(a){this.data.needsUpdate=a}}}),Object.assign(dY.prototype,{isInterleavedBufferAttribute:!0,applyMatrix4:function(a){for(let b=0,c=this.data.count;b<c;b++)dX.x=this.getX(b),dX.y=this.getY(b),dX.z=this.getZ(b),dX.applyMatrix4(a),this.setXYZ(b,dX.x,dX.y,dX.z);return this},setX:function(a,b){return this.data.array[a*this.data.stride+this.offset]=b,this},setY:function(a,b){return this.data.array[a*this.data.stride+this.offset+1]=b,this},setZ:function(a,b){return this.data.array[a*this.data.stride+this.offset+2]=b,this},setW:function(a,b){return this.data.array[a*this.data.stride+this.offset+3]=b,this},getX:function(a){return this.data.array[a*this.data.stride+this.offset]},getY:function(a){return this.data.array[a*this.data.stride+this.offset+1]},getZ:function(a){return this.data.array[a*this.data.stride+this.offset+2]},getW:function(a){return this.data.array[a*this.data.stride+this.offset+3]},setXY:function(a,b,c){return a=a*this.data.stride+this.offset,this.data.array[a+0]=b,this.data.array[a+1]=c,this},setXYZ:function(a,b,c,d){return a=a*this.data.stride+this.offset,this.data.array[a+0]=b,this.data.array[a+1]=c,this.data.array[a+2]=d,this},setXYZW:function(a,b,c,d,e){return a=a*this.data.stride+this.offset,this.data.array[a+0]=b,this.data.array[a+1]=c,this.data.array[a+2]=d,this.data.array[a+3]=e,this},clone:function(a){if(void 0!==a)return void 0===a.interleavedBuffers&&(a.interleavedBuffers={}),void 0===a.interleavedBuffers[this.data.uuid]&&(a.interleavedBuffers[this.data.uuid]=this.data.clone(a)),new dY(a.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized);{console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");let b=[];for(let c=0;c<this.count;c++){let d=c*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)b.push(this.data.array[d+e])}return new be(new this.array.constructor(b),this.itemSize,this.normalized)}},toJSON:function(a){if(void 0!==a)return void 0===a.interleavedBuffers&&(a.interleavedBuffers={}),void 0===a.interleavedBuffers[this.data.uuid]&&(a.interleavedBuffers[this.data.uuid]=this.data.toJSON(a)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized};{console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");let b=[];for(let c=0;c<this.count;c++){let d=c*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)b.push(this.data.array[d+e])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:b,normalized:this.normalized}}}}),dZ.prototype=Object.create(ba.prototype),dZ.prototype.constructor=dZ,dZ.prototype.isSpriteMaterial=!0,dZ.prototype.copy=function(a){return ba.prototype.copy.call(this,a),this.color.copy(a.color),this.map=a.map,this.alphaMap=a.alphaMap,this.rotation=a.rotation,this.sizeAttenuation=a.sizeAttenuation,this};let d$,d_=new O,d0=new O,d1=new O,d2=new E,d3=new E,d4=new ao,d5=new O,d6=new O,d7=new O,d8=new E,d9=new E,ea=new E;function eb(a){if(aN.call(this),this.type="Sprite",void 0===d$){d$=new bx;let b=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),c=new dW(b,5);d$.setIndex([0,1,2,0,2,3]),d$.setAttribute("position",new dY(c,3,0,!1)),d$.setAttribute("uv",new dY(c,2,3,!1))}this.geometry=d$,this.material=void 0!==a?a:new dZ,this.center=new E(.5,.5)}function ec(a,b,c,d,e,f){d2.subVectors(a,c).addScalar(.5).multiply(d),void 0!==e?(d3.x=f*d2.x-e*d2.y,d3.y=e*d2.x+f*d2.y):d3.copy(d2),a.copy(b),a.x+=d3.x,a.y+=d3.y,a.applyMatrix4(d4)}eb.prototype=Object.assign(Object.create(aN.prototype),{constructor:eb,isSprite:!0,raycast:function(a,b){null===a.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),d0.setFromMatrixScale(this.matrixWorld),d4.copy(a.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(a.camera.matrixWorldInverse,this.matrixWorld),d1.setFromMatrixPosition(this.modelViewMatrix),a.camera.isPerspectiveCamera&& !1===this.material.sizeAttenuation&&d0.multiplyScalar(-d1.z);let c=this.material.rotation,d,e;0!==c&&(e=Math.cos(c),d=Math.sin(c));let f=this.center;ec(d5.set(-.5,-.5,0),d1,f,d0,d,e),ec(d6.set(.5,-.5,0),d1,f,d0,d,e),ec(d7.set(.5,.5,0),d1,f,d0,d,e),d8.set(0,0),d9.set(1,0),ea.set(1,1);let g=a.ray.intersectTriangle(d5,d6,d7,!1,d_);if(null===g&&(ec(d6.set(-.5,.5,0),d1,f,d0,d,e),d9.set(0,1),null===(g=a.ray.intersectTriangle(d5,d7,d6,!1,d_))))return;let h=a.ray.origin.distanceTo(d_);h<a.near||h>a.far||b.push({distance:h,point:d_.clone(),uv:a0.getUV(d_,d5,d6,d7,d8,d9,ea,new E),face:null,object:this})},copy:function(a){return aN.prototype.copy.call(this,a),void 0!==a.center&&this.center.copy(a.center),this.material=a.material,this}});let ed=new O,ee=new O;function ef(){aN.call(this),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}function eg(a,b){a&&a.isGeometry&&console.error("THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead."),bP.call(this,a,b),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new ao,this.bindMatrixInverse=new ao}ef.prototype=Object.assign(Object.create(aN.prototype),{constructor:ef,isLOD:!0,copy:function(a){aN.prototype.copy.call(this,a,!1);let b=a.levels;for(let c=0,d=b.length;c<d;c++){let e=b[c];this.addLevel(e.object.clone(),e.distance)}return this.autoUpdate=a.autoUpdate,this},addLevel:function(a,b){void 0===b&&(b=0),b=Math.abs(b);let c=this.levels,d;for(d=0;d<c.length&&!(b<c[d].distance);d++);return c.splice(d,0,{distance:b,object:a}),this.add(a),this},getCurrentLevel:function(){return this._currentLevel},getObjectForDistance:function(a){let b=this.levels;if(b.length>0){let c,d;for(c=1,d=b.length;c<d&&!(a<b[c].distance);c++);return b[c-1].object}return null},raycast:function(a,b){let c=this.levels;if(c.length>0){ed.setFromMatrixPosition(this.matrixWorld);let d=a.ray.origin.distanceTo(ed);this.getObjectForDistance(d).raycast(a,b)}},update:function(a){let b=this.levels;if(b.length>1){ed.setFromMatrixPosition(a.matrixWorld),ee.setFromMatrixPosition(this.matrixWorld);let c=ed.distanceTo(ee)/a.zoom;b[0].object.visible=!0;let d,e;for(d=1,e=b.length;d<e;d++)if(c>=b[d].distance)b[d-1].object.visible=!1,b[d].object.visible=!0;else break;for(this._currentLevel=d-1;d<e;d++)b[d].object.visible=!1}},toJSON:function(a){let b=aN.prototype.toJSON.call(this,a);!1===this.autoUpdate&&(b.object.autoUpdate=!1),b.object.levels=[];let c=this.levels;for(let d=0,e=c.length;d<e;d++){let f=c[d];b.object.levels.push({object:f.object.uuid,distance:f.distance})}return b}}),eg.prototype=Object.assign(Object.create(bP.prototype),{constructor:eg,isSkinnedMesh:!0,copy:function(a){return bP.prototype.copy.call(this,a),this.bindMode=a.bindMode,this.bindMatrix.copy(a.bindMatrix),this.bindMatrixInverse.copy(a.bindMatrixInverse),this.skeleton=a.skeleton,this},bind:function(a,b){this.skeleton=a,void 0===b&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),b=this.matrixWorld),this.bindMatrix.copy(b),this.bindMatrixInverse.getInverse(b)},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){let a=new K,b=this.geometry.attributes.skinWeight;for(let c=0,d=b.count;c<d;c++){a.x=b.getX(c),a.y=b.getY(c),a.z=b.getZ(c),a.w=b.getW(c);let e=1/a.manhattanLength();e!==1/0?a.multiplyScalar(e):a.set(1,0,0,0),b.setXYZW(c,a.x,a.y,a.z,a.w)}},updateMatrixWorld:function(a){bP.prototype.updateMatrixWorld.call(this,a),"attached"===this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):"detached"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},boneTransform:function(){let a=new O,b=new K,c=new K,d=new O,e=new ao;return function(f,g){let h=this.skeleton,i=this.geometry;b.fromBufferAttribute(i.attributes.skinIndex,f),c.fromBufferAttribute(i.attributes.skinWeight,f),a.fromBufferAttribute(i.attributes.position,f).applyMatrix4(this.bindMatrix),g.set(0,0,0);for(let j=0;j<4;j++){let k=c.getComponent(j);if(0!==k){let l=b.getComponent(j);e.multiplyMatrices(h.bones[l].matrixWorld,h.boneInverses[l]),g.addScaledVector(d.copy(a).applyMatrix4(e),k)}}return g.applyMatrix4(this.bindMatrixInverse)}}()});let eh=new ao,ei=new ao;function ej(a,b){if(a=a||[],this.bones=a.slice(0),this.boneMatrices=new Float32Array(16*this.bones.length),this.frame=-1,void 0===b)this.calculateInverses();else if(this.bones.length===b.length)this.boneInverses=b.slice(0);else{console.warn("THREE.Skeleton boneInverses is the wrong length."),this.boneInverses=[];for(let c=0,d=this.bones.length;c<d;c++)this.boneInverses.push(new ao)}}function ek(){aN.call(this),this.type="Bone"}Object.assign(ej.prototype,{calculateInverses:function(){this.boneInverses=[];for(let a=0,b=this.bones.length;a<b;a++){let c=new ao;this.bones[a]&&c.getInverse(this.bones[a].matrixWorld),this.boneInverses.push(c)}},pose:function(){for(let a=0,b=this.bones.length;a<b;a++){let c=this.bones[a];c&&c.matrixWorld.getInverse(this.boneInverses[a])}for(let d=0,e=this.bones.length;d<e;d++){let f=this.bones[d];f&&(f.parent&&f.parent.isBone?(f.matrix.getInverse(f.parent.matrixWorld),f.matrix.multiply(f.matrixWorld)):f.matrix.copy(f.matrixWorld),f.matrix.decompose(f.position,f.quaternion,f.scale))}},update:function(){let a=this.bones,b=this.boneInverses,c=this.boneMatrices,d=this.boneTexture;for(let e=0,f=a.length;e<f;e++){let g=a[e]?a[e].matrixWorld:ei;eh.multiplyMatrices(g,b[e]),eh.toArray(c,16*e)}void 0!==d&&(d.needsUpdate=!0)},clone:function(){return new ej(this.bones,this.boneInverses)},getBoneByName:function(a){for(let b=0,c=this.bones.length;b<c;b++){let d=this.bones[b];if(d.name===a)return d}},dispose:function(){this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=void 0)}}),ek.prototype=Object.assign(Object.create(aN.prototype),{constructor:ek,isBone:!0});let el=new ao,em=new ao,en=[],eo=new bP;function ep(a,b,c){bP.call(this,a,b),this.instanceMatrix=new be(new Float32Array(16*c),16),this.instanceColor=null,this.count=c,this.frustumCulled=!1}function eq(a){ba.call(this),this.type="LineBasicMaterial",this.color=new a7(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.morphTargets=!1,this.setValues(a)}ep.prototype=Object.assign(Object.create(bP.prototype),{constructor:ep,isInstancedMesh:!0,copy:function(a){return bP.prototype.copy.call(this,a),this.instanceMatrix.copy(a.instanceMatrix),this.count=a.count,this},setColorAt:function(a,b){null===this.instanceColor&&(this.instanceColor=new be(new Float32Array(3*this.count),3)),b.toArray(this.instanceColor.array,3*a)},getMatrixAt:function(a,b){b.fromArray(this.instanceMatrix.array,16*a)},raycast:function(a,b){let c=this.matrixWorld,d=this.count;if(eo.geometry=this.geometry,eo.material=this.material,void 0!==eo.material)for(let e=0;e<d;e++){this.getMatrixAt(e,el),em.multiplyMatrices(c,el),eo.matrixWorld=em,eo.raycast(a,en);for(let f=0,g=en.length;f<g;f++){let h=en[f];h.instanceId=e,h.object=this,b.push(h)}en.length=0}},setMatrixAt:function(a,b){b.toArray(this.instanceMatrix.array,16*a)},updateMorphTargets:function(){}}),eq.prototype=Object.create(ba.prototype),eq.prototype.constructor=eq,eq.prototype.isLineBasicMaterial=!0,eq.prototype.copy=function(a){return ba.prototype.copy.call(this,a),this.color.copy(a.color),this.linewidth=a.linewidth,this.linecap=a.linecap,this.linejoin=a.linejoin,this.morphTargets=a.morphTargets,this};let er=new O,es=new O,et=new ao,eu=new an,ev=new af;function ew(a,b,c){1===c&&console.error("THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead."),aN.call(this),this.type="Line",this.geometry=void 0!==a?a:new bx,this.material=void 0!==b?b:new eq,this.updateMorphTargets()}ew.prototype=Object.assign(Object.create(aN.prototype),{constructor:ew,isLine:!0,copy:function(a){return aN.prototype.copy.call(this,a),this.material=a.material,this.geometry=a.geometry,this},computeLineDistances:function(){let a=this.geometry;if(a.isBufferGeometry){if(null===a.index){let b=a.attributes.position,c=[0];for(let d=1,e=b.count;d<e;d++)er.fromBufferAttribute(b,d-1),es.fromBufferAttribute(b,d),c[d]=c[d-1],c[d]+=er.distanceTo(es);a.setAttribute("lineDistance",new bm(c,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.")}else if(a.isGeometry){let f=a.vertices,g=a.lineDistances;g[0]=0;for(let h=1,i=f.length;h<i;h++)g[h]=g[h-1],g[h]+=f[h-1].distanceTo(f[h])}return this},raycast:function(a,b){let c=this.geometry,d=this.matrixWorld,e=a.params.Line.threshold;if(null===c.boundingSphere&&c.computeBoundingSphere(),ev.copy(c.boundingSphere),ev.applyMatrix4(d),ev.radius+=e,!1===a.ray.intersectsSphere(ev))return;et.getInverse(d),eu.copy(a.ray).applyMatrix4(et);let f=e/((this.scale.x+this.scale.y+this.scale.z)/3),g=f*f,h=new O,i=new O,j=new O,k=new O,l=this.isLineSegments?2:1;if(c.isBufferGeometry){let m=c.index,n=c.attributes,o=n.position;if(null!==m){let p=m.array;for(let q=0,r=p.length-1;q<r;q+=l){let s=p[q],t=p[q+1];h.fromBufferAttribute(o,s),i.fromBufferAttribute(o,t);let u=eu.distanceSqToSegment(h,i,k,j);if(u>g)continue;k.applyMatrix4(this.matrixWorld);let v=a.ray.origin.distanceTo(k);v<a.near||v>a.far||b.push({distance:v,point:j.clone().applyMatrix4(this.matrixWorld),index:q,face:null,faceIndex:null,object:this})}}else for(let w=0,x=o.count-1;w<x;w+=l){h.fromBufferAttribute(o,w),i.fromBufferAttribute(o,w+1);let y=eu.distanceSqToSegment(h,i,k,j);if(y>g)continue;k.applyMatrix4(this.matrixWorld);let z=a.ray.origin.distanceTo(k);z<a.near||z>a.far||b.push({distance:z,point:j.clone().applyMatrix4(this.matrixWorld),index:w,face:null,faceIndex:null,object:this})}}else if(c.isGeometry){let A=c.vertices,B=A.length;for(let C=0;C<B-1;C+=l){let D=eu.distanceSqToSegment(A[C],A[C+1],k,j);if(D>g)continue;k.applyMatrix4(this.matrixWorld);let E=a.ray.origin.distanceTo(k);E<a.near||E>a.far||b.push({distance:E,point:j.clone().applyMatrix4(this.matrixWorld),index:C,face:null,faceIndex:null,object:this})}}},updateMorphTargets:function(){let a=this.geometry;if(a.isBufferGeometry){let b=a.morphAttributes,c=Object.keys(b);if(c.length>0){let d=b[c[0]];if(void 0!==d){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,f=d.length;e<f;e++){let g=d[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[g]=e}}}}else{let h=a.morphTargets;void 0!==h&&h.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}});let ex=new O,ey=new O;function ez(a,b){ew.call(this,a,b),this.type="LineSegments"}function eA(a,b){ew.call(this,a,b),this.type="LineLoop"}function eB(a){ba.call(this),this.type="PointsMaterial",this.color=new a7(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.setValues(a)}ez.prototype=Object.assign(Object.create(ew.prototype),{constructor:ez,isLineSegments:!0,computeLineDistances:function(){let a=this.geometry;if(a.isBufferGeometry){if(null===a.index){let b=a.attributes.position,c=[];for(let d=0,e=b.count;d<e;d+=2)ex.fromBufferAttribute(b,d),ey.fromBufferAttribute(b,d+1),c[d]=0===d?0:c[d-1],c[d+1]=c[d]+ex.distanceTo(ey);a.setAttribute("lineDistance",new bm(c,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.")}else if(a.isGeometry){let f=a.vertices,g=a.lineDistances;for(let h=0,i=f.length;h<i;h+=2)ex.copy(f[h]),ey.copy(f[h+1]),g[h]=0===h?0:g[h-1],g[h+1]=g[h]+ex.distanceTo(ey)}return this}}),eA.prototype=Object.assign(Object.create(ew.prototype),{constructor:eA,isLineLoop:!0}),eB.prototype=Object.create(ba.prototype),eB.prototype.constructor=eB,eB.prototype.isPointsMaterial=!0,eB.prototype.copy=function(a){return ba.prototype.copy.call(this,a),this.color.copy(a.color),this.map=a.map,this.alphaMap=a.alphaMap,this.size=a.size,this.sizeAttenuation=a.sizeAttenuation,this.morphTargets=a.morphTargets,this};let eC=new ao,eD=new an,eE=new af,eF=new O;function eG(a,b){aN.call(this),this.type="Points",this.geometry=void 0!==a?a:new bx,this.material=void 0!==b?b:new eB,this.updateMorphTargets()}function eH(a,b,c,d,e,f,g){let h=eD.distanceSqToPoint(a);if(h<c){let i=new O;eD.closestPointToPoint(a,i),i.applyMatrix4(d);let j=e.ray.origin.distanceTo(i);if(j<e.near||j>e.far)return;f.push({distance:j,distanceToRay:Math.sqrt(h),point:i,index:b,face:null,object:g})}}function eI(a,b,c,d,e,f,g,h,i){J.call(this,a,b,c,d,e,f,g,h,i),this.format=void 0!==g?g:r,this.minFilter=void 0!==f?f:o,this.magFilter=void 0!==e?e:o,this.generateMipmaps=!1;let j=this;function k(){j.needsUpdate=!0,a.requestVideoFrameCallback(k)}"requestVideoFrameCallback"in a&&a.requestVideoFrameCallback(k)}function eJ(a,b,c,d,e,f,g,h,i,j,k,l){J.call(this,null,f,g,h,i,j,d,e,k,l),this.image={width:b,height:c},this.mipmaps=a,this.flipY=!1,this.generateMipmaps=!1}function eK(a,b,c,d,e,f,g,h,i){J.call(this,a,b,c,d,e,f,g,h,i),this.needsUpdate=!0}function eL(a,b,c,d,e,f,g,h,i,j){if(1026!==(j=void 0!==j?j:1026)&&1027!==j)throw Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===c&&1026===j&&(c=1012),void 0===c&&1027===j&&(c=1020),J.call(this,null,d,e,f,g,h,j,c,i),this.image={width:a,height:b},this.magFilter=void 0!==g?g:l,this.minFilter=void 0!==h?h:l,this.flipY=!1,this.generateMipmaps=!1}eG.prototype=Object.assign(Object.create(aN.prototype),{constructor:eG,isPoints:!0,copy:function(a){return aN.prototype.copy.call(this,a),this.material=a.material,this.geometry=a.geometry,this},raycast:function(a,b){let c=this.geometry,d=this.matrixWorld,e=a.params.Points.threshold;if(null===c.boundingSphere&&c.computeBoundingSphere(),eE.copy(c.boundingSphere),eE.applyMatrix4(d),eE.radius+=e,!1===a.ray.intersectsSphere(eE))return;eC.getInverse(d),eD.copy(a.ray).applyMatrix4(eC);let f=e/((this.scale.x+this.scale.y+this.scale.z)/3),g=f*f;if(c.isBufferGeometry){let h=c.index,i=c.attributes,j=i.position;if(null!==h){let k=h.array;for(let l=0,m=k.length;l<m;l++){let n=k[l];eF.fromBufferAttribute(j,n),eH(eF,n,g,d,a,b,this)}}else for(let o=0,p=j.count;o<p;o++)eF.fromBufferAttribute(j,o),eH(eF,o,g,d,a,b,this)}else{let q=c.vertices;for(let r=0,s=q.length;r<s;r++)eH(q[r],r,g,d,a,b,this)}},updateMorphTargets:function(){let a=this.geometry;if(a.isBufferGeometry){let b=a.morphAttributes,c=Object.keys(b);if(c.length>0){let d=b[c[0]];if(void 0!==d){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,f=d.length;e<f;e++){let g=d[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[g]=e}}}}else{let h=a.morphTargets;void 0!==h&&h.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}),eI.prototype=Object.assign(Object.create(J.prototype),{constructor:eI,isVideoTexture:!0,update:function(){let a=this.image;!1=="requestVideoFrameCallback"in a&&a.readyState>=a.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}),eJ.prototype=Object.create(J.prototype),eJ.prototype.constructor=eJ,eJ.prototype.isCompressedTexture=!0,eK.prototype=Object.create(J.prototype),eK.prototype.constructor=eK,eK.prototype.isCanvasTexture=!0,eL.prototype=Object.create(J.prototype),eL.prototype.constructor=eL,eL.prototype.isDepthTexture=!0;let eM=0,eN=new ao,eO=new aN,eP=new O;function eQ(){Object.defineProperty(this,"id",{value:eM+=2}),this.uuid=D.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.elementsNeedUpdate=!1,this.verticesNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1}eQ.prototype=Object.assign(Object.create(z.prototype),{constructor:eQ,isGeometry:!0,applyMatrix4:function(a){let b=new F().getNormalMatrix(a);for(let c=0,d=this.vertices.length;c<d;c++){let e=this.vertices[c];e.applyMatrix4(a)}for(let f=0,g=this.faces.length;f<g;f++){let h=this.faces[f];h.normal.applyMatrix3(b).normalize();for(let i=0,j=h.vertexNormals.length;i<j;i++)h.vertexNormals[i].applyMatrix3(b).normalize()}return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0,this},rotateX:function(a){return eN.makeRotationX(a),this.applyMatrix4(eN),this},rotateY:function(a){return eN.makeRotationY(a),this.applyMatrix4(eN),this},rotateZ:function(a){return eN.makeRotationZ(a),this.applyMatrix4(eN),this},translate:function(a,b,c){return eN.makeTranslation(a,b,c),this.applyMatrix4(eN),this},scale:function(a,b,c){return eN.makeScale(a,b,c),this.applyMatrix4(eN),this},lookAt:function(a){return eO.lookAt(a),eO.updateMatrix(),this.applyMatrix4(eO.matrix),this},fromBufferGeometry:function(a){let b=this,c=null!==a.index?a.index:void 0,d=a.attributes;if(void 0===d.position)return console.error("THREE.Geometry.fromBufferGeometry(): Position attribute required for conversion."),this;let e=d.position,f=d.normal,g=d.color,h=d.uv,i=d.uv2;void 0!==i&&(this.faceVertexUvs[1]=[]);for(let j=0;j<e.count;j++)b.vertices.push(new O().fromBufferAttribute(e,j)),void 0!==g&&b.colors.push(new a7().fromBufferAttribute(g,j));function k(a,c,d,e){let j=void 0===g?[]:[b.colors[a].clone(),b.colors[c].clone(),b.colors[d].clone()],k=void 0===f?[]:[new O().fromBufferAttribute(f,a),new O().fromBufferAttribute(f,c),new O().fromBufferAttribute(f,d)],l=new a8(a,c,d,k,j,e);b.faces.push(l),void 0!==h&&b.faceVertexUvs[0].push([new E().fromBufferAttribute(h,a),new E().fromBufferAttribute(h,c),new E().fromBufferAttribute(h,d)]),void 0!==i&&b.faceVertexUvs[1].push([new E().fromBufferAttribute(i,a),new E().fromBufferAttribute(i,c),new E().fromBufferAttribute(i,d)])}let l=a.groups;if(l.length>0)for(let m=0;m<l.length;m++){let n=l[m],o=n.start,p=n.count;for(let q=o,r=o+p;q<r;q+=3)void 0!==c?k(c.getX(q),c.getX(q+1),c.getX(q+2),n.materialIndex):k(q,q+1,q+2,n.materialIndex)}else if(void 0!==c)for(let s=0;s<c.count;s+=3)k(c.getX(s),c.getX(s+1),c.getX(s+2));else for(let t=0;t<e.count;t+=3)k(t,t+1,t+2);return this.computeFaceNormals(),null!==a.boundingBox&&(this.boundingBox=a.boundingBox.clone()),null!==a.boundingSphere&&(this.boundingSphere=a.boundingSphere.clone()),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(eP).negate(),this.translate(eP.x,eP.y,eP.z),this},normalize:function(){this.computeBoundingSphere();let a=this.boundingSphere.center,b=this.boundingSphere.radius,c=0===b?1:1/b,d=new ao;return d.set(c,0,0,-c*a.x,0,c,0,-c*a.y,0,0,c,-c*a.z,0,0,0,1),this.applyMatrix4(d),this},computeFaceNormals:function(){let a=new O,b=new O;for(let c=0,d=this.faces.length;c<d;c++){let e=this.faces[c],f=this.vertices[e.a],g=this.vertices[e.b],h=this.vertices[e.c];a.subVectors(h,g),b.subVectors(f,g),a.cross(b),a.normalize(),e.normal.copy(a)}},computeVertexNormals:function(a){void 0===a&&(a=!0);let b=Array(this.vertices.length);for(let c=0,d=this.vertices.length;c<d;c++)b[c]=new O;if(a){let e=new O,f=new O;for(let g=0,h=this.faces.length;g<h;g++){let i=this.faces[g],j=this.vertices[i.a],k=this.vertices[i.b],l=this.vertices[i.c];e.subVectors(l,k),f.subVectors(j,k),e.cross(f),b[i.a].add(e),b[i.b].add(e),b[i.c].add(e)}}else{this.computeFaceNormals();for(let m=0,n=this.faces.length;m<n;m++){let o=this.faces[m];b[o.a].add(o.normal),b[o.b].add(o.normal),b[o.c].add(o.normal)}}for(let p=0,q=this.vertices.length;p<q;p++)b[p].normalize();for(let r=0,s=this.faces.length;r<s;r++){let t=this.faces[r],u=t.vertexNormals;3===u.length?(u[0].copy(b[t.a]),u[1].copy(b[t.b]),u[2].copy(b[t.c])):(u[0]=b[t.a].clone(),u[1]=b[t.b].clone(),u[2]=b[t.c].clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeFlatVertexNormals:function(){this.computeFaceNormals();for(let a=0,b=this.faces.length;a<b;a++){let c=this.faces[a],d=c.vertexNormals;3===d.length?(d[0].copy(c.normal),d[1].copy(c.normal),d[2].copy(c.normal)):(d[0]=c.normal.clone(),d[1]=c.normal.clone(),d[2]=c.normal.clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){for(let a=0,b=this.faces.length;a<b;a++){let c=this.faces[a];c.__originalFaceNormal?c.__originalFaceNormal.copy(c.normal):c.__originalFaceNormal=c.normal.clone(),c.__originalVertexNormals||(c.__originalVertexNormals=[]);for(let d=0,e=c.vertexNormals.length;d<e;d++)c.__originalVertexNormals[d]?c.__originalVertexNormals[d].copy(c.vertexNormals[d]):c.__originalVertexNormals[d]=c.vertexNormals[d].clone()}let f=new eQ;f.faces=this.faces;for(let g=0,h=this.morphTargets.length;g<h;g++){if(!this.morphNormals[g]){this.morphNormals[g]={},this.morphNormals[g].faceNormals=[],this.morphNormals[g].vertexNormals=[];let i=this.morphNormals[g].faceNormals,j=this.morphNormals[g].vertexNormals;for(let k=0,l=this.faces.length;k<l;k++){let m=new O,n={a:new O,b:new O,c:new O};i.push(m),j.push(n)}}let o=this.morphNormals[g];f.vertices=this.morphTargets[g].vertices,f.computeFaceNormals(),f.computeVertexNormals();for(let p=0,q=this.faces.length;p<q;p++){let r=this.faces[p],s=o.faceNormals[p],t=o.vertexNormals[p];s.copy(r.normal),t.a.copy(r.vertexNormals[0]),t.b.copy(r.vertexNormals[1]),t.c.copy(r.vertexNormals[2])}}for(let u=0,v=this.faces.length;u<v;u++){let w=this.faces[u];w.normal=w.__originalFaceNormal,w.vertexNormals=w.__originalVertexNormals}},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new R),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new af),this.boundingSphere.setFromPoints(this.vertices)},merge:function(a,b,c){if(!(a&&a.isGeometry)){console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",a);return}let d,e=this.vertices.length,f=this.vertices,g=a.vertices,h=this.faces,i=a.faces,j=this.colors,k=a.colors;void 0===c&&(c=0),void 0!==b&&(d=new F().getNormalMatrix(b));for(let l=0,m=g.length;l<m;l++){let n=g[l],o=n.clone();void 0!==b&&o.applyMatrix4(b),f.push(o)}for(let p=0,q=k.length;p<q;p++)j.push(k[p].clone());for(let r=0,s=i.length;r<s;r++){let t=i[r],u,v,w=t.vertexNormals,x=t.vertexColors,y=new a8(t.a+e,t.b+e,t.c+e);y.normal.copy(t.normal),void 0!==d&&y.normal.applyMatrix3(d).normalize();for(let z=0,A=w.length;z<A;z++)u=w[z].clone(),void 0!==d&&u.applyMatrix3(d).normalize(),y.vertexNormals.push(u);y.color.copy(t.color);for(let B=0,C=x.length;B<C;B++)v=x[B],y.vertexColors.push(v.clone());y.materialIndex=t.materialIndex+c,h.push(y)}for(let D=0,E=a.faceVertexUvs.length;D<E;D++){let G=a.faceVertexUvs[D];void 0===this.faceVertexUvs[D]&&(this.faceVertexUvs[D]=[]);for(let H=0,I=G.length;H<I;H++){let J=G[H],K=[];for(let L=0,M=J.length;L<M;L++)K.push(J[L].clone());this.faceVertexUvs[D].push(K)}}},mergeMesh:function(a){if(!(a&&a.isMesh)){console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",a);return}a.matrixAutoUpdate&&a.updateMatrix(),this.merge(a.geometry,a.matrix)},mergeVertices:function(){let a={},b=[],c=[];for(let d=0,e=this.vertices.length;d<e;d++){let f=this.vertices[d],g=Math.round(1e4*f.x)+"_"+Math.round(1e4*f.y)+"_"+Math.round(1e4*f.z);void 0===a[g]?(a[g]=d,b.push(this.vertices[d]),c[d]=b.length-1):c[d]=c[a[g]]}let h=[];for(let i=0,j=this.faces.length;i<j;i++){let k=this.faces[i];k.a=c[k.a],k.b=c[k.b],k.c=c[k.c];let l=[k.a,k.b,k.c];for(let m=0;m<3;m++)if(l[m]===l[(m+1)%3]){h.push(i);break}}for(let n=h.length-1;n>=0;n--){let o=h[n];this.faces.splice(o,1);for(let p=0,q=this.faceVertexUvs.length;p<q;p++)this.faceVertexUvs[p].splice(o,1)}let r=this.vertices.length-b.length;return this.vertices=b,r},setFromPoints:function(a){this.vertices=[];for(let b=0,c=a.length;b<c;b++){let d=a[b];this.vertices.push(new O(d.x,d.y,d.z||0))}return this},sortFacesByMaterialIndex:function(){let a=this.faces,b=a.length;for(let c=0;c<b;c++)a[c]._id=c;a.sort(function(a,b){return a.materialIndex-b.materialIndex});let d=this.faceVertexUvs[0],e=this.faceVertexUvs[1],f,g;d&&d.length===b&&(f=[]),e&&e.length===b&&(g=[]);for(let h=0;h<b;h++){let i=a[h]._id;f&&f.push(d[i]),g&&g.push(e[i])}f&&(this.faceVertexUvs[0]=f),g&&(this.faceVertexUvs[1]=g)},toJSON:function(){let a={metadata:{version:4.5,type:"Geometry",generator:"Geometry.toJSON"}};if(a.uuid=this.uuid,a.type=this.type,""!==this.name&&(a.name=this.name),void 0!==this.parameters){let b=this.parameters;for(let c in b)void 0!==b[c]&&(a[c]=b[c]);return a}let d=[];for(let e=0;e<this.vertices.length;e++){let f=this.vertices[e];d.push(f.x,f.y,f.z)}let g=[],h=[],i={},j=[],k={},l=[],m={};for(let n=0;n<this.faces.length;n++){let o=this.faces[n],p=!0,q=!1,r=void 0!==this.faceVertexUvs[0][n],s=o.normal.length()>0,t=o.vertexNormals.length>0,u=1!==o.color.r||1!==o.color.g||1!==o.color.b,v=o.vertexColors.length>0,w=0;if(w=A(w,0,0),w=A(w,1,p),w=A(w,2,q),w=A(w,3,r),w=A(w,4,s),w=A(w,5,t),w=A(w,6,u),w=A(w,7,v),g.push(w),g.push(o.a,o.b,o.c),g.push(o.materialIndex),r){let x=this.faceVertexUvs[0][n];g.push(D(x[0]),D(x[1]),D(x[2]))}if(s&&g.push(B(o.normal)),t){let y=o.vertexNormals;g.push(B(y[0]),B(y[1]),B(y[2]))}if(u&&g.push(C(o.color)),v){let z=o.vertexColors;g.push(C(z[0]),C(z[1]),C(z[2]))}}function A(a,b,c){return c?a|1<<b:a& ~(1<<b)}function B(a){let b=a.x.toString()+a.y.toString()+a.z.toString();return void 0!==i[b]||(i[b]=h.length/3,h.push(a.x,a.y,a.z)),i[b]}function C(a){let b=a.r.toString()+a.g.toString()+a.b.toString();return void 0!==k[b]||(k[b]=j.length,j.push(a.getHex())),k[b]}function D(a){let b=a.x.toString()+a.y.toString();return void 0!==m[b]||(m[b]=l.length/2,l.push(a.x,a.y)),m[b]}return a.data={},a.data.vertices=d,a.data.normals=h,j.length>0&&(a.data.colors=j),l.length>0&&(a.data.uvs=[l]),a.data.faces=g,a},clone:function(){return new eQ().copy(this)},copy:function(a){this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.name=a.name;let b=a.vertices;for(let c=0,d=b.length;c<d;c++)this.vertices.push(b[c].clone());let e=a.colors;for(let f=0,g=e.length;f<g;f++)this.colors.push(e[f].clone());let h=a.faces;for(let i=0,j=h.length;i<j;i++)this.faces.push(h[i].clone());for(let k=0,l=a.faceVertexUvs.length;k<l;k++){let m=a.faceVertexUvs[k];void 0===this.faceVertexUvs[k]&&(this.faceVertexUvs[k]=[]);for(let n=0,o=m.length;n<o;n++){let p=m[n],q=[];for(let r=0,s=p.length;r<s;r++){let t=p[r];q.push(t.clone())}this.faceVertexUvs[k].push(q)}}let u=a.morphTargets;for(let v=0,w=u.length;v<w;v++){let x={};if(x.name=u[v].name,void 0!==u[v].vertices){x.vertices=[];for(let y=0,z=u[v].vertices.length;y<z;y++)x.vertices.push(u[v].vertices[y].clone())}if(void 0!==u[v].normals){x.normals=[];for(let A=0,B=u[v].normals.length;A<B;A++)x.normals.push(u[v].normals[A].clone())}this.morphTargets.push(x)}let C=a.morphNormals;for(let D=0,E=C.length;D<E;D++){let F={};if(void 0!==C[D].vertexNormals){F.vertexNormals=[];for(let G=0,H=C[D].vertexNormals.length;G<H;G++){let I=C[D].vertexNormals[G],J={};J.a=I.a.clone(),J.b=I.b.clone(),J.c=I.c.clone(),F.vertexNormals.push(J)}}if(void 0!==C[D].faceNormals){F.faceNormals=[];for(let K=0,L=C[D].faceNormals.length;K<L;K++)F.faceNormals.push(C[D].faceNormals[K].clone())}this.morphNormals.push(F)}let M=a.skinWeights;for(let N=0,O=M.length;N<O;N++)this.skinWeights.push(M[N].clone());let P=a.skinIndices;for(let Q=0,R=P.length;Q<R;Q++)this.skinIndices.push(P[Q].clone());let S=a.lineDistances;for(let T=0,U=S.length;T<U;T++)this.lineDistances.push(S[T]);let V=a.boundingBox;null!==V&&(this.boundingBox=V.clone());let W=a.boundingSphere;return null!==W&&(this.boundingSphere=W.clone()),this.elementsNeedUpdate=a.elementsNeedUpdate,this.verticesNeedUpdate=a.verticesNeedUpdate,this.uvsNeedUpdate=a.uvsNeedUpdate,this.normalsNeedUpdate=a.normalsNeedUpdate,this.colorsNeedUpdate=a.colorsNeedUpdate,this.lineDistancesNeedUpdate=a.lineDistancesNeedUpdate,this.groupsNeedUpdate=a.groupsNeedUpdate,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});class eR extends bx{constructor(a,b,c,d){super(),this.type="CircleBufferGeometry",this.parameters={radius:a,segments:b,thetaStart:c,thetaLength:d},a=a||1,b=void 0!==b?Math.max(3,b):8,c=void 0!==c?c:0,d=void 0!==d?d:2*Math.PI;let e=[],f=[],g=[],h=[],i=new O,j=new E;f.push(0,0,0),g.push(0,0,1),h.push(.5,.5);for(let k=0,l=3;k<=b;k++,l+=3){let m=c+k/b*d;i.x=a*Math.cos(m),i.y=a*Math.sin(m),f.push(i.x,i.y,i.z),g.push(0,0,1),j.x=(f[l]/a+1)/2,j.y=(f[l+1]/a+1)/2,h.push(j.x,j.y)}for(let n=1;n<=b;n++)e.push(n,n+1,0);this.setIndex(e),this.setAttribute("position",new bm(f,3)),this.setAttribute("normal",new bm(g,3)),this.setAttribute("uv",new bm(h,2))}}class eS extends bx{constructor(a,b,c,d,e,f,g,h){super(),this.type="CylinderBufferGeometry",this.parameters={radiusTop:a,radiusBottom:b,height:c,radialSegments:d,heightSegments:e,openEnded:f,thetaStart:g,thetaLength:h};let i=this;a=void 0!==a?a:1,b=void 0!==b?b:1,c=c||1,d=Math.floor(d)||8,e=Math.floor(e)||1,f=void 0!==f&&f,g=void 0!==g?g:0,h=void 0!==h?h:2*Math.PI;let j=[],k=[],l=[],m=[],n=0,o=[],p=c/2,q=0;function r(c){let e=n,f=new E,o=new O,r=0,s=!0===c?a:b,t=!0===c?1:-1;for(let u=1;u<=d;u++)k.push(0,p*t,0),l.push(0,t,0),m.push(.5,.5),n++;let v=n;for(let w=0;w<=d;w++){let x=w/d,y=x*h+g,z=Math.cos(y),A=Math.sin(y);o.x=s*A,o.y=p*t,o.z=s*z,k.push(o.x,o.y,o.z),l.push(0,t,0),f.x=.5*z+.5,f.y=.5*A*t+.5,m.push(f.x,f.y),n++}for(let B=0;B<d;B++){let C=e+B,D=v+B;!0===c?j.push(D,D+1,C):j.push(D+1,D,C),r+=3}i.addGroup(q,r,!0===c?1:2),q+=r}(function(){let f=new O,r=new O,s=0,t=(b-a)/c;for(let u=0;u<=e;u++){let v=[],w=u/e,x=w*(b-a)+a;for(let y=0;y<=d;y++){let z=y/d,A=z*h+g,B=Math.sin(A),C=Math.cos(A);r.x=x*B,r.y=-w*c+p,r.z=x*C,k.push(r.x,r.y,r.z),f.set(B,t,C).normalize(),l.push(f.x,f.y,f.z),m.push(z,1-w),v.push(n++)}o.push(v)}for(let D=0;D<d;D++)for(let E=0;E<e;E++){let F=o[E][D],G=o[E+1][D],H=o[E+1][D+1],I=o[E][D+1];j.push(F,G,I),j.push(G,H,I),s+=6}i.addGroup(q,s,0),q+=s})(),!1===f&&(a>0&&r(!0),b>0&&r(!1)),this.setIndex(j),this.setAttribute("position",new bm(k,3)),this.setAttribute("normal",new bm(l,3)),this.setAttribute("uv",new bm(m,2))}}class eT extends eQ{constructor(a,b,c,d,e,f,g,h){super(),this.type="CylinderGeometry",this.parameters={radiusTop:a,radiusBottom:b,height:c,radialSegments:d,heightSegments:e,openEnded:f,thetaStart:g,thetaLength:h},this.fromBufferGeometry(new eS(a,b,c,d,e,f,g,h)),this.mergeVertices()}}class eU extends bx{constructor(a,b,c,d){super(),this.type="PolyhedronBufferGeometry",this.parameters={vertices:a,indices:b,radius:c,detail:d},c=c||1,d=d||0;let e=[],f=[];function g(a,b,c,d){let e=d+1,f=[];for(let g=0;g<=e;g++){f[g]=[];let h=a.clone().lerp(c,g/e),j=b.clone().lerp(c,g/e),k=e-g;for(let l=0;l<=k;l++)0===l&&g===e?f[g][l]=h:f[g][l]=h.clone().lerp(j,l/k)}for(let m=0;m<e;m++)for(let n=0;n<2*(e-m)-1;n++){let o=Math.floor(n/2);n%2==0?(i(f[m][o+1]),i(f[m+1][o]),i(f[m][o])):(i(f[m][o+1]),i(f[m+1][o+1]),i(f[m+1][o]))}}function h(){for(let a=0;a<f.length;a+=6){let b=f[a+0],c=f[a+2],d=f[a+4],e=Math.max(b,c,d),g=Math.min(b,c,d);e>.9&&g<.1&&(b<.2&&(f[a+0]+=1),c<.2&&(f[a+2]+=1),d<.2&&(f[a+4]+=1))}}function i(a){e.push(a.x,a.y,a.z)}function j(b,c){let d=3*b;c.x=a[d+0],c.y=a[d+1],c.z=a[d+2]}function k(){let a=new O,b=new O,c=new O,d=new O,g=new E,h=new E,i=new E;for(let j=0,k=0;j<e.length;j+=9,k+=6){a.set(e[j+0],e[j+1],e[j+2]),b.set(e[j+3],e[j+4],e[j+5]),c.set(e[j+6],e[j+7],e[j+8]),g.set(f[k+0],f[k+1]),h.set(f[k+2],f[k+3]),i.set(f[k+4],f[k+5]),d.copy(a).add(b).add(c).divideScalar(3);let n=m(d);l(g,k+0,a,n),l(h,k+2,b,n),l(i,k+4,c,n)}}function l(a,b,c,d){d<0&&1===a.x&&(f[b]=a.x-1),0===c.x&&0===c.z&&(f[b]=d/2/Math.PI+.5)}function m(a){return Math.atan2(a.z,-a.x)}function n(a){return Math.atan2(-a.y,Math.sqrt(a.x*a.x+a.z*a.z))}(function(a){let c=new O,d=new O,e=new O;for(let f=0;f<b.length;f+=3)j(b[f+0],c),j(b[f+1],d),j(b[f+2],e),g(c,d,e,a)})(d),function(a){let b=new O;for(let c=0;c<e.length;c+=3)b.x=e[c+0],b.y=e[c+1],b.z=e[c+2],b.normalize().multiplyScalar(a),e[c+0]=b.x,e[c+1]=b.y,e[c+2]=b.z}(c),function(){let a=new O;for(let b=0;b<e.length;b+=3){a.x=e[b+0],a.y=e[b+1],a.z=e[b+2];let c=m(a)/2/Math.PI+.5,d=n(a)/Math.PI+.5;f.push(c,1-d)}k(),h()}(),this.setAttribute("position",new bm(e,3)),this.setAttribute("normal",new bm(e.slice(),3)),this.setAttribute("uv",new bm(f,2)),0===d?this.computeVertexNormals():this.normalizeNormals()}}class eV extends eU{constructor(a,b){let c=(1+Math.sqrt(5))/2,d=1/c;super([-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-d,-c,0,-d,c,0,d,-c,0,d,c,-d,-c,0,-d,c,0,d,-c,0,d,c,0,-c,0,-d,c,0,-d,-c,0,d,c,0,d],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],a,b),this.type="DodecahedronBufferGeometry",this.parameters={radius:a,detail:b}}}let eW=new O,eX=new O,eY=new O,eZ=new a0,e$={triangulate:function(a,b,c){c=c||2;let d=b&&b.length,e=d?b[0]*c:a.length,f=e_(a,0,e,c,!0),g=[];if(!f||f.next===f.prev)return g;let h,i,j,k,l,m,n;if(d&&(f=e6(a,b,f,c)),a.length>80*c){h=j=a[0],i=k=a[1];for(let o=c;o<e;o+=c)l=a[o],m=a[o+1],l<h&&(h=l),m<i&&(i=m),l>j&&(j=l),m>k&&(k=m);n=0!==(n=Math.max(j-h,k-i))?1/n:0}return e1(f,g,c,h,i,n),g}};function e_(a,b,c,d,e){let f,g;if(e===ft(a,b,c,d)>0)for(f=b;f<c;f+=d)g=fq(f,a[f],a[f+1],g);else for(f=c-d;f>=b;f-=d)g=fq(f,a[f],a[f+1],g);return g&&fi(g,g.next)&&(fr(g),g=g.next),g}function e0(a,b){if(!a)return a;b||(b=a);let c=a,d;do if(d=!1,!c.steiner&&(fi(c,c.next)||0===fh(c.prev,c,c.next))){if(fr(c),(c=b=c.prev)===c.next)break;d=!0}else c=c.next;while(d||c!==b);return b}function e1(a,b,c,d,e,f,g){if(!a)return;!g&&f&&fb(a,d,e,f);let h=a,i,j;for(;a.prev!==a.next;){if(i=a.prev,j=a.next,f?e3(a,d,e,f):e2(a)){b.push(i.i/c),b.push(a.i/c),b.push(j.i/c),fr(a),a=j.next,h=j.next;continue}if((a=j)===h){g?1===g?(a=e4(e0(a),b,c),e1(a,b,c,d,e,f,2)):2===g&&e5(a,b,c,d,e,f):e1(e0(a),b,c,d,e,f,1);break}}}function e2(a){let b=a.prev,c=a,d=a.next;if(fh(b,c,d)>=0)return!1;let e=a.next.next;for(;e!==a.prev;){if(ff(b.x,b.y,c.x,c.y,d.x,d.y,e.x,e.y)&&fh(e.prev,e,e.next)>=0)return!1;e=e.next}return!0}function e3(a,b,c,d){let e=a.prev,f=a,g=a.next;if(fh(e,f,g)>=0)return!1;let h=e.x<f.x?e.x<g.x?e.x:g.x:f.x<g.x?f.x:g.x,i=e.y<f.y?e.y<g.y?e.y:g.y:f.y<g.y?f.y:g.y,j=e.x>f.x?e.x>g.x?e.x:g.x:f.x>g.x?f.x:g.x,k=e.y>f.y?e.y>g.y?e.y:g.y:f.y>g.y?f.y:g.y,l=fd(h,i,b,c,d),m=fd(j,k,b,c,d),n=a.prevZ,o=a.nextZ;for(;n&&n.z>=l&&o&&o.z<=m;){if(n!==a.prev&&n!==a.next&&ff(e.x,e.y,f.x,f.y,g.x,g.y,n.x,n.y)&&fh(n.prev,n,n.next)>=0||(n=n.prevZ,o!==a.prev&&o!==a.next&&ff(e.x,e.y,f.x,f.y,g.x,g.y,o.x,o.y)&&fh(o.prev,o,o.next)>=0))return!1;o=o.nextZ}for(;n&&n.z>=l;){if(n!==a.prev&&n!==a.next&&ff(e.x,e.y,f.x,f.y,g.x,g.y,n.x,n.y)&&fh(n.prev,n,n.next)>=0)return!1;n=n.prevZ}for(;o&&o.z<=m;){if(o!==a.prev&&o!==a.next&&ff(e.x,e.y,f.x,f.y,g.x,g.y,o.x,o.y)&&fh(o.prev,o,o.next)>=0)return!1;o=o.nextZ}return!0}function e4(a,b,c){let d=a;do{let e=d.prev,f=d.next.next;!fi(e,f)&&fj(e,d,d.next,f)&&fn(e,f)&&fn(f,e)&&(b.push(e.i/c),b.push(d.i/c),b.push(f.i/c),fr(d),fr(d.next),d=a=f),d=d.next}while(d!==a);return e0(d)}function e5(a,b,c,d,e,f){let g=a;do{let h=g.next.next;for(;h!==g.prev;){if(g.i!==h.i&&fg(g,h)){let i=fp(g,h);g=e0(g,g.next),i=e0(i,i.next),e1(g,b,c,d,e,f),e1(i,b,c,d,e,f);return}h=h.next}g=g.next}while(g!==a)}function e6(a,b,c,d){let e=[],f,g,h,i,j;for(f=0,g=b.length;f<g;f++)h=b[f]*d,i=f<g-1?b[f+1]*d:a.length,j=e_(a,h,i,d,!1),j===j.next&&(j.steiner=!0),e.push(fe(j));for(e.sort(e7),f=0;f<e.length;f++)e8(e[f],c),c=e0(c,c.next);return c}function e7(a,b){return a.x-b.x}function e8(a,b){if(b=e9(a,b)){let c=fp(b,a);e0(b,b.next),e0(c,c.next)}}function e9(a,b){let c=b,d=a.x,e=a.y,f=-1/0,g;do{if(e<=c.y&&e>=c.next.y&&c.next.y!==c.y){let h=c.x+(e-c.y)*(c.next.x-c.x)/(c.next.y-c.y);if(h<=d&&h>f){if(f=h,h===d){if(e===c.y)return c;if(e===c.next.y)return c.next}g=c.x<c.next.x?c:c.next}}c=c.next}while(c!==b);if(!g)return null;if(d===f)return g;let i=g,j=g.x,k=g.y,l=1/0,m;c=g;do d>=c.x&&c.x>=j&&d!==c.x&&ff(e<k?d:f,e,j,k,e<k?f:d,e,c.x,c.y)&&(m=Math.abs(e-c.y)/(d-c.x),fn(c,a)&&(m<l||m===l&&(c.x>g.x||c.x===g.x&&fa(g,c)))&&(g=c,l=m)),c=c.next;while(c!==i);return g}function fa(a,b){return 0>fh(a.prev,a,b.prev)&&0>fh(b.next,a,a.next)}function fb(a,b,c,d){let e=a;do null===e.z&&(e.z=fd(e.x,e.y,b,c,d)),e.prevZ=e.prev,e.nextZ=e.next,e=e.next;while(e!==a);e.prevZ.nextZ=null,e.prevZ=null,fc(e)}function fc(a){let b,c,d,e,f,g,h,i,j=1;do{for(c=a,a=null,f=null,g=0;c;){for(g++,d=c,h=0,b=0;b<j&&(h++,d=d.nextZ);b++);for(i=j;h>0||i>0&&d;)0!==h&&(0===i||!d||c.z<=d.z)?(e=c,c=c.nextZ,h--):(e=d,d=d.nextZ,i--),f?f.nextZ=e:a=e,e.prevZ=f,f=e;c=d}f.nextZ=null,j*=2}while(g>1);return a}function fd(a,b,c,d,e){return a=32767*(a-c)*e,b=32767*(b-d)*e,a=(a|a<<8)&16711935,a=(a|a<<4)&252645135,a=(a|a<<2)&858993459,a=(a|a<<1)&1431655765,b=(b|b<<8)&16711935,b=(b|b<<4)&252645135,b=(b|b<<2)&858993459,b=(b|b<<1)&1431655765,a|b<<1}function fe(a){let b=a,c=a;do(b.x<c.x||b.x===c.x&&b.y<c.y)&&(c=b),b=b.next;while(b!==a);return c}function ff(a,b,c,d,e,f,g,h){return(e-g)*(b-h)-(a-g)*(f-h)>=0&&(a-g)*(d-h)-(c-g)*(b-h)>=0&&(c-g)*(f-h)-(e-g)*(d-h)>=0}function fg(a,b){return a.next.i!==b.i&&a.prev.i!==b.i&&!fm(a,b)&&(fn(a,b)&&fn(b,a)&&fo(a,b)&&(fh(a.prev,a,b.prev)||fh(a,b.prev,b))||fi(a,b)&&fh(a.prev,a,a.next)>0&&fh(b.prev,b,b.next)>0)}function fh(a,b,c){return(b.y-a.y)*(c.x-b.x)-(b.x-a.x)*(c.y-b.y)}function fi(a,b){return a.x===b.x&&a.y===b.y}function fj(a,b,c,d){let e=fl(fh(a,b,c)),f=fl(fh(a,b,d)),g=fl(fh(c,d,a)),h=fl(fh(c,d,b));return!!(e!==f&&g!==h||0===e&&fk(a,c,b)||0===f&&fk(a,d,b)||0===g&&fk(c,a,d)||0===h&&fk(c,b,d))}function fk(a,b,c){return b.x<=Math.max(a.x,c.x)&&b.x>=Math.min(a.x,c.x)&&b.y<=Math.max(a.y,c.y)&&b.y>=Math.min(a.y,c.y)}function fl(a){return a>0?1:a<0?-1:0}function fm(a,b){let c=a;do{if(c.i!==a.i&&c.next.i!==a.i&&c.i!==b.i&&c.next.i!==b.i&&fj(c,c.next,a,b))return!0;c=c.next}while(c!==a);return!1}function fn(a,b){return 0>fh(a.prev,a,a.next)?fh(a,b,a.next)>=0&&fh(a,a.prev,b)>=0:0>fh(a,b,a.prev)||0>fh(a,a.next,b)}function fo(a,b){let c=a,d=!1,e=(a.x+b.x)/2,f=(a.y+b.y)/2;do c.y>f!=c.next.y>f&&c.next.y!==c.y&&e<(c.next.x-c.x)*(f-c.y)/(c.next.y-c.y)+c.x&&(d=!d),c=c.next;while(c!==a);return d}function fp(a,b){let c=new fs(a.i,a.x,a.y),d=new fs(b.i,b.x,b.y),e=a.next,f=b.prev;return a.next=b,b.prev=a,c.next=e,e.prev=c,d.next=c,c.prev=d,f.next=d,d.prev=f,d}function fq(a,b,c,d){let e=new fs(a,b,c);return d?(e.next=d.next,e.prev=d,d.next.prev=e,d.next=e):(e.prev=e,e.next=e),e}function fr(a){a.next.prev=a.prev,a.prev.next=a.next,a.prevZ&&(a.prevZ.nextZ=a.nextZ),a.nextZ&&(a.nextZ.prevZ=a.prevZ)}function fs(a,b,c){this.i=a,this.x=b,this.y=c,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function ft(a,b,c,d){let e=0;for(let f=b,g=c-d;f<c;f+=d)e+=(a[g]-a[f])*(a[f+1]+a[g+1]),g=f;return e}let fu={area:function(a){let b=a.length,c=0;for(let d=b-1,e=0;e<b;d=e++)c+=a[d].x*a[e].y-a[e].x*a[d].y;return .5*c},isClockWise:function(a){return 0>fu.area(a)},triangulateShape:function(a,b){let c=[],d=[],e=[];fv(a),fw(c,a);let f=a.length;b.forEach(fv);for(let g=0;g<b.length;g++)d.push(f),f+=b[g].length,fw(c,b[g]);let h=e$.triangulate(c,d);for(let i=0;i<h.length;i+=3)e.push(h.slice(i,i+3));return e}};function fv(a){let b=a.length;b>2&&a[b-1].equals(a[0])&&a.pop()}function fw(a,b){for(let c=0;c<b.length;c++)a.push(b[c].x),a.push(b[c].y)}class fx extends bx{constructor(a,b){super(),this.type="ExtrudeBufferGeometry",this.parameters={shapes:a,options:b},a=Array.isArray(a)?a:[a];let c=this,d=[],e=[];for(let f=0,g=a.length;f<g;f++){let h=a[f];i(h)}function i(a){let f=[],g=void 0!==b.curveSegments?b.curveSegments:12,h=void 0!==b.steps?b.steps:1,i=void 0!==b.depth?b.depth:100,j=void 0===b.bevelEnabled||b.bevelEnabled,k=void 0!==b.bevelThickness?b.bevelThickness:6,l=void 0!==b.bevelSize?b.bevelSize:k-2,m=void 0!==b.bevelOffset?b.bevelOffset:0,n=void 0!==b.bevelSegments?b.bevelSegments:3,o=b.extrudePath,p=void 0!==b.UVGenerator?b.UVGenerator:fy;void 0!==b.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),i=b.amount);let q,r=!1,s,t,u,v;o&&(q=o.getSpacedPoints(h),r=!0,j=!1,s=o.computeFrenetFrames(h,!1),t=new O,u=new O,v=new O),j||(n=0,k=0,l=0,m=0);let w=a.extractPoints(g),x=w.shape,y=w.holes,z=!fu.isClockWise(x);if(z){x=x.reverse();for(let A=0,B=y.length;A<B;A++){let C=y[A];fu.isClockWise(C)&&(y[A]=C.reverse())}}let D=fu.triangulateShape(x,y),F=x;for(let G=0,H=y.length;G<H;G++){let I=y[G];x=x.concat(I)}function J(a,b,c){return b||console.error("THREE.ExtrudeGeometry: vec does not exist"),b.clone().multiplyScalar(c).add(a)}let K=x.length,L=D.length;function M(a,b,c){let d,e,f,g=a.x-b.x,h=a.y-b.y,i=c.x-a.x,j=c.y-a.y,k=g*g+h*h,l=g*j-h*i;if(Math.abs(l)>Number.EPSILON){let m=Math.sqrt(k),n=Math.sqrt(i*i+j*j),o=b.x-h/m,p=b.y+g/m,q=c.x-j/n,r=c.y+i/n,s=((q-o)*j-(r-p)*i)/(g*j-h*i);d=o+g*s-a.x,e=p+h*s-a.y;let t=d*d+e*e;if(t<=2)return new E(d,e);f=Math.sqrt(t/2)}else{let u=!1;g>Number.EPSILON?i>Number.EPSILON&&(u=!0):g< -Number.EPSILON?i< -Number.EPSILON&&(u=!0):Math.sign(h)===Math.sign(j)&&(u=!0),u?(d=-h,e=g,f=Math.sqrt(k)):(d=g,e=h,f=Math.sqrt(k/2))}return new E(d/f,e/f)}let N=[];for(let P=0,Q=F.length,R=Q-1,S=P+1;P<Q;P++,R++,S++)R===Q&&(R=0),S===Q&&(S=0),N[P]=M(F[P],F[R],F[S]);let T=[],U,V=N.concat();for(let W=0,X=y.length;W<X;W++){let Y=y[W];U=[];for(let Z=0,$=Y.length,_=$-1,aa=Z+1;Z<$;Z++,_++,aa++)_===$&&(_=0),aa===$&&(aa=0),U[Z]=M(Y[Z],Y[_],Y[aa]);T.push(U),V=V.concat(U)}for(let ab=0;ab<n;ab++){let ac=ab/n,ad=k*Math.cos(ac*Math.PI/2),ae=l*Math.sin(ac*Math.PI/2)+m;for(let af=0,ag=F.length;af<ag;af++){let ah=J(F[af],N[af],ae);aI(ah.x,ah.y,-ad)}for(let ai=0,aj=y.length;ai<aj;ai++){let ak=y[ai];U=T[ai];for(let al=0,am=ak.length;al<am;al++){let an=J(ak[al],U[al],ae);aI(an.x,an.y,-ad)}}}let ao=l+m;for(let ap=0;ap<K;ap++){let aq=j?J(x[ap],V[ap],ao):x[ap];r?(u.copy(s.normals[0]).multiplyScalar(aq.x),t.copy(s.binormals[0]).multiplyScalar(aq.y),v.copy(q[0]).add(u).add(t),aI(v.x,v.y,v.z)):aI(aq.x,aq.y,0)}for(let ar=1;ar<=h;ar++)for(let as=0;as<K;as++){let at=j?J(x[as],V[as],ao):x[as];r?(u.copy(s.normals[ar]).multiplyScalar(at.x),t.copy(s.binormals[ar]).multiplyScalar(at.y),v.copy(q[ar]).add(u).add(t),aI(v.x,v.y,v.z)):aI(at.x,at.y,i/h*ar)}for(let au=n-1;au>=0;au--){let av=au/n,aw=k*Math.cos(av*Math.PI/2),ax=l*Math.sin(av*Math.PI/2)+m;for(let ay=0,az=F.length;ay<az;ay++){let aA=J(F[ay],N[ay],ax);aI(aA.x,aA.y,i+aw)}for(let aB=0,aC=y.length;aB<aC;aB++){let aD=y[aB];U=T[aB];for(let aE=0,aF=aD.length;aE<aF;aE++){let aG=J(aD[aE],U[aE],ax);r?aI(aG.x,aG.y+q[h-1].y,q[h-1].x+aw):aI(aG.x,aG.y,i+aw)}}}function aH(a,b){let c=a.length;for(;--c>=0;){let d=c,e=c-1;e<0&&(e=a.length-1);for(let f=0,g=h+2*n;f<g;f++){let i=K*f,j=K*(f+1),k=b+d+i,l=b+e+i,m=b+e+j,o=b+d+j;aK(k,l,m,o)}}}function aI(a,b,c){f.push(a),f.push(b),f.push(c)}function aJ(a,b,e){aL(a),aL(b),aL(e);let f=d.length/3,g=p.generateTopUV(c,d,f-3,f-2,f-1);aM(g[0]),aM(g[1]),aM(g[2])}function aK(a,b,e,f){aL(a),aL(b),aL(f),aL(b),aL(e),aL(f);let g=d.length/3,h=p.generateSideWallUV(c,d,g-6,g-3,g-2,g-1);aM(h[0]),aM(h[1]),aM(h[3]),aM(h[1]),aM(h[2]),aM(h[3])}function aL(a){d.push(f[3*a+0]),d.push(f[3*a+1]),d.push(f[3*a+2])}function aM(a){e.push(a.x),e.push(a.y)}(function(){let a=d.length/3;if(j){let b=0,e=K*b;for(let f=0;f<L;f++){let g=D[f];aJ(g[2]+e,g[1]+e,g[0]+e)}e=K*(b=h+2*n);for(let i=0;i<L;i++){let k=D[i];aJ(k[0]+e,k[1]+e,k[2]+e)}}else{for(let l=0;l<L;l++){let m=D[l];aJ(m[2],m[1],m[0])}for(let o=0;o<L;o++){let p=D[o];aJ(p[0]+K*h,p[1]+K*h,p[2]+K*h)}}c.addGroup(a,d.length/3-a,0)})(),function(){let a=d.length/3,b=0;aH(F,b),b+=F.length;for(let e=0,f=y.length;e<f;e++){let g=y[e];aH(g,b),b+=g.length}c.addGroup(a,d.length/3-a,1)}()}this.setAttribute("position",new bm(d,3)),this.setAttribute("uv",new bm(e,2)),this.computeVertexNormals()}toJSON(){let a=bx.prototype.toJSON.call(this),b=this.parameters.shapes,c=this.parameters.options;return fz(b,c,a)}}let fy={generateTopUV:function(a,b,c,d,e){let f=b[3*c],g=b[3*c+1],h=b[3*d],i=b[3*d+1],j=b[3*e],k=b[3*e+1];return[new E(f,g),new E(h,i),new E(j,k)]},generateSideWallUV:function(a,b,c,d,e,f){let g=b[3*c],h=b[3*c+1],i=b[3*c+2],j=b[3*d],k=b[3*d+1],l=b[3*d+2],m=b[3*e],n=b[3*e+1],o=b[3*e+2],p=b[3*f],q=b[3*f+1],r=b[3*f+2];return .01>Math.abs(h-k)?[new E(g,1-i),new E(j,1-l),new E(m,1-o),new E(p,1-r)]:[new E(h,1-i),new E(k,1-l),new E(n,1-o),new E(q,1-r)]}};function fz(a,b,c){if(c.shapes=[],Array.isArray(a))for(let d=0,e=a.length;d<e;d++){let f=a[d];c.shapes.push(f.uuid)}else c.shapes.push(a.uuid);return void 0!==b.extrudePath&&(c.options.extrudePath=b.extrudePath.toJSON()),c}class fA extends eQ{constructor(a,b){super(),this.type="ExtrudeGeometry",this.parameters={shapes:a,options:b},this.fromBufferGeometry(new fx(a,b)),this.mergeVertices()}toJSON(){let a=super.toJSON(),b=this.parameters.shapes,c=this.parameters.options;return fB(b,c,a)}}function fB(a,b,c){if(c.shapes=[],Array.isArray(a))for(let d=0,e=a.length;d<e;d++){let f=a[d];c.shapes.push(f.uuid)}else c.shapes.push(a.uuid);return void 0!==b.extrudePath&&(c.options.extrudePath=b.extrudePath.toJSON()),c}class fC extends eU{constructor(a,b){let c=(1+Math.sqrt(5))/2;super([-1,c,0,1,c,0,-1,-c,0,1,-c,0,0,-1,c,0,1,c,0,-1,-c,0,1,-c,c,0,-1,c,0,1,-c,0,-1,-c,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],a,b),this.type="IcosahedronBufferGeometry",this.parameters={radius:a,detail:b}}}class fD extends bx{constructor(a,b,c,d){super(),this.type="LatheBufferGeometry",this.parameters={points:a,segments:b,phiStart:c,phiLength:d},b=Math.floor(b)||12,c=c||0,d=d||2*Math.PI,d=D.clamp(d,0,2*Math.PI);let e=[],f=[],g=[],h=1/b,i=new O,j=new E;for(let k=0;k<=b;k++){let l=c+k*h*d,m=Math.sin(l),n=Math.cos(l);for(let o=0;o<=a.length-1;o++)i.x=a[o].x*m,i.y=a[o].y,i.z=a[o].x*n,f.push(i.x,i.y,i.z),j.x=k/b,j.y=o/(a.length-1),g.push(j.x,j.y)}for(let p=0;p<b;p++)for(let q=0;q<a.length-1;q++){let r=q+p*a.length,s=r,t=r+a.length,u=r+a.length+1,v=r+1;e.push(s,t,v),e.push(t,u,v)}if(this.setIndex(e),this.setAttribute("position",new bm(f,3)),this.setAttribute("uv",new bm(g,2)),this.computeVertexNormals(),d===2*Math.PI){let w=this.attributes.normal.array,x=new O,y=new O,z=new O,A=b*a.length*3;for(let B=0,C=0;B<a.length;B++,C+=3)x.x=w[C+0],x.y=w[C+1],x.z=w[C+2],y.x=w[A+C+0],y.y=w[A+C+1],y.z=w[A+C+2],z.addVectors(x,y).normalize(),w[C+0]=w[A+C+0]=z.x,w[C+1]=w[A+C+1]=z.y,w[C+2]=w[A+C+2]=z.z}}}class fE extends eU{constructor(a,b){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],a,b),this.type="OctahedronBufferGeometry",this.parameters={radius:a,detail:b}}}function fF(a,b,c){bx.call(this),this.type="ParametricBufferGeometry",this.parameters={func:a,slices:b,stacks:c};let d=[],e=[],f=[],g=[],h=new O,i=new O,j=new O,k=new O,l=new O;a.length<3&&console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");let m=b+1;for(let n=0;n<=c;n++){let o=n/c;for(let p=0;p<=b;p++){let q=p/b;a(q,o,i),e.push(i.x,i.y,i.z),q-1e-5>=0?(a(q-1e-5,o,j),k.subVectors(i,j)):(a(q+1e-5,o,j),k.subVectors(j,i)),o-1e-5>=0?(a(q,o-1e-5,j),l.subVectors(i,j)):(a(q,o+1e-5,j),l.subVectors(j,i)),h.crossVectors(k,l).normalize(),f.push(h.x,h.y,h.z),g.push(q,o)}}for(let r=0;r<c;r++)for(let s=0;s<b;s++){let t=r*m+s,u=r*m+s+1,v=(r+1)*m+s+1,w=(r+1)*m+s;d.push(t,u,w),d.push(u,v,w)}this.setIndex(d),this.setAttribute("position",new bm(e,3)),this.setAttribute("normal",new bm(f,3)),this.setAttribute("uv",new bm(g,2))}function fG(a,b,c){eQ.call(this),this.type="ParametricGeometry",this.parameters={func:a,slices:b,stacks:c},this.fromBufferGeometry(new fF(a,b,c)),this.mergeVertices()}fF.prototype=Object.create(bx.prototype),fF.prototype.constructor=fF,fG.prototype=Object.create(eQ.prototype),fG.prototype.constructor=fG;class fH extends bx{constructor(a,b,c,d,e,f){super(),this.type="RingBufferGeometry",this.parameters={innerRadius:a,outerRadius:b,thetaSegments:c,phiSegments:d,thetaStart:e,thetaLength:f},a=a||.5,b=b||1,e=void 0!==e?e:0,f=void 0!==f?f:2*Math.PI,c=void 0!==c?Math.max(3,c):8,d=void 0!==d?Math.max(1,d):1;let g=[],h=[],i=[],j=[],k=a,l=(b-a)/d,m=new O,n=new E;for(let o=0;o<=d;o++){for(let p=0;p<=c;p++){let q=e+p/c*f;m.x=k*Math.cos(q),m.y=k*Math.sin(q),h.push(m.x,m.y,m.z),i.push(0,0,1),n.x=(m.x/b+1)/2,n.y=(m.y/b+1)/2,j.push(n.x,n.y)}k+=l}for(let r=0;r<d;r++){let s=r*(c+1);for(let t=0;t<c;t++){let u=t+s,v=u,w=u+c+1,x=u+c+2,y=u+1;g.push(v,w,y),g.push(w,x,y)}}this.setIndex(g),this.setAttribute("position",new bm(h,3)),this.setAttribute("normal",new bm(i,3)),this.setAttribute("uv",new bm(j,2))}}class fI extends bx{constructor(a,b){super(),this.type="ShapeBufferGeometry",this.parameters={shapes:a,curveSegments:b},b=b||12;let c=[],d=[],e=[],f=[],g=0,h=0;if(!1===Array.isArray(a))j(a);else for(let i=0;i<a.length;i++)j(a[i]),this.addGroup(g,h,i),g+=h,h=0;function j(a){let g=d.length/3,i=a.extractPoints(b),j=i.shape,k=i.holes;!1===fu.isClockWise(j)&&(j=j.reverse());for(let l=0,m=k.length;l<m;l++){let n=k[l];!0===fu.isClockWise(n)&&(k[l]=n.reverse())}let o=fu.triangulateShape(j,k);for(let p=0,q=k.length;p<q;p++){let r=k[p];j=j.concat(r)}for(let s=0,t=j.length;s<t;s++){let u=j[s];d.push(u.x,u.y,0),e.push(0,0,1),f.push(u.x,u.y)}for(let v=0,w=o.length;v<w;v++){let x=o[v],y=x[0]+g,z=x[1]+g,A=x[2]+g;c.push(y,z,A),h+=3}}this.setIndex(c),this.setAttribute("position",new bm(d,3)),this.setAttribute("normal",new bm(e,3)),this.setAttribute("uv",new bm(f,2))}toJSON(){let a=bx.prototype.toJSON.call(this),b=this.parameters.shapes;return fJ(b,a)}}function fJ(a,b){if(b.shapes=[],Array.isArray(a))for(let c=0,d=a.length;c<d;c++){let e=a[c];b.shapes.push(e.uuid)}else b.shapes.push(a.uuid);return b}class fK extends eQ{constructor(a,b){super(),this.type="ShapeGeometry","object"==typeof b&&(console.warn("THREE.ShapeGeometry: Options parameter has been removed."),b=b.curveSegments),this.parameters={shapes:a,curveSegments:b},this.fromBufferGeometry(new fI(a,b)),this.mergeVertices()}toJSON(){let a=eQ.prototype.toJSON.call(this),b=this.parameters.shapes;return fL(b,a)}}function fL(a,b){if(b.shapes=[],Array.isArray(a))for(let c=0,d=a.length;c<d;c++){let e=a[c];b.shapes.push(e.uuid)}else b.shapes.push(a.uuid);return b}class fM extends bx{constructor(a,b,c,d,e,f,g){super(),this.type="SphereBufferGeometry",this.parameters={radius:a,widthSegments:b,heightSegments:c,phiStart:d,phiLength:e,thetaStart:f,thetaLength:g},a=a||1,b=Math.max(3,Math.floor(b)||8),c=Math.max(2,Math.floor(c)||6),d=void 0!==d?d:0,e=void 0!==e?e:2*Math.PI,f=void 0!==f?f:0,g=void 0!==g?g:Math.PI;let h=Math.min(f+g,Math.PI),i=0,j=[],k=new O,l=new O,m=[],n=[],o=[],p=[];for(let q=0;q<=c;q++){let r=[],s=q/c,t=0;0==q&&0==f?t=.5/b:q==c&&h==Math.PI&&(t=-.5/b);for(let u=0;u<=b;u++){let v=u/b;k.x=-a*Math.cos(d+v*e)*Math.sin(f+s*g),k.y=a*Math.cos(f+s*g),k.z=a*Math.sin(d+v*e)*Math.sin(f+s*g),n.push(k.x,k.y,k.z),l.copy(k).normalize(),o.push(l.x,l.y,l.z),p.push(v+t,1-s),r.push(i++)}j.push(r)}for(let w=0;w<c;w++)for(let x=0;x<b;x++){let y=j[w][x+1],z=j[w][x],A=j[w+1][x],B=j[w+1][x+1];(0!==w||f>0)&&m.push(y,z,B),(w!==c-1||h<Math.PI)&&m.push(z,A,B)}this.setIndex(m),this.setAttribute("position",new bm(n,3)),this.setAttribute("normal",new bm(o,3)),this.setAttribute("uv",new bm(p,2))}}class fN extends eU{constructor(a,b){super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],a,b),this.type="TetrahedronBufferGeometry",this.parameters={radius:a,detail:b}}}class fO extends fx{constructor(a,b){b=b||{};let c=b.font;if(!(c&&c.isFont))return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new bx;let d=c.generateShapes(a,b.size);b.depth=void 0!==b.height?b.height:50,void 0===b.bevelThickness&&(b.bevelThickness=10),void 0===b.bevelSize&&(b.bevelSize=8),void 0===b.bevelEnabled&&(b.bevelEnabled=!1),super(d,b),this.type="TextBufferGeometry"}}class fP extends bx{constructor(a,b,c,d,e){super(),this.type="TorusBufferGeometry",this.parameters={radius:a,tube:b,radialSegments:c,tubularSegments:d,arc:e},a=a||1,b=b||.4,c=Math.floor(c)||8,d=Math.floor(d)||6,e=e||2*Math.PI;let f=[],g=[],h=[],i=[],j=new O,k=new O,l=new O;for(let m=0;m<=c;m++)for(let n=0;n<=d;n++){let o=n/d*e,p=m/c*Math.PI*2;k.x=(a+b*Math.cos(p))*Math.cos(o),k.y=(a+b*Math.cos(p))*Math.sin(o),k.z=b*Math.sin(p),g.push(k.x,k.y,k.z),j.x=a*Math.cos(o),j.y=a*Math.sin(o),l.subVectors(k,j).normalize(),h.push(l.x,l.y,l.z),i.push(n/d),i.push(m/c)}for(let q=1;q<=c;q++)for(let r=1;r<=d;r++){let s=(d+1)*q+r-1,t=(d+1)*(q-1)+r-1,u=(d+1)*(q-1)+r,v=(d+1)*q+r;f.push(s,t,v),f.push(t,u,v)}this.setIndex(f),this.setAttribute("position",new bm(g,3)),this.setAttribute("normal",new bm(h,3)),this.setAttribute("uv",new bm(i,2))}}class fQ extends bx{constructor(a,b,c,d,e,f){super(),this.type="TorusKnotBufferGeometry",this.parameters={radius:a,tube:b,tubularSegments:c,radialSegments:d,p:e,q:f},a=a||1,b=b||.4,c=Math.floor(c)||64,d=Math.floor(d)||8,e=e||2,f=f||3;let g=[],h=[],i=[],j=[],k=new O,l=new O,m=new O,n=new O,o=new O,p=new O,q=new O;for(let r=0;r<=c;++r){let s=r/c*e*Math.PI*2;D(s,e,f,a,m),D(s+.01,e,f,a,n),p.subVectors(n,m),q.addVectors(n,m),o.crossVectors(p,q),q.crossVectors(o,p),o.normalize(),q.normalize();for(let t=0;t<=d;++t){let u=t/d*Math.PI*2,v=-b*Math.cos(u),w=b*Math.sin(u);k.x=m.x+(v*q.x+w*o.x),k.y=m.y+(v*q.y+w*o.y),k.z=m.z+(v*q.z+w*o.z),h.push(k.x,k.y,k.z),l.subVectors(k,m).normalize(),i.push(l.x,l.y,l.z),j.push(r/c),j.push(t/d)}}for(let x=1;x<=c;x++)for(let y=1;y<=d;y++){let z=(d+1)*(x-1)+(y-1),A=(d+1)*x+(y-1),B=(d+1)*x+y,C=(d+1)*(x-1)+y;g.push(z,A,C),g.push(A,B,C)}function D(a,b,c,d,e){let f=c/b*a,g=Math.cos(f);e.x=d*(2+g)*.5*Math.cos(a),e.y=d*(2+g)*Math.sin(a)*.5,e.z=d*Math.sin(f)*.5}this.setIndex(g),this.setAttribute("position",new bm(h,3)),this.setAttribute("normal",new bm(i,3)),this.setAttribute("uv",new bm(j,2))}}class fR extends bx{constructor(a,b,c,d,e){super(),this.type="TubeBufferGeometry",this.parameters={path:a,tubularSegments:b,radius:c,radialSegments:d,closed:e},b=b||64,c=c||1,d=d||8,e=e||!1;let f=a.computeFrenetFrames(b,e);this.tangents=f.tangents,this.normals=f.normals,this.binormals=f.binormals;let g=new O,h=new O,i=new E,j=new O,k=[],l=[],m=[],n=[];function o(e){j=a.getPointAt(e/b,j);let i=f.normals[e],m=f.binormals[e];for(let n=0;n<=d;n++){let o=n/d*Math.PI*2,p=Math.sin(o),q=-Math.cos(o);h.x=q*i.x+p*m.x,h.y=q*i.y+p*m.y,h.z=q*i.z+p*m.z,h.normalize(),l.push(h.x,h.y,h.z),g.x=j.x+c*h.x,g.y=j.y+c*h.y,g.z=j.z+c*h.z,k.push(g.x,g.y,g.z)}}function p(){for(let a=1;a<=b;a++)for(let c=1;c<=d;c++){let e=(d+1)*(a-1)+(c-1),f=(d+1)*a+(c-1),g=(d+1)*a+c,h=(d+1)*(a-1)+c;n.push(e,f,h),n.push(f,g,h)}}function q(){for(let a=0;a<=b;a++)for(let c=0;c<=d;c++)i.x=a/b,i.y=c/d,m.push(i.x,i.y)}(function(){for(let a=0;a<b;a++)o(a);o(!1===e?b:0),q(),p()})(),this.setIndex(n),this.setAttribute("position",new bm(k,3)),this.setAttribute("normal",new bm(l,3)),this.setAttribute("uv",new bm(m,2))}toJSON(){let a=bx.prototype.toJSON.call(this);return a.path=this.parameters.path.toJSON(),a}}function fS(a){ba.call(this),this.type="ShadowMaterial",this.color=new a7(0),this.transparent=!0,this.setValues(a)}function fT(a){bW.call(this,a),this.type="RawShaderMaterial"}function fU(a){ba.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new a7(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new a7(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=x,this.normalScale=new E(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.vertexTangents=!1,this.setValues(a)}function fV(a){fU.call(this),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoat=0,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new E(1,1),this.clearcoatNormalMap=null,this.reflectivity=.5,Object.defineProperty(this,"ior",{get:function(){return(1+.4*this.reflectivity)/(1-.4*this.reflectivity)},set:function(a){this.reflectivity=D.clamp(2.5*(a-1)/(a+1),0,1)}}),this.sheen=null,this.transmission=0,this.transmissionMap=null,this.setValues(a)}function fW(a){ba.call(this),this.type="MeshPhongMaterial",this.color=new a7(16777215),this.specular=new a7(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new a7(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=x,this.normalScale=new E(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(a)}function fX(a){ba.call(this),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new a7(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new a7(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=x,this.normalScale=new E(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(a)}function fY(a){ba.call(this),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=x,this.normalScale=new E(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(a)}function fZ(a){ba.call(this),this.type="MeshLambertMaterial",this.color=new a7(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new a7(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(a)}function f$(a){ba.call(this),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new a7(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=x,this.normalScale=new E(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(a)}function f_(a){eq.call(this),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(a)}(class extends eQ{constructor(a,b,c,d,e,f){super(),this.type="BoxGeometry",this.parameters={width:a,height:b,depth:c,widthSegments:d,heightSegments:e,depthSegments:f},this.fromBufferGeometry(new bS(a,b,c,d,e,f)),this.mergeVertices()}}),(class extends eQ{constructor(a,b,c,d){super(),this.type="CircleGeometry",this.parameters={radius:a,segments:b,thetaStart:c,thetaLength:d},this.fromBufferGeometry(new eR(a,b,c,d)),this.mergeVertices()}}),(class extends eT{constructor(a,b,c,d,e,f,g){super(0,a,b,c,d,e,f,g),this.type="ConeGeometry",this.parameters={radius:a,height:b,radialSegments:c,heightSegments:d,openEnded:e,thetaStart:f,thetaLength:g}}}),(class extends eS{constructor(a,b,c,d,e,f,g){super(0,a,b,c,d,e,f,g),this.type="ConeBufferGeometry",this.parameters={radius:a,height:b,radialSegments:c,heightSegments:d,openEnded:e,thetaStart:f,thetaLength:g}}}),(class extends eQ{constructor(a,b){super(),this.type="DodecahedronGeometry",this.parameters={radius:a,detail:b},this.fromBufferGeometry(new eV(a,b)),this.mergeVertices()}}),(class a extends bx{constructor(a,b){super(),this.type="EdgesGeometry",this.parameters={thresholdAngle:b},b=void 0!==b?b:1,a.isGeometry&&(a=new bx().fromGeometry(a));let c=Math.cos(D.DEG2RAD*b),d=a.getIndex(),e=a.getAttribute("position"),f=d?d.count:e.count,g=[0,0,0],h=["a","b","c"],i=[,,,],j={},k=[];for(let l=0;l<f;l+=3){d?(g[0]=d.getX(l),g[1]=d.getX(l+1),g[2]=d.getX(l+2)):(g[0]=l,g[1]=l+1,g[2]=l+2);let{a:m,b:n,c:o}=eZ;if(m.fromBufferAttribute(e,g[0]),n.fromBufferAttribute(e,g[1]),o.fromBufferAttribute(e,g[2]),eZ.getNormal(eY),i[0]=`${Math.round(1e4*m.x)},${Math.round(1e4*m.y)},${Math.round(1e4*m.z)}`,i[1]=`${Math.round(1e4*n.x)},${Math.round(1e4*n.y)},${Math.round(1e4*n.z)}`,i[2]=`${Math.round(1e4*o.x)},${Math.round(1e4*o.y)},${Math.round(1e4*o.z)}`,i[0]!==i[1]&&i[1]!==i[2]&&i[2]!==i[0])for(let p=0;p<3;p++){let q=(p+1)%3,r=i[p],s=i[q],t=eZ[h[p]],u=eZ[h[q]],v=`${r}_${s}`,w=`${s}_${r}`;w in j&&j[w]?(eY.dot(j[w].normal)<=c&&(k.push(t.x,t.y,t.z),k.push(u.x,u.y,u.z)),j[w]=null):v in j||(j[v]={index0:g[p],index1:g[q],normal:eY.clone()})}}for(let x in j)if(j[x]){let{index0:y,index1:z}=j[x];eW.fromBufferAttribute(e,y),eX.fromBufferAttribute(e,z),k.push(eW.x,eW.y,eW.z),k.push(eX.x,eX.y,eX.z)}this.setAttribute("position",new bm(k,3))}}),(class extends eQ{constructor(a,b){super(),this.type="IcosahedronGeometry",this.parameters={radius:a,detail:b},this.fromBufferGeometry(new fC(a,b)),this.mergeVertices()}}),(class extends eQ{constructor(a,b,c,d){super(),this.type="LatheGeometry",this.parameters={points:a,segments:b,phiStart:c,phiLength:d},this.fromBufferGeometry(new fD(a,b,c,d)),this.mergeVertices()}}),(class extends eQ{constructor(a,b){super(),this.type="OctahedronGeometry",this.parameters={radius:a,detail:b},this.fromBufferGeometry(new fE(a,b)),this.mergeVertices()}}),(class extends eQ{constructor(a,b,c,d){super(),this.type="PlaneGeometry",this.parameters={width:a,height:b,widthSegments:c,heightSegments:d},this.fromBufferGeometry(new b6(a,b,c,d)),this.mergeVertices()}}),(class extends eQ{constructor(a,b,c,d){super(),this.type="PolyhedronGeometry",this.parameters={vertices:a,indices:b,radius:c,detail:d},this.fromBufferGeometry(new eU(a,b,c,d)),this.mergeVertices()}}),(class extends eQ{constructor(a,b,c,d,e,f){super(),this.type="RingGeometry",this.parameters={innerRadius:a,outerRadius:b,thetaSegments:c,phiSegments:d,thetaStart:e,thetaLength:f},this.fromBufferGeometry(new fH(a,b,c,d,e,f)),this.mergeVertices()}}),(class extends eQ{constructor(a,b,c,d,e,f,g){super(),this.type="SphereGeometry",this.parameters={radius:a,widthSegments:b,heightSegments:c,phiStart:d,phiLength:e,thetaStart:f,thetaLength:g},this.fromBufferGeometry(new fM(a,b,c,d,e,f,g)),this.mergeVertices()}}),(class extends eQ{constructor(a,b){super(),this.type="TetrahedronGeometry",this.parameters={radius:a,detail:b},this.fromBufferGeometry(new fN(a,b)),this.mergeVertices()}}),(class extends eQ{constructor(a,b){super(),this.type="TextGeometry",this.parameters={text:a,parameters:b},this.fromBufferGeometry(new fO(a,b)),this.mergeVertices()}}),(class extends eQ{constructor(a,b,c,d,e){super(),this.type="TorusGeometry",this.parameters={radius:a,tube:b,radialSegments:c,tubularSegments:d,arc:e},this.fromBufferGeometry(new fP(a,b,c,d,e)),this.mergeVertices()}}),(class extends eQ{constructor(a,b,c,d,e,f,g){super(),this.type="TorusKnotGeometry",this.parameters={radius:a,tube:b,tubularSegments:c,radialSegments:d,p:e,q:f},void 0!==g&&console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead."),this.fromBufferGeometry(new fQ(a,b,c,d,e,f)),this.mergeVertices()}}),(class extends eQ{constructor(a,b,c,d,e,f){super(),this.type="TubeGeometry",this.parameters={path:a,tubularSegments:b,radius:c,radialSegments:d,closed:e},void 0!==f&&console.warn("THREE.TubeGeometry: taper has been removed.");let g=new fR(a,b,c,d,e);this.tangents=g.tangents,this.normals=g.normals,this.binormals=g.binormals,this.fromBufferGeometry(g),this.mergeVertices()}}),(class a extends bx{constructor(a){super(),this.type="WireframeGeometry";let b=[],c=[0,0],d={},e=["a","b","c"];if(a&&a.isGeometry){let f=a.faces;for(let g=0,h=f.length;g<h;g++){let i=f[g];for(let j=0;j<3;j++){let k=i[e[j]],l=i[e[(j+1)%3]];c[0]=Math.min(k,l),c[1]=Math.max(k,l);let m=c[0]+","+c[1];void 0===d[m]&&(d[m]={index1:c[0],index2:c[1]})}}for(let n in d){let o=d[n],p=a.vertices[o.index1];b.push(p.x,p.y,p.z),p=a.vertices[o.index2],b.push(p.x,p.y,p.z)}}else if(a&&a.isBufferGeometry){let q=new O;if(null!==a.index){let r=a.attributes.position,s=a.index,t=a.groups;0===t.length&&(t=[{start:0,count:s.count,materialIndex:0}]);for(let u=0,v=t.length;u<v;++u){let w=t[u],x=w.start,y=w.count;for(let z=x,A=x+y;z<A;z+=3)for(let B=0;B<3;B++){let C=s.getX(z+B),D=s.getX(z+(B+1)%3);c[0]=Math.min(C,D),c[1]=Math.max(C,D);let E=c[0]+","+c[1];void 0===d[E]&&(d[E]={index1:c[0],index2:c[1]})}}for(let F in d){let G=d[F];q.fromBufferAttribute(r,G.index1),b.push(q.x,q.y,q.z),q.fromBufferAttribute(r,G.index2),b.push(q.x,q.y,q.z)}}else{let H=a.attributes.position;for(let I=0,J=H.count/3;I<J;I++)for(let K=0;K<3;K++){let L=3*I+K;q.fromBufferAttribute(H,L),b.push(q.x,q.y,q.z);let M=3*I+(K+1)%3;q.fromBufferAttribute(H,M),b.push(q.x,q.y,q.z)}}}this.setAttribute("position",new bm(b,3))}}),fS.prototype=Object.create(ba.prototype),fS.prototype.constructor=fS,fS.prototype.isShadowMaterial=!0,fS.prototype.copy=function(a){return ba.prototype.copy.call(this,a),this.color.copy(a.color),this},fT.prototype=Object.create(bW.prototype),fT.prototype.constructor=fT,fT.prototype.isRawShaderMaterial=!0,fU.prototype=Object.create(ba.prototype),fU.prototype.constructor=fU,fU.prototype.isMeshStandardMaterial=!0,fU.prototype.copy=function(a){return ba.prototype.copy.call(this,a),this.defines={STANDARD:""},this.color.copy(a.color),this.roughness=a.roughness,this.metalness=a.metalness,this.map=a.map,this.lightMap=a.lightMap,this.lightMapIntensity=a.lightMapIntensity,this.aoMap=a.aoMap,this.aoMapIntensity=a.aoMapIntensity,this.emissive.copy(a.emissive),this.emissiveMap=a.emissiveMap,this.emissiveIntensity=a.emissiveIntensity,this.bumpMap=a.bumpMap,this.bumpScale=a.bumpScale,this.normalMap=a.normalMap,this.normalMapType=a.normalMapType,this.normalScale.copy(a.normalScale),this.displacementMap=a.displacementMap,this.displacementScale=a.displacementScale,this.displacementBias=a.displacementBias,this.roughnessMap=a.roughnessMap,this.metalnessMap=a.metalnessMap,this.alphaMap=a.alphaMap,this.envMap=a.envMap,this.envMapIntensity=a.envMapIntensity,this.refractionRatio=a.refractionRatio,this.wireframe=a.wireframe,this.wireframeLinewidth=a.wireframeLinewidth,this.wireframeLinecap=a.wireframeLinecap,this.wireframeLinejoin=a.wireframeLinejoin,this.skinning=a.skinning,this.morphTargets=a.morphTargets,this.morphNormals=a.morphNormals,this.vertexTangents=a.vertexTangents,this},fV.prototype=Object.create(fU.prototype),fV.prototype.constructor=fV,fV.prototype.isMeshPhysicalMaterial=!0,fV.prototype.copy=function(a){return fU.prototype.copy.call(this,a),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=a.clearcoat,this.clearcoatMap=a.clearcoatMap,this.clearcoatRoughness=a.clearcoatRoughness,this.clearcoatRoughnessMap=a.clearcoatRoughnessMap,this.clearcoatNormalMap=a.clearcoatNormalMap,this.clearcoatNormalScale.copy(a.clearcoatNormalScale),this.reflectivity=a.reflectivity,a.sheen?this.sheen=(this.sheen||new a7).copy(a.sheen):this.sheen=null,this.transmission=a.transmission,this.transmissionMap=a.transmissionMap,this},fW.prototype=Object.create(ba.prototype),fW.prototype.constructor=fW,fW.prototype.isMeshPhongMaterial=!0,fW.prototype.copy=function(a){return ba.prototype.copy.call(this,a),this.color.copy(a.color),this.specular.copy(a.specular),this.shininess=a.shininess,this.map=a.map,this.lightMap=a.lightMap,this.lightMapIntensity=a.lightMapIntensity,this.aoMap=a.aoMap,this.aoMapIntensity=a.aoMapIntensity,this.emissive.copy(a.emissive),this.emissiveMap=a.emissiveMap,this.emissiveIntensity=a.emissiveIntensity,this.bumpMap=a.bumpMap,this.bumpScale=a.bumpScale,this.normalMap=a.normalMap,this.normalMapType=a.normalMapType,this.normalScale.copy(a.normalScale),this.displacementMap=a.displacementMap,this.displacementScale=a.displacementScale,this.displacementBias=a.displacementBias,this.specularMap=a.specularMap,this.alphaMap=a.alphaMap,this.envMap=a.envMap,this.combine=a.combine,this.reflectivity=a.reflectivity,this.refractionRatio=a.refractionRatio,this.wireframe=a.wireframe,this.wireframeLinewidth=a.wireframeLinewidth,this.wireframeLinecap=a.wireframeLinecap,this.wireframeLinejoin=a.wireframeLinejoin,this.skinning=a.skinning,this.morphTargets=a.morphTargets,this.morphNormals=a.morphNormals,this},fX.prototype=Object.create(ba.prototype),fX.prototype.constructor=fX,fX.prototype.isMeshToonMaterial=!0,fX.prototype.copy=function(a){return ba.prototype.copy.call(this,a),this.color.copy(a.color),this.map=a.map,this.gradientMap=a.gradientMap,this.lightMap=a.lightMap,this.lightMapIntensity=a.lightMapIntensity,this.aoMap=a.aoMap,this.aoMapIntensity=a.aoMapIntensity,this.emissive.copy(a.emissive),this.emissiveMap=a.emissiveMap,this.emissiveIntensity=a.emissiveIntensity,this.bumpMap=a.bumpMap,this.bumpScale=a.bumpScale,this.normalMap=a.normalMap,this.normalMapType=a.normalMapType,this.normalScale.copy(a.normalScale),this.displacementMap=a.displacementMap,this.displacementScale=a.displacementScale,this.displacementBias=a.displacementBias,this.alphaMap=a.alphaMap,this.wireframe=a.wireframe,this.wireframeLinewidth=a.wireframeLinewidth,this.wireframeLinecap=a.wireframeLinecap,this.wireframeLinejoin=a.wireframeLinejoin,this.skinning=a.skinning,this.morphTargets=a.morphTargets,this.morphNormals=a.morphNormals,this},fY.prototype=Object.create(ba.prototype),fY.prototype.constructor=fY,fY.prototype.isMeshNormalMaterial=!0,fY.prototype.copy=function(a){return ba.prototype.copy.call(this,a),this.bumpMap=a.bumpMap,this.bumpScale=a.bumpScale,this.normalMap=a.normalMap,this.normalMapType=a.normalMapType,this.normalScale.copy(a.normalScale),this.displacementMap=a.displacementMap,this.displacementScale=a.displacementScale,this.displacementBias=a.displacementBias,this.wireframe=a.wireframe,this.wireframeLinewidth=a.wireframeLinewidth,this.skinning=a.skinning,this.morphTargets=a.morphTargets,this.morphNormals=a.morphNormals,this},fZ.prototype=Object.create(ba.prototype),fZ.prototype.constructor=fZ,fZ.prototype.isMeshLambertMaterial=!0,fZ.prototype.copy=function(a){return ba.prototype.copy.call(this,a),this.color.copy(a.color),this.map=a.map,this.lightMap=a.lightMap,this.lightMapIntensity=a.lightMapIntensity,this.aoMap=a.aoMap,this.aoMapIntensity=a.aoMapIntensity,this.emissive.copy(a.emissive),this.emissiveMap=a.emissiveMap,this.emissiveIntensity=a.emissiveIntensity,this.specularMap=a.specularMap,this.alphaMap=a.alphaMap,this.envMap=a.envMap,this.combine=a.combine,this.reflectivity=a.reflectivity,this.refractionRatio=a.refractionRatio,this.wireframe=a.wireframe,this.wireframeLinewidth=a.wireframeLinewidth,this.wireframeLinecap=a.wireframeLinecap,this.wireframeLinejoin=a.wireframeLinejoin,this.skinning=a.skinning,this.morphTargets=a.morphTargets,this.morphNormals=a.morphNormals,this},f$.prototype=Object.create(ba.prototype),f$.prototype.constructor=f$,f$.prototype.isMeshMatcapMaterial=!0,f$.prototype.copy=function(a){return ba.prototype.copy.call(this,a),this.defines={MATCAP:""},this.color.copy(a.color),this.matcap=a.matcap,this.map=a.map,this.bumpMap=a.bumpMap,this.bumpScale=a.bumpScale,this.normalMap=a.normalMap,this.normalMapType=a.normalMapType,this.normalScale.copy(a.normalScale),this.displacementMap=a.displacementMap,this.displacementScale=a.displacementScale,this.displacementBias=a.displacementBias,this.alphaMap=a.alphaMap,this.skinning=a.skinning,this.morphTargets=a.morphTargets,this.morphNormals=a.morphNormals,this},f_.prototype=Object.create(eq.prototype),f_.prototype.constructor=f_,f_.prototype.isLineDashedMaterial=!0,f_.prototype.copy=function(a){return eq.prototype.copy.call(this,a),this.scale=a.scale,this.dashSize=a.dashSize,this.gapSize=a.gapSize,this};var f0=Object.freeze({__proto__:null,ShadowMaterial:fS,SpriteMaterial:dZ,RawShaderMaterial:fT,ShaderMaterial:bW,PointsMaterial:eB,MeshPhysicalMaterial:fV,MeshStandardMaterial:fU,MeshPhongMaterial:fW,MeshToonMaterial:fX,MeshNormalMaterial:fY,MeshLambertMaterial:fZ,MeshDepthMaterial:dG,MeshDistanceMaterial:dH,MeshBasicMaterial:bb,MeshMatcapMaterial:f$,LineDashedMaterial:f_,LineBasicMaterial:eq,Material:ba});let f1={arraySlice:function(a,b,c){return f1.isTypedArray(a)?new a.constructor(a.subarray(b,void 0!==c?c:a.length)):a.slice(b,c)},convertArray:function(a,b,c){return a&&(c||a.constructor!==b)?"number"==typeof b.BYTES_PER_ELEMENT?new b(a):Array.prototype.slice.call(a):a},isTypedArray:function(a){return ArrayBuffer.isView(a)&&!(a instanceof DataView)},getKeyframeOrder:function(a){let b=a.length,c=Array(b);for(let d=0;d!==b;++d)c[d]=d;return c.sort(function(b,c){return a[b]-a[c]}),c},sortedArray:function(a,b,c){let d=a.length,e=new a.constructor(d);for(let f=0,g=0;g!==d;++f){let h=c[f]*b;for(let i=0;i!==b;++i)e[g++]=a[h+i]}return e},flattenJSON:function(a,b,c,d){let e=1,f=a[0];for(;void 0!==f&& void 0===f[d];)f=a[e++];if(void 0===f)return;let g=f[d];if(void 0!==g){if(Array.isArray(g))do void 0!==(g=f[d])&&(b.push(f.time),c.push.apply(c,g)),f=a[e++];while(void 0!==f);else if(void 0!==g.toArray)do void 0!==(g=f[d])&&(b.push(f.time),g.toArray(c,c.length)),f=a[e++];while(void 0!==f);else do void 0!==(g=f[d])&&(b.push(f.time),c.push(g)),f=a[e++];while(void 0!==f)}},subclip:function(a,b,c,d,e){e=e||30;let f=a.clone();f.name=b;let g=[];for(let h=0;h<f.tracks.length;++h){let i=f.tracks[h],j=i.getValueSize(),k=[],l=[];for(let m=0;m<i.times.length;++m){let n=i.times[m]*e;if(!(n<c)&&!(n>=d)){k.push(i.times[m]);for(let o=0;o<j;++o)l.push(i.values[m*j+o])}}0!==k.length&&(i.times=f1.convertArray(k,i.times.constructor),i.values=f1.convertArray(l,i.values.constructor),g.push(i))}f.tracks=g;let p=1/0;for(let q=0;q<f.tracks.length;++q)p>f.tracks[q].times[0]&&(p=f.tracks[q].times[0]);for(let r=0;r<f.tracks.length;++r)f.tracks[r].shift(-1*p);return f.resetDuration(),f},makeClipAdditive:function(a,b,c,d){void 0===b&&(b=0),void 0===c&&(c=a),(void 0===d||d<=0)&&(d=30);let e=c.tracks.length,f=b/d;for(let g=0;g<e;++g){let h=c.tracks[g],i=h.ValueTypeName;if("bool"===i||"string"===i)continue;let j=a.tracks.find(function(a){return a.name===h.name&&a.ValueTypeName===i});if(void 0===j)continue;let k=0,l=h.getValueSize();h.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(k=l/3);let m=0,n=j.getValueSize();j.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(m=n/3);let o=h.times.length-1,p;if(f<=h.times[0]){let q=k,r=l-k;p=f1.arraySlice(h.values,q,r)}else if(f>=h.times[o]){let s=o*l+k,t=s+l-k;p=f1.arraySlice(h.values,s,t)}else{let u=h.createInterpolant(),v=k,w=l-k;u.evaluate(f),p=f1.arraySlice(u.resultBuffer,v,w)}if("quaternion"===i){let x=new N().fromArray(p).normalize().conjugate();x.toArray(p)}let y=j.times.length;for(let z=0;z<y;++z){let A=z*n+m;if("quaternion"===i)N.multiplyQuaternionsFlat(j.values,A,p,0,j.values,A);else{let B=n-2*m;for(let C=0;C<B;++C)j.values[A+C]-=p[C]}}}return a.blendMode=2501,a}};function f2(a,b,c,d){this.parameterPositions=a,this._cachedIndex=0,this.resultBuffer=void 0!==d?d:new b.constructor(c),this.sampleValues=b,this.valueSize=c}function f3(a,b,c,d){f2.call(this,a,b,c,d),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0}function f4(a,b,c,d){f2.call(this,a,b,c,d)}function f5(a,b,c,d){f2.call(this,a,b,c,d)}function f6(a,b,c,d){if(void 0===a)throw Error("THREE.KeyframeTrack: track name is undefined");if(void 0===b||0===b.length)throw Error("THREE.KeyframeTrack: no keyframes in track named "+a);this.name=a,this.times=f1.convertArray(b,this.TimeBufferType),this.values=f1.convertArray(c,this.ValueBufferType),this.setInterpolation(d||this.DefaultInterpolation)}function f7(a,b,c){f6.call(this,a,b,c)}function f8(a,b,c,d){f6.call(this,a,b,c,d)}function f9(a,b,c,d){f6.call(this,a,b,c,d)}function ga(a,b,c,d){f2.call(this,a,b,c,d)}function gb(a,b,c,d){f6.call(this,a,b,c,d)}function gc(a,b,c,d){f6.call(this,a,b,c,d)}function gd(a,b,c,d){f6.call(this,a,b,c,d)}function ge(a,b,c,d){this.name=a,this.tracks=c,this.duration=void 0!==b?b:-1,this.blendMode=void 0!==d?d:2500,this.uuid=D.generateUUID(),this.duration<0&&this.resetDuration()}function gf(a){if(void 0===a.type)throw Error("THREE.KeyframeTrack: track type undefined, can not parse");let b=function(a){switch(a.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return f9;case"vector":case"vector2":case"vector3":case"vector4":return gd;case"color":return f8;case"quaternion":return gb;case"bool":case"boolean":return f7;case"string":return gc}throw Error("THREE.KeyframeTrack: Unsupported typeName: "+a)}(a.type);if(void 0===a.times){let c=[],d=[];f1.flattenJSON(a.keys,c,d,"value"),a.times=c,a.values=d}return void 0!==b.parse?b.parse(a):new b(a.name,a.times,a.values,a.interpolation)}Object.assign(f2.prototype,{evaluate:function(a){let b=this.parameterPositions,c=this._cachedIndex,d=b[c],e=b[c-1];validate_interval:{seek:{let f;linear_scan:{forward_scan:if(!(a<d)){for(let g=c+2;;){if(void 0===d){if(a<e)break forward_scan;return c=b.length,this._cachedIndex=c,this.afterEnd_(c-1,a,e)}if(c===g)break;if(e=d,a<(d=b[++c]))break seek}f=b.length;break linear_scan}if(!(a>=e)){let h=b[1];a<h&&(c=2,e=h);for(let i=c-2;;){if(void 0===e)return this._cachedIndex=0,this.beforeStart_(0,a,d);if(c===i)break;if(d=e,a>=(e=b[--c-1]))break seek}f=c,c=0;break linear_scan}break validate_interval}for(;c<f;){let j=c+f>>>1;a<b[j]?f=j:c=j+1}if(d=b[c],e=b[c-1],void 0===e)return this._cachedIndex=0,this.beforeStart_(0,a,d);if(void 0===d)return c=b.length,this._cachedIndex=c,this.afterEnd_(c-1,e,a)}this._cachedIndex=c,this.intervalChanged_(c,e,d)}return this.interpolate_(c,e,a,d)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(a){let b=this.resultBuffer,c=this.sampleValues,d=this.valueSize,e=a*d;for(let f=0;f!==d;++f)b[f]=c[e+f];return b},interpolate_:function(){throw Error("call to abstract method")},intervalChanged_:function(){}}),Object.assign(f2.prototype,{beforeStart_:f2.prototype.copySampleValue_,afterEnd_:f2.prototype.copySampleValue_}),f3.prototype=Object.assign(Object.create(f2.prototype),{constructor:f3,DefaultSettings_:{endingStart:2400,endingEnd:2400},intervalChanged_:function(a,b,c){let d=this.parameterPositions,e=a-2,f=a+1,g=d[e],h=d[f];if(void 0===g)switch(this.getSettings_().endingStart){case 2401:e=a,g=2*b-c;break;case 2402:e=d.length-2,g=b+d[e]-d[e+1];break;default:e=a,g=c}if(void 0===h)switch(this.getSettings_().endingEnd){case 2401:f=a,h=2*c-b;break;case 2402:f=1,h=c+d[1]-d[0];break;default:f=a-1,h=b}let i=(c-b)*.5,j=this.valueSize;this._weightPrev=i/(b-g),this._weightNext=i/(h-c),this._offsetPrev=e*j,this._offsetNext=f*j},interpolate_:function(a,b,c,d){let e=this.resultBuffer,f=this.sampleValues,g=this.valueSize,h=a*g,i=h-g,j=this._offsetPrev,k=this._offsetNext,l=this._weightPrev,m=this._weightNext,n=(c-b)/(d-b),o=n*n,p=o*n,q=-l*p+2*l*o-l*n,r=(1+l)*p+(-1.5-2*l)*o+(-.5+l)*n+1,s=(-1-m)*p+(1.5+m)*o+.5*n,t=m*p-m*o;for(let u=0;u!==g;++u)e[u]=q*f[j+u]+r*f[i+u]+s*f[h+u]+t*f[k+u];return e}}),f4.prototype=Object.assign(Object.create(f2.prototype),{constructor:f4,interpolate_:function(a,b,c,d){let e=this.resultBuffer,f=this.sampleValues,g=this.valueSize,h=a*g,i=h-g,j=(c-b)/(d-b),k=1-j;for(let l=0;l!==g;++l)e[l]=f[i+l]*k+f[h+l]*j;return e}}),f5.prototype=Object.assign(Object.create(f2.prototype),{constructor:f5,interpolate_:function(a){return this.copySampleValue_(a-1)}}),Object.assign(f6,{toJSON:function(a){let b=a.constructor,c;if(void 0!==b.toJSON)c=b.toJSON(a);else{c={name:a.name,times:f1.convertArray(a.times,Array),values:f1.convertArray(a.values,Array)};let d=a.getInterpolation();d!==a.DefaultInterpolation&&(c.interpolation=d)}return c.type=a.ValueTypeName,c}}),Object.assign(f6.prototype,{constructor:f6,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:t,InterpolantFactoryMethodDiscrete:function(a){return new f5(this.times,this.values,this.getValueSize(),a)},InterpolantFactoryMethodLinear:function(a){return new f4(this.times,this.values,this.getValueSize(),a)},InterpolantFactoryMethodSmooth:function(a){return new f3(this.times,this.values,this.getValueSize(),a)},setInterpolation:function(a){let b;switch(a){case s:b=this.InterpolantFactoryMethodDiscrete;break;case t:b=this.InterpolantFactoryMethodLinear;break;case 2302:b=this.InterpolantFactoryMethodSmooth}if(void 0===b){let c="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(a!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw Error(c)}return console.warn("THREE.KeyframeTrack:",c),this}return this.createInterpolant=b,this},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return s;case this.InterpolantFactoryMethodLinear:return t;case this.InterpolantFactoryMethodSmooth:return 2302}},getValueSize:function(){return this.values.length/this.times.length},shift:function(a){if(0!==a){let b=this.times;for(let c=0,d=b.length;c!==d;++c)b[c]+=a}return this},scale:function(a){if(1!==a){let b=this.times;for(let c=0,d=b.length;c!==d;++c)b[c]*=a}return this},trim:function(a,b){let c=this.times,d=c.length,e=0,f=d-1;for(;e!==d&&c[e]<a;)++e;for(;-1!==f&&c[f]>b;)--f;if(++f,0!==e||f!==d){e>=f&&(e=(f=Math.max(f,1))-1);let g=this.getValueSize();this.times=f1.arraySlice(c,e,f),this.values=f1.arraySlice(this.values,e*g,f*g)}return this},validate:function(){let a=!0,b=this.getValueSize();b-Math.floor(b)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),a=!1);let c=this.times,d=this.values,e=c.length;0===e&&(console.error("THREE.KeyframeTrack: Track is empty.",this),a=!1);let f=null;for(let g=0;g!==e;g++){let h=c[g];if("number"==typeof h&&isNaN(h)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,g,h),a=!1;break}if(null!==f&&f>h){console.error("THREE.KeyframeTrack: Out of order keys.",this,g,h,f),a=!1;break}f=h}if(void 0!==d&&f1.isTypedArray(d))for(let i=0,j=d.length;i!==j;++i){let k=d[i];if(isNaN(k)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,i,k),a=!1;break}}return a},optimize:function(){let a=f1.arraySlice(this.times),b=f1.arraySlice(this.values),c=this.getValueSize(),d=2302===this.getInterpolation(),e=a.length-1,f=1;for(let g=1;g<e;++g){let h=!1,i=a[g],j=a[g+1];if(i!==j&&(1!==g||i!==i[0])){if(d)h=!0;else{let k=g*c,l=k-c,m=k+c;for(let n=0;n!==c;++n){let o=b[k+n];if(o!==b[l+n]||o!==b[m+n]){h=!0;break}}}}if(h){if(g!==f){a[f]=a[g];let p=g*c,q=f*c;for(let r=0;r!==c;++r)b[q+r]=b[p+r]}++f}}if(e>0){a[f]=a[e];for(let s=e*c,t=f*c,u=0;u!==c;++u)b[t+u]=b[s+u];++f}return f!==a.length?(this.times=f1.arraySlice(a,0,f),this.values=f1.arraySlice(b,0,f*c)):(this.times=a,this.values=b),this},clone:function(){let a=f1.arraySlice(this.times,0),b=f1.arraySlice(this.values,0),c=this.constructor,d=new c(this.name,a,b);return d.createInterpolant=this.createInterpolant,d}}),f7.prototype=Object.assign(Object.create(f6.prototype),{constructor:f7,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:s,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),f8.prototype=Object.assign(Object.create(f6.prototype),{constructor:f8,ValueTypeName:"color"}),f9.prototype=Object.assign(Object.create(f6.prototype),{constructor:f9,ValueTypeName:"number"}),ga.prototype=Object.assign(Object.create(f2.prototype),{constructor:ga,interpolate_:function(a,b,c,d){let e=this.resultBuffer,f=this.sampleValues,g=this.valueSize,h=(c-b)/(d-b),i=a*g;for(let j=i+g;i!==j;i+=4)N.slerpFlat(e,0,f,i-g,f,i,h);return e}}),gb.prototype=Object.assign(Object.create(f6.prototype),{constructor:gb,ValueTypeName:"quaternion",DefaultInterpolation:t,InterpolantFactoryMethodLinear:function(a){return new ga(this.times,this.values,this.getValueSize(),a)},InterpolantFactoryMethodSmooth:void 0}),gc.prototype=Object.assign(Object.create(f6.prototype),{constructor:gc,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:s,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),gd.prototype=Object.assign(Object.create(f6.prototype),{constructor:gd,ValueTypeName:"vector"}),Object.assign(ge,{parse:function(a){let b=[],c=a.tracks,d=1/(a.fps||1);for(let e=0,f=c.length;e!==f;++e)b.push(gf(c[e]).scale(d));return new ge(a.name,a.duration,b,a.blendMode)},toJSON:function(a){let b=[],c=a.tracks,d={name:a.name,duration:a.duration,tracks:b,uuid:a.uuid,blendMode:a.blendMode};for(let e=0,f=c.length;e!==f;++e)b.push(f6.toJSON(c[e]));return d},CreateFromMorphTargetSequence:function(a,b,c,d){let e=b.length,f=[];for(let g=0;g<e;g++){let h=[],i=[];h.push((g+e-1)%e,g,(g+1)%e),i.push(0,1,0);let j=f1.getKeyframeOrder(h);h=f1.sortedArray(h,1,j),i=f1.sortedArray(i,1,j),d||0!==h[0]||(h.push(e),i.push(i[0])),f.push(new f9(".morphTargetInfluences["+b[g].name+"]",h,i).scale(1/c))}return new ge(a,-1,f)},findByName:function(a,b){let c=a;if(!Array.isArray(a)){let d=a;c=d.geometry&&d.geometry.animations||d.animations}for(let e=0;e<c.length;e++)if(c[e].name===b)return c[e];return null},CreateClipsFromMorphTargetSequences:function(a,b,c){let d={},e=/^([\w-]*?)([\d]+)$/;for(let f=0,g=a.length;f<g;f++){let h=a[f],i=h.name.match(e);if(i&&i.length>1){let j=i[1],k=d[j];k||(d[j]=k=[]),k.push(h)}}let l=[];for(let m in d)l.push(ge.CreateFromMorphTargetSequence(m,d[m],b,c));return l},parseAnimation:function(a,b){if(!a)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;let c=function(a,b,c,d,e){if(0!==c.length){let f=[],g=[];f1.flattenJSON(c,f,g,d),0!==f.length&&e.push(new a(b,f,g))}},d=[],e=a.name||"default",f=a.fps||30,g=a.blendMode,h=a.length|| -1,i=a.hierarchy||[];for(let j=0;j<i.length;j++){let k=i[j].keys;if(k&&0!==k.length){if(k[0].morphTargets){let l={},m;for(m=0;m<k.length;m++)if(k[m].morphTargets)for(let n=0;n<k[m].morphTargets.length;n++)l[k[m].morphTargets[n]]=-1;for(let o in l){let p=[],q=[];for(let r=0;r!==k[m].morphTargets.length;++r){let s=k[m];p.push(s.time),q.push(s.morphTarget===o?1:0)}d.push(new f9(".morphTargetInfluence["+o+"]",p,q))}h=l.length*(f||1)}else{let t=".bones["+b[j].name+"]";c(gd,t+".position",k,"pos",d),c(gb,t+".quaternion",k,"rot",d),c(gd,t+".scale",k,"scl",d)}}}if(0===d.length)return null;let u=new ge(e,h,d,g);return u}}),Object.assign(ge.prototype,{resetDuration:function(){let a=this.tracks,b=0;for(let c=0,d=a.length;c!==d;++c){let e=this.tracks[c];b=Math.max(b,e.times[e.times.length-1])}return this.duration=b,this},trim:function(){for(let a=0;a<this.tracks.length;a++)this.tracks[a].trim(0,this.duration);return this},validate:function(){let a=!0;for(let b=0;b<this.tracks.length;b++)a=a&&this.tracks[b].validate();return a},optimize:function(){for(let a=0;a<this.tracks.length;a++)this.tracks[a].optimize();return this},clone:function(){let a=[];for(let b=0;b<this.tracks.length;b++)a.push(this.tracks[b].clone());return new ge(this.name,this.duration,a,this.blendMode)}});let gg={enabled:!1,files:{},add:function(a,b){!1!==this.enabled&&(this.files[a]=b)},get:function(a){if(!1!==this.enabled)return this.files[a]},remove:function(a){delete this.files[a]},clear:function(){this.files={}}},gh=new function a(b,c,d){let e=this,f=!1,g=0,h=0,i,j=[];this.onStart=void 0,this.onLoad=b,this.onProgress=c,this.onError=d,this.itemStart=function(a){h++,!1===f&& void 0!==e.onStart&&e.onStart(a,g,h),f=!0},this.itemEnd=function(a){g++,void 0!==e.onProgress&&e.onProgress(a,g,h),g===h&&(f=!1,void 0!==e.onLoad&&e.onLoad())},this.itemError=function(a){void 0!==e.onError&&e.onError(a)},this.resolveURL=function(a){return i?i(a):a},this.setURLModifier=function(a){return i=a,this},this.addHandler=function(a,b){return j.push(a,b),this},this.removeHandler=function(a){let b=j.indexOf(a);return -1!==b&&j.splice(b,2),this},this.getHandler=function(a){for(let b=0,c=j.length;b<c;b+=2){let d=j[b],e=j[b+1];if(d.global&&(d.lastIndex=0),d.test(a))return e}return null}};function gi(a){this.manager=void 0!==a?a:gh,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}Object.assign(gi.prototype,{load:function(){},loadAsync:function(a,b){let c=this;return new Promise(function(d,e){c.load(a,d,b,e)})},parse:function(){},setCrossOrigin:function(a){return this.crossOrigin=a,this},setWithCredentials:function(a){return this.withCredentials=a,this},setPath:function(a){return this.path=a,this},setResourcePath:function(a){return this.resourcePath=a,this},setRequestHeader:function(a){return this.requestHeader=a,this}});let gj={};function gk(a){gi.call(this,a)}function gl(a){gi.call(this,a)}function gm(a){gi.call(this,a)}function gn(a){gi.call(this,a)}function go(a){gi.call(this,a)}function gp(a){gi.call(this,a)}function gq(a){gi.call(this,a)}function gr(){this.type="Curve",this.arcLengthDivisions=200}function gs(a,b,c,d,e,f,g,h){gr.call(this),this.type="EllipseCurve",this.aX=a||0,this.aY=b||0,this.xRadius=c||1,this.yRadius=d||1,this.aStartAngle=e||0,this.aEndAngle=f||2*Math.PI,this.aClockwise=g||!1,this.aRotation=h||0}function gt(a,b,c,d,e,f){gs.call(this,a,b,c,c,d,e,f),this.type="ArcCurve"}function gu(){let a=0,b=0,c=0,d=0;function e(e,f,g,h){a=e,b=g,c=-3*e+3*f-2*g-h,d=2*e-2*f+g+h}return{initCatmullRom:function(a,b,c,d,f){e(b,c,f*(c-a),f*(d-b))},initNonuniformCatmullRom:function(a,b,c,d,f,g,h){let i=(b-a)/f-(c-a)/(f+g)+(c-b)/g,j=(c-b)/g-(d-b)/(g+h)+(d-c)/h;i*=g,j*=g,e(b,c,i,j)},calc:function(e){let f=e*e;return a+b*e+c*f+d*(f*e)}}}gk.prototype=Object.assign(Object.create(gi.prototype),{constructor:gk,load:function(a,b,c,d){void 0===a&&(a=""),void 0!==this.path&&(a=this.path+a),a=this.manager.resolveURL(a);let e=this,f=gg.get(a);if(void 0!==f)return e.manager.itemStart(a),setTimeout(function(){b&&b(f),e.manager.itemEnd(a)},0),f;if(void 0!==gj[a]){gj[a].push({onLoad:b,onProgress:c,onError:d});return}let g=a.match(/^data:(.*?)(;base64)?,(.*)$/),h;if(g){let i=g[1],j=!!g[2],k=g[3];k=decodeURIComponent(k),j&&(k=atob(k));try{let l,m=(this.responseType||"").toLowerCase();switch(m){case"arraybuffer":case"blob":let n=new Uint8Array(k.length);for(let o=0;o<k.length;o++)n[o]=k.charCodeAt(o);l="blob"===m?new Blob([n.buffer],{type:i}):n.buffer;break;case"document":let p=new DOMParser;l=p.parseFromString(k,i);break;case"json":l=JSON.parse(k);break;default:l=k}setTimeout(function(){b&&b(l),e.manager.itemEnd(a)},0)}catch(q){setTimeout(function(){d&&d(q),e.manager.itemError(a),e.manager.itemEnd(a)},0)}}else{for(let r in gj[a]=[],gj[a].push({onLoad:b,onProgress:c,onError:d}),(h=new XMLHttpRequest).open("GET",a,!0),h.addEventListener("load",function(b){let c=this.response,d=gj[a];if(delete gj[a],200===this.status||0===this.status){0===this.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),gg.add(a,c);for(let f=0,g=d.length;f<g;f++){let h=d[f];h.onLoad&&h.onLoad(c)}e.manager.itemEnd(a)}else{for(let i=0,j=d.length;i<j;i++){let k=d[i];k.onError&&k.onError(b)}e.manager.itemError(a),e.manager.itemEnd(a)}},!1),h.addEventListener("progress",function(b){let c=gj[a];for(let d=0,e=c.length;d<e;d++){let f=c[d];f.onProgress&&f.onProgress(b)}},!1),h.addEventListener("error",function(b){let c=gj[a];delete gj[a];for(let d=0,f=c.length;d<f;d++){let g=c[d];g.onError&&g.onError(b)}e.manager.itemError(a),e.manager.itemEnd(a)},!1),h.addEventListener("abort",function(b){let c=gj[a];delete gj[a];for(let d=0,f=c.length;d<f;d++){let g=c[d];g.onError&&g.onError(b)}e.manager.itemError(a),e.manager.itemEnd(a)},!1),void 0!==this.responseType&&(h.responseType=this.responseType),void 0!==this.withCredentials&&(h.withCredentials=this.withCredentials),h.overrideMimeType&&h.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain"),this.requestHeader)h.setRequestHeader(r,this.requestHeader[r]);h.send(null)}return e.manager.itemStart(a),h},setResponseType:function(a){return this.responseType=a,this},setMimeType:function(a){return this.mimeType=a,this}}),gl.prototype=Object.assign(Object.create(gi.prototype),{constructor:gl,load:function(a,b,c,d){let e=this,f=new gk(e.manager);f.setPath(e.path),f.setRequestHeader(e.requestHeader),f.setWithCredentials(e.withCredentials),f.load(a,function(c){try{b(e.parse(JSON.parse(c)))}catch(f){d?d(f):console.error(f),e.manager.itemError(a)}},c,d)},parse:function(a){let b=[];for(let c=0;c<a.length;c++){let d=ge.parse(a[c]);b.push(d)}return b}}),gm.prototype=Object.assign(Object.create(gi.prototype),{constructor:gm,load:function(a,b,c,d){let e=this,f=[],g=new eJ;g.image=f;let h=new gk(this.manager);h.setPath(this.path),h.setResponseType("arraybuffer"),h.setRequestHeader(this.requestHeader),h.setWithCredentials(e.withCredentials);let i=0;function j(j){h.load(a[j],function(a){let c=e.parse(a,!0);f[j]={width:c.width,height:c.height,format:c.format,mipmaps:c.mipmaps},6===(i+=1)&&(1===c.mipmapCount&&(g.minFilter=o),g.format=c.format,g.needsUpdate=!0,b&&b(g))},c,d)}if(Array.isArray(a))for(let k=0,l=a.length;k<l;++k)j(k);else h.load(a,function(a){let c=e.parse(a,!0);if(c.isCubemap){let d=c.mipmaps.length/c.mipmapCount;for(let h=0;h<d;h++){f[h]={mipmaps:[]};for(let i=0;i<c.mipmapCount;i++)f[h].mipmaps.push(c.mipmaps[h*c.mipmapCount+i]),f[h].format=c.format,f[h].width=c.width,f[h].height=c.height}}else g.image.width=c.width,g.image.height=c.height,g.mipmaps=c.mipmaps;1===c.mipmapCount&&(g.minFilter=o),g.format=c.format,g.needsUpdate=!0,b&&b(g)},c,d);return g}}),gn.prototype=Object.assign(Object.create(gi.prototype),{constructor:gn,load:function(a,b,c,d){void 0!==this.path&&(a=this.path+a),a=this.manager.resolveURL(a);let e=this,f=gg.get(a);if(void 0!==f)return e.manager.itemStart(a),setTimeout(function(){b&&b(f),e.manager.itemEnd(a)},0),f;let g=document.createElementNS("http://www.w3.org/1999/xhtml","img");function h(){g.removeEventListener("load",h,!1),g.removeEventListener("error",i,!1),gg.add(a,this),b&&b(this),e.manager.itemEnd(a)}function i(b){g.removeEventListener("load",h,!1),g.removeEventListener("error",i,!1),d&&d(b),e.manager.itemError(a),e.manager.itemEnd(a)}return g.addEventListener("load",h,!1),g.addEventListener("error",i,!1),"data:"!==a.substr(0,5)&& void 0!==this.crossOrigin&&(g.crossOrigin=this.crossOrigin),e.manager.itemStart(a),g.src=a,g}}),go.prototype=Object.assign(Object.create(gi.prototype),{constructor:go,load:function(a,b,c,d){let e=new b$,f=new gn(this.manager);f.setCrossOrigin(this.crossOrigin),f.setPath(this.path);let g=0;function h(c){f.load(a[c],function(a){e.images[c]=a,6== ++g&&(e.needsUpdate=!0,b&&b(e))},void 0,d)}for(let i=0;i<a.length;++i)h(i);return e}}),gp.prototype=Object.assign(Object.create(gi.prototype),{constructor:gp,load:function(a,b,c,d){let e=this,f=new b0,g=new gk(this.manager);return g.setResponseType("arraybuffer"),g.setRequestHeader(this.requestHeader),g.setPath(this.path),g.setWithCredentials(e.withCredentials),g.load(a,function(a){let c=e.parse(a);c&&(void 0!==c.image?f.image=c.image:void 0!==c.data&&(f.image.width=c.width,f.image.height=c.height,f.image.data=c.data),f.wrapS=void 0!==c.wrapS?c.wrapS:j,f.wrapT=void 0!==c.wrapT?c.wrapT:j,f.magFilter=void 0!==c.magFilter?c.magFilter:o,f.minFilter=void 0!==c.minFilter?c.minFilter:o,f.anisotropy=void 0!==c.anisotropy?c.anisotropy:1,void 0!==c.format&&(f.format=c.format),void 0!==c.type&&(f.type=c.type),void 0!==c.mipmaps&&(f.mipmaps=c.mipmaps,f.minFilter=q),1===c.mipmapCount&&(f.minFilter=o),f.needsUpdate=!0,b&&b(f,c))},c,d),f}}),gq.prototype=Object.assign(Object.create(gi.prototype),{constructor:gq,load:function(a,b,c,d){let e=new J,f=new gn(this.manager);return f.setCrossOrigin(this.crossOrigin),f.setPath(this.path),f.load(a,function(c){e.image=c;let d=a.search(/\.jpe?g($|\?)/i)>0||0===a.search(/^data\:image\/jpeg/);e.format=d?r:1023,e.needsUpdate=!0,void 0!==b&&b(e)},c,d),e}}),Object.assign(gr.prototype,{getPoint:function(){return console.warn("THREE.Curve: .getPoint() not implemented."),null},getPointAt:function(a,b){let c=this.getUtoTmapping(a);return this.getPoint(c,b)},getPoints:function(a){void 0===a&&(a=5);let b=[];for(let c=0;c<=a;c++)b.push(this.getPoint(c/a));return b},getSpacedPoints:function(a){void 0===a&&(a=5);let b=[];for(let c=0;c<=a;c++)b.push(this.getPointAt(c/a));return b},getLength:function(){let a=this.getLengths();return a[a.length-1]},getLengths:function(a){if(void 0===a&&(a=this.arcLengthDivisions),this.cacheArcLengths&&this.cacheArcLengths.length===a+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;let b=[],c,d=this.getPoint(0),e=0;b.push(0);for(let f=1;f<=a;f++)b.push(e+=(c=this.getPoint(f/a)).distanceTo(d)),d=c;return this.cacheArcLengths=b,b},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(a,b){let c=this.getLengths(),d=0,e=c.length,f;f=b||a*c[e-1];let g=0,h=e-1,i;for(;g<=h;)if((i=c[d=Math.floor(g+(h-g)/2)]-f)<0)g=d+1;else if(i>0)h=d-1;else{h=d;break}if(c[d=h]===f)return d/(e-1);let j=c[d],k=c[d+1],l=(f-j)/(k-j),m=(d+l)/(e-1);return m},getTangent:function(a,b){let c=1e-4,d=a-c,e=a+c;d<0&&(d=0),e>1&&(e=1);let f=this.getPoint(d),g=this.getPoint(e),h=b||(f.isVector2?new E:new O);return h.copy(g).sub(f).normalize(),h},getTangentAt:function(a,b){let c=this.getUtoTmapping(a);return this.getTangent(c,b)},computeFrenetFrames:function(a,b){let c=new O,d=[],e=[],f=[],g=new O,h=new ao;for(let i=0;i<=a;i++){let j=i/a;d[i]=this.getTangentAt(j,new O),d[i].normalize()}e[0]=new O,f[0]=new O;let k=Number.MAX_VALUE,l=Math.abs(d[0].x),m=Math.abs(d[0].y),n=Math.abs(d[0].z);l<=k&&(k=l,c.set(1,0,0)),m<=k&&(k=m,c.set(0,1,0)),n<=k&&c.set(0,0,1),g.crossVectors(d[0],c).normalize(),e[0].crossVectors(d[0],g),f[0].crossVectors(d[0],e[0]);for(let o=1;o<=a;o++){if(e[o]=e[o-1].clone(),f[o]=f[o-1].clone(),g.crossVectors(d[o-1],d[o]),g.length()>Number.EPSILON){g.normalize();let p=Math.acos(D.clamp(d[o-1].dot(d[o]),-1,1));e[o].applyMatrix4(h.makeRotationAxis(g,p))}f[o].crossVectors(d[o],e[o])}if(!0===b){let q=Math.acos(D.clamp(e[0].dot(e[a]),-1,1));q/=a,d[0].dot(g.crossVectors(e[0],e[a]))>0&&(q=-q);for(let r=1;r<=a;r++)e[r].applyMatrix4(h.makeRotationAxis(d[r],q*r)),f[r].crossVectors(d[r],e[r])}return{tangents:d,normals:e,binormals:f}},clone:function(){return new this.constructor().copy(this)},copy:function(a){return this.arcLengthDivisions=a.arcLengthDivisions,this},toJSON:function(){let a={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return a.arcLengthDivisions=this.arcLengthDivisions,a.type=this.type,a},fromJSON:function(a){return this.arcLengthDivisions=a.arcLengthDivisions,this}}),gs.prototype=Object.create(gr.prototype),gs.prototype.constructor=gs,gs.prototype.isEllipseCurve=!0,gs.prototype.getPoint=function(a,b){let c=b||new E,d=2*Math.PI,e=this.aEndAngle-this.aStartAngle,f=Math.abs(e)<Number.EPSILON;for(;e<0;)e+=d;for(;e>d;)e-=d;e<Number.EPSILON&&(e=f?0:d),!0!==this.aClockwise||f||(e===d?e=-d:e-=d);let g=this.aStartAngle+a*e,h=this.aX+this.xRadius*Math.cos(g),i=this.aY+this.yRadius*Math.sin(g);if(0!==this.aRotation){let j=Math.cos(this.aRotation),k=Math.sin(this.aRotation),l=h-this.aX,m=i-this.aY;h=l*j-m*k+this.aX,i=l*k+m*j+this.aY}return c.set(h,i)},gs.prototype.copy=function(a){return gr.prototype.copy.call(this,a),this.aX=a.aX,this.aY=a.aY,this.xRadius=a.xRadius,this.yRadius=a.yRadius,this.aStartAngle=a.aStartAngle,this.aEndAngle=a.aEndAngle,this.aClockwise=a.aClockwise,this.aRotation=a.aRotation,this},gs.prototype.toJSON=function(){let a=gr.prototype.toJSON.call(this);return a.aX=this.aX,a.aY=this.aY,a.xRadius=this.xRadius,a.yRadius=this.yRadius,a.aStartAngle=this.aStartAngle,a.aEndAngle=this.aEndAngle,a.aClockwise=this.aClockwise,a.aRotation=this.aRotation,a},gs.prototype.fromJSON=function(a){return gr.prototype.fromJSON.call(this,a),this.aX=a.aX,this.aY=a.aY,this.xRadius=a.xRadius,this.yRadius=a.yRadius,this.aStartAngle=a.aStartAngle,this.aEndAngle=a.aEndAngle,this.aClockwise=a.aClockwise,this.aRotation=a.aRotation,this},gt.prototype=Object.create(gs.prototype),gt.prototype.constructor=gt,gt.prototype.isArcCurve=!0;let gv=new O,gw=new gu,gx=new gu,gy=new gu;function gz(a,b,c,d){gr.call(this),this.type="CatmullRomCurve3",this.points=a||[],this.closed=b||!1,this.curveType=c||"centripetal",this.tension=void 0!==d?d:.5}function gA(a,b,c,d,e){let f=(d-b)*.5,g=(e-c)*.5,h=a*a;return(2*c-2*d+f+g)*(a*h)+(-3*c+3*d-2*f-g)*h+f*a+c}gz.prototype=Object.create(gr.prototype),gz.prototype.constructor=gz,gz.prototype.isCatmullRomCurve3=!0,gz.prototype.getPoint=function(a,b){let c=b||new O,d=this.points,e=d.length,f=(e-(this.closed?0:1))*a,g=Math.floor(f),h=f-g;this.closed?g+=g>0?0:(Math.floor(Math.abs(g)/e)+1)*e:0===h&&g===e-1&&(g=e-2,h=1);let i,j;this.closed||g>0?i=d[(g-1)%e]:(gv.subVectors(d[0],d[1]).add(d[0]),i=gv);let k=d[g%e],l=d[(g+1)%e];if(this.closed||g+2<e?j=d[(g+2)%e]:(gv.subVectors(d[e-1],d[e-2]).add(d[e-1]),j=gv),"centripetal"===this.curveType||"chordal"===this.curveType){let m="chordal"===this.curveType?.5:.25,n=Math.pow(i.distanceToSquared(k),m),o=Math.pow(k.distanceToSquared(l),m),p=Math.pow(l.distanceToSquared(j),m);o<1e-4&&(o=1),n<1e-4&&(n=o),p<1e-4&&(p=o),gw.initNonuniformCatmullRom(i.x,k.x,l.x,j.x,n,o,p),gx.initNonuniformCatmullRom(i.y,k.y,l.y,j.y,n,o,p),gy.initNonuniformCatmullRom(i.z,k.z,l.z,j.z,n,o,p)}else"catmullrom"===this.curveType&&(gw.initCatmullRom(i.x,k.x,l.x,j.x,this.tension),gx.initCatmullRom(i.y,k.y,l.y,j.y,this.tension),gy.initCatmullRom(i.z,k.z,l.z,j.z,this.tension));return c.set(gw.calc(h),gx.calc(h),gy.calc(h)),c},gz.prototype.copy=function(a){gr.prototype.copy.call(this,a),this.points=[];for(let b=0,c=a.points.length;b<c;b++){let d=a.points[b];this.points.push(d.clone())}return this.closed=a.closed,this.curveType=a.curveType,this.tension=a.tension,this},gz.prototype.toJSON=function(){let a=gr.prototype.toJSON.call(this);a.points=[];for(let b=0,c=this.points.length;b<c;b++){let d=this.points[b];a.points.push(d.toArray())}return a.closed=this.closed,a.curveType=this.curveType,a.tension=this.tension,a},gz.prototype.fromJSON=function(a){gr.prototype.fromJSON.call(this,a),this.points=[];for(let b=0,c=a.points.length;b<c;b++){let d=a.points[b];this.points.push(new O().fromArray(d))}return this.closed=a.closed,this.curveType=a.curveType,this.tension=a.tension,this};function gB(a,b,c,d){var e,f,g,h;return function(a,b){let c=1-a;return c*c*b}(a,b)+(e=a,2*(1-e)*e*(f=c))+(g=a,g*g*(h=d))}function gC(a,b,c,d,e){var f,g,h,i;return function(a,b){let c=1-a;return c*c*c*b}(a,b)+function(a,b){let c=1-a;return 3*c*c*a*b}(a,c)+(f=a,3*(1-f)*f*f*(g=d))+(h=a,h*h*h*(i=e))}function gD(a,b,c,d){gr.call(this),this.type="CubicBezierCurve",this.v0=a||new E,this.v1=b||new E,this.v2=c||new E,this.v3=d||new E}function gE(a,b,c,d){gr.call(this),this.type="CubicBezierCurve3",this.v0=a||new O,this.v1=b||new O,this.v2=c||new O,this.v3=d||new O}function gF(a,b){gr.call(this),this.type="LineCurve",this.v1=a||new E,this.v2=b||new E}function gG(a,b){gr.call(this),this.type="LineCurve3",this.v1=a||new O,this.v2=b||new O}function gH(a,b,c){gr.call(this),this.type="QuadraticBezierCurve",this.v0=a||new E,this.v1=b||new E,this.v2=c||new E}function gI(a,b,c){gr.call(this),this.type="QuadraticBezierCurve3",this.v0=a||new O,this.v1=b||new O,this.v2=c||new O}function gJ(a){gr.call(this),this.type="SplineCurve",this.points=a||[]}gD.prototype=Object.create(gr.prototype),gD.prototype.constructor=gD,gD.prototype.isCubicBezierCurve=!0,gD.prototype.getPoint=function(a,b){let c=b||new E,d=this.v0,e=this.v1,f=this.v2,g=this.v3;return c.set(gC(a,d.x,e.x,f.x,g.x),gC(a,d.y,e.y,f.y,g.y)),c},gD.prototype.copy=function(a){return gr.prototype.copy.call(this,a),this.v0.copy(a.v0),this.v1.copy(a.v1),this.v2.copy(a.v2),this.v3.copy(a.v3),this},gD.prototype.toJSON=function(){let a=gr.prototype.toJSON.call(this);return a.v0=this.v0.toArray(),a.v1=this.v1.toArray(),a.v2=this.v2.toArray(),a.v3=this.v3.toArray(),a},gD.prototype.fromJSON=function(a){return gr.prototype.fromJSON.call(this,a),this.v0.fromArray(a.v0),this.v1.fromArray(a.v1),this.v2.fromArray(a.v2),this.v3.fromArray(a.v3),this},gE.prototype=Object.create(gr.prototype),gE.prototype.constructor=gE,gE.prototype.isCubicBezierCurve3=!0,gE.prototype.getPoint=function(a,b){let c=b||new O,d=this.v0,e=this.v1,f=this.v2,g=this.v3;return c.set(gC(a,d.x,e.x,f.x,g.x),gC(a,d.y,e.y,f.y,g.y),gC(a,d.z,e.z,f.z,g.z)),c},gE.prototype.copy=function(a){return gr.prototype.copy.call(this,a),this.v0.copy(a.v0),this.v1.copy(a.v1),this.v2.copy(a.v2),this.v3.copy(a.v3),this},gE.prototype.toJSON=function(){let a=gr.prototype.toJSON.call(this);return a.v0=this.v0.toArray(),a.v1=this.v1.toArray(),a.v2=this.v2.toArray(),a.v3=this.v3.toArray(),a},gE.prototype.fromJSON=function(a){return gr.prototype.fromJSON.call(this,a),this.v0.fromArray(a.v0),this.v1.fromArray(a.v1),this.v2.fromArray(a.v2),this.v3.fromArray(a.v3),this},gF.prototype=Object.create(gr.prototype),gF.prototype.constructor=gF,gF.prototype.isLineCurve=!0,gF.prototype.getPoint=function(a,b){let c=b||new E;return 1===a?c.copy(this.v2):(c.copy(this.v2).sub(this.v1),c.multiplyScalar(a).add(this.v1)),c},gF.prototype.getPointAt=function(a,b){return this.getPoint(a,b)},gF.prototype.getTangent=function(a,b){let c=b||new E;return c.copy(this.v2).sub(this.v1).normalize(),c},gF.prototype.copy=function(a){return gr.prototype.copy.call(this,a),this.v1.copy(a.v1),this.v2.copy(a.v2),this},gF.prototype.toJSON=function(){let a=gr.prototype.toJSON.call(this);return a.v1=this.v1.toArray(),a.v2=this.v2.toArray(),a},gF.prototype.fromJSON=function(a){return gr.prototype.fromJSON.call(this,a),this.v1.fromArray(a.v1),this.v2.fromArray(a.v2),this},gG.prototype=Object.create(gr.prototype),gG.prototype.constructor=gG,gG.prototype.isLineCurve3=!0,gG.prototype.getPoint=function(a,b){let c=b||new O;return 1===a?c.copy(this.v2):(c.copy(this.v2).sub(this.v1),c.multiplyScalar(a).add(this.v1)),c},gG.prototype.getPointAt=function(a,b){return this.getPoint(a,b)},gG.prototype.copy=function(a){return gr.prototype.copy.call(this,a),this.v1.copy(a.v1),this.v2.copy(a.v2),this},gG.prototype.toJSON=function(){let a=gr.prototype.toJSON.call(this);return a.v1=this.v1.toArray(),a.v2=this.v2.toArray(),a},gG.prototype.fromJSON=function(a){return gr.prototype.fromJSON.call(this,a),this.v1.fromArray(a.v1),this.v2.fromArray(a.v2),this},gH.prototype=Object.create(gr.prototype),gH.prototype.constructor=gH,gH.prototype.isQuadraticBezierCurve=!0,gH.prototype.getPoint=function(a,b){let c=b||new E,d=this.v0,e=this.v1,f=this.v2;return c.set(gB(a,d.x,e.x,f.x),gB(a,d.y,e.y,f.y)),c},gH.prototype.copy=function(a){return gr.prototype.copy.call(this,a),this.v0.copy(a.v0),this.v1.copy(a.v1),this.v2.copy(a.v2),this},gH.prototype.toJSON=function(){let a=gr.prototype.toJSON.call(this);return a.v0=this.v0.toArray(),a.v1=this.v1.toArray(),a.v2=this.v2.toArray(),a},gH.prototype.fromJSON=function(a){return gr.prototype.fromJSON.call(this,a),this.v0.fromArray(a.v0),this.v1.fromArray(a.v1),this.v2.fromArray(a.v2),this},gI.prototype=Object.create(gr.prototype),gI.prototype.constructor=gI,gI.prototype.isQuadraticBezierCurve3=!0,gI.prototype.getPoint=function(a,b){let c=b||new O,d=this.v0,e=this.v1,f=this.v2;return c.set(gB(a,d.x,e.x,f.x),gB(a,d.y,e.y,f.y),gB(a,d.z,e.z,f.z)),c},gI.prototype.copy=function(a){return gr.prototype.copy.call(this,a),this.v0.copy(a.v0),this.v1.copy(a.v1),this.v2.copy(a.v2),this},gI.prototype.toJSON=function(){let a=gr.prototype.toJSON.call(this);return a.v0=this.v0.toArray(),a.v1=this.v1.toArray(),a.v2=this.v2.toArray(),a},gI.prototype.fromJSON=function(a){return gr.prototype.fromJSON.call(this,a),this.v0.fromArray(a.v0),this.v1.fromArray(a.v1),this.v2.fromArray(a.v2),this},gJ.prototype=Object.create(gr.prototype),gJ.prototype.constructor=gJ,gJ.prototype.isSplineCurve=!0,gJ.prototype.getPoint=function(a,b){let c=b||new E,d=this.points,e=(d.length-1)*a,f=Math.floor(e),g=e-f,h=d[0===f?f:f-1],i=d[f],j=d[f>d.length-2?d.length-1:f+1],k=d[f>d.length-3?d.length-1:f+2];return c.set(gA(g,h.x,i.x,j.x,k.x),gA(g,h.y,i.y,j.y,k.y)),c},gJ.prototype.copy=function(a){gr.prototype.copy.call(this,a),this.points=[];for(let b=0,c=a.points.length;b<c;b++){let d=a.points[b];this.points.push(d.clone())}return this},gJ.prototype.toJSON=function(){let a=gr.prototype.toJSON.call(this);a.points=[];for(let b=0,c=this.points.length;b<c;b++){let d=this.points[b];a.points.push(d.toArray())}return a},gJ.prototype.fromJSON=function(a){gr.prototype.fromJSON.call(this,a),this.points=[];for(let b=0,c=a.points.length;b<c;b++){let d=a.points[b];this.points.push(new E().fromArray(d))}return this};var gK=Object.freeze({__proto__:null,ArcCurve:gt,CatmullRomCurve3:gz,CubicBezierCurve:gD,CubicBezierCurve3:gE,EllipseCurve:gs,LineCurve:gF,LineCurve3:gG,QuadraticBezierCurve:gH,QuadraticBezierCurve3:gI,SplineCurve:gJ});function gL(){gr.call(this),this.type="CurvePath",this.curves=[],this.autoClose=!1}function gM(a){gL.call(this),this.type="Path",this.currentPoint=new E,a&&this.setFromPoints(a)}function gN(a){gM.call(this,a),this.uuid=D.generateUUID(),this.type="Shape",this.holes=[]}function gO(a,b){aN.call(this),this.type="Light",this.color=new a7(a),this.intensity=void 0!==b?b:1}function gP(a,b,c){gO.call(this,a,c),this.type="HemisphereLight",this.position.copy(aN.DefaultUp),this.updateMatrix(),this.groundColor=new a7(b)}function gQ(a){this.camera=a,this.bias=0,this.normalBias=0,this.radius=1,this.mapSize=new E(512,512),this.map=null,this.mapPass=null,this.matrix=new ao,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new b3,this._frameExtents=new E(1,1),this._viewportCount=1,this._viewports=[new K(0,0,1,1)]}function gR(){gQ.call(this,new bY(50,1,.5,500)),this.focus=1}function gS(a,b,c,d,e,f){gO.call(this,a,b),this.type="SpotLight",this.position.copy(aN.DefaultUp),this.updateMatrix(),this.target=new aN,Object.defineProperty(this,"power",{get:function(){return this.intensity*Math.PI},set:function(a){this.intensity=a/Math.PI}}),this.distance=void 0!==c?c:0,this.angle=void 0!==d?d:Math.PI/3,this.penumbra=void 0!==e?e:0,this.decay=void 0!==f?f:1,this.shadow=new gR}function gT(){gQ.call(this,new bY(90,1,.5,500)),this._frameExtents=new E(4,2),this._viewportCount=6,this._viewports=[new K(2,1,1,1),new K(0,1,1,1),new K(3,1,1,1),new K(1,1,1,1),new K(3,0,1,1),new K(1,0,1,1)],this._cubeDirections=[new O(1,0,0),new O(-1,0,0),new O(0,0,1),new O(0,0,-1),new O(0,1,0),new O(0,-1,0)],this._cubeUps=[new O(0,1,0),new O(0,1,0),new O(0,1,0),new O(0,1,0),new O(0,0,1),new O(0,0,-1)]}function gU(a,b,c,d){gO.call(this,a,b),this.type="PointLight",Object.defineProperty(this,"power",{get:function(){return 4*this.intensity*Math.PI},set:function(a){this.intensity=a/(4*Math.PI)}}),this.distance=void 0!==c?c:0,this.decay=void 0!==d?d:1,this.shadow=new gT}function gV(a,b,c,d,e,f){bX.call(this),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=void 0!==a?a:-1,this.right=void 0!==b?b:1,this.top=void 0!==c?c:1,this.bottom=void 0!==d?d:-1,this.near=void 0!==e?e:.1,this.far=void 0!==f?f:2e3,this.updateProjectionMatrix()}function gW(){gQ.call(this,new gV(-5,5,5,-5,.5,500))}function gX(a,b){gO.call(this,a,b),this.type="DirectionalLight",this.position.copy(aN.DefaultUp),this.updateMatrix(),this.target=new aN,this.shadow=new gW}function gY(a,b){gO.call(this,a,b),this.type="AmbientLight"}function gZ(a,b,c,d){gO.call(this,a,b),this.type="RectAreaLight",this.width=void 0!==c?c:10,this.height=void 0!==d?d:10}gL.prototype=Object.assign(Object.create(gr.prototype),{constructor:gL,add:function(a){this.curves.push(a)},closePath:function(){let a=this.curves[0].getPoint(0),b=this.curves[this.curves.length-1].getPoint(1);a.equals(b)||this.curves.push(new gF(b,a))},getPoint:function(a){let b=a*this.getLength(),c=this.getCurveLengths(),d=0;for(;d<c.length;){if(c[d]>=b){let e=c[d]-b,f=this.curves[d],g=f.getLength(),h=0===g?0:1-e/g;return f.getPointAt(h)}d++}return null},getLength:function(){let a=this.getCurveLengths();return a[a.length-1]},updateArcLengths:function(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()},getCurveLengths:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;let a=[],b=0;for(let c=0,d=this.curves.length;c<d;c++)a.push(b+=this.curves[c].getLength());return this.cacheLengths=a,a},getSpacedPoints:function(a){void 0===a&&(a=40);let b=[];for(let c=0;c<=a;c++)b.push(this.getPoint(c/a));return this.autoClose&&b.push(b[0]),b},getPoints:function(a){a=a||12;let b=[],c;for(let d=0,e=this.curves;d<e.length;d++){let f=e[d],g=f&&f.isEllipseCurve?2*a:f&&(f.isLineCurve||f.isLineCurve3)?1:f&&f.isSplineCurve?a*f.points.length:a,h=f.getPoints(g);for(let i=0;i<h.length;i++){let j=h[i];c&&c.equals(j)||(b.push(j),c=j)}}return this.autoClose&&b.length>1&&!b[b.length-1].equals(b[0])&&b.push(b[0]),b},copy:function(a){gr.prototype.copy.call(this,a),this.curves=[];for(let b=0,c=a.curves.length;b<c;b++){let d=a.curves[b];this.curves.push(d.clone())}return this.autoClose=a.autoClose,this},toJSON:function(){let a=gr.prototype.toJSON.call(this);a.autoClose=this.autoClose,a.curves=[];for(let b=0,c=this.curves.length;b<c;b++){let d=this.curves[b];a.curves.push(d.toJSON())}return a},fromJSON:function(a){gr.prototype.fromJSON.call(this,a),this.autoClose=a.autoClose,this.curves=[];for(let b=0,c=a.curves.length;b<c;b++){let d=a.curves[b];this.curves.push(new gK[d.type]().fromJSON(d))}return this}}),gM.prototype=Object.assign(Object.create(gL.prototype),{constructor:gM,setFromPoints:function(a){this.moveTo(a[0].x,a[0].y);for(let b=1,c=a.length;b<c;b++)this.lineTo(a[b].x,a[b].y);return this},moveTo:function(a,b){return this.currentPoint.set(a,b),this},lineTo:function(a,b){let c=new gF(this.currentPoint.clone(),new E(a,b));return this.curves.push(c),this.currentPoint.set(a,b),this},quadraticCurveTo:function(a,b,c,d){let e=new gH(this.currentPoint.clone(),new E(a,b),new E(c,d));return this.curves.push(e),this.currentPoint.set(c,d),this},bezierCurveTo:function(a,b,c,d,e,f){let g=new gD(this.currentPoint.clone(),new E(a,b),new E(c,d),new E(e,f));return this.curves.push(g),this.currentPoint.set(e,f),this},splineThru:function(a){let b=[this.currentPoint.clone()].concat(a),c=new gJ(b);return this.curves.push(c),this.currentPoint.copy(a[a.length-1]),this},arc:function(a,b,c,d,e,f){let g=this.currentPoint.x,h=this.currentPoint.y;return this.absarc(a+g,b+h,c,d,e,f),this},absarc:function(a,b,c,d,e,f){return this.absellipse(a,b,c,c,d,e,f),this},ellipse:function(a,b,c,d,e,f,g,h){let i=this.currentPoint.x,j=this.currentPoint.y;return this.absellipse(a+i,b+j,c,d,e,f,g,h),this},absellipse:function(a,b,c,d,e,f,g,h){let i=new gs(a,b,c,d,e,f,g,h);if(this.curves.length>0){let j=i.getPoint(0);j.equals(this.currentPoint)||this.lineTo(j.x,j.y)}this.curves.push(i);let k=i.getPoint(1);return this.currentPoint.copy(k),this},copy:function(a){return gL.prototype.copy.call(this,a),this.currentPoint.copy(a.currentPoint),this},toJSON:function(){let a=gL.prototype.toJSON.call(this);return a.currentPoint=this.currentPoint.toArray(),a},fromJSON:function(a){return gL.prototype.fromJSON.call(this,a),this.currentPoint.fromArray(a.currentPoint),this}}),gN.prototype=Object.assign(Object.create(gM.prototype),{constructor:gN,getPointsHoles:function(a){let b=[];for(let c=0,d=this.holes.length;c<d;c++)b[c]=this.holes[c].getPoints(a);return b},extractPoints:function(a){return{shape:this.getPoints(a),holes:this.getPointsHoles(a)}},copy:function(a){gM.prototype.copy.call(this,a),this.holes=[];for(let b=0,c=a.holes.length;b<c;b++){let d=a.holes[b];this.holes.push(d.clone())}return this},toJSON:function(){let a=gM.prototype.toJSON.call(this);a.uuid=this.uuid,a.holes=[];for(let b=0,c=this.holes.length;b<c;b++){let d=this.holes[b];a.holes.push(d.toJSON())}return a},fromJSON:function(a){gM.prototype.fromJSON.call(this,a),this.uuid=a.uuid,this.holes=[];for(let b=0,c=a.holes.length;b<c;b++){let d=a.holes[b];this.holes.push(new gM().fromJSON(d))}return this}}),gO.prototype=Object.assign(Object.create(aN.prototype),{constructor:gO,isLight:!0,copy:function(a){return aN.prototype.copy.call(this,a),this.color.copy(a.color),this.intensity=a.intensity,this},toJSON:function(a){let b=aN.prototype.toJSON.call(this,a);return b.object.color=this.color.getHex(),b.object.intensity=this.intensity,void 0!==this.groundColor&&(b.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(b.object.distance=this.distance),void 0!==this.angle&&(b.object.angle=this.angle),void 0!==this.decay&&(b.object.decay=this.decay),void 0!==this.penumbra&&(b.object.penumbra=this.penumbra),void 0!==this.shadow&&(b.object.shadow=this.shadow.toJSON()),b}}),gP.prototype=Object.assign(Object.create(gO.prototype),{constructor:gP,isHemisphereLight:!0,copy:function(a){return gO.prototype.copy.call(this,a),this.groundColor.copy(a.groundColor),this}}),Object.assign(gQ.prototype,{_projScreenMatrix:new ao,_lightPositionWorld:new O,_lookTarget:new O,getViewportCount:function(){return this._viewportCount},getFrustum:function(){return this._frustum},updateMatrices:function(a){let b=this.camera,c=this.matrix,d=this._projScreenMatrix,e=this._lookTarget,f=this._lightPositionWorld;f.setFromMatrixPosition(a.matrixWorld),b.position.copy(f),e.setFromMatrixPosition(a.target.matrixWorld),b.lookAt(e),b.updateMatrixWorld(),d.multiplyMatrices(b.projectionMatrix,b.matrixWorldInverse),this._frustum.setFromProjectionMatrix(d),c.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),c.multiply(b.projectionMatrix),c.multiply(b.matrixWorldInverse)},getViewport:function(a){return this._viewports[a]},getFrameExtents:function(){return this._frameExtents},copy:function(a){return this.camera=a.camera.clone(),this.bias=a.bias,this.radius=a.radius,this.mapSize.copy(a.mapSize),this},clone:function(){return new this.constructor().copy(this)},toJSON:function(){let a={};return 0!==this.bias&&(a.bias=this.bias),0!==this.normalBias&&(a.normalBias=this.normalBias),1!==this.radius&&(a.radius=this.radius),(512!==this.mapSize.x||512!==this.mapSize.y)&&(a.mapSize=this.mapSize.toArray()),a.camera=this.camera.toJSON(!1).object,delete a.camera.matrix,a}}),gR.prototype=Object.assign(Object.create(gQ.prototype),{constructor:gR,isSpotLightShadow:!0,updateMatrices:function(a){let b=this.camera,c=2*D.RAD2DEG*a.angle*this.focus,d=this.mapSize.width/this.mapSize.height,e=a.distance||b.far;(c!==b.fov||d!==b.aspect||e!==b.far)&&(b.fov=c,b.aspect=d,b.far=e,b.updateProjectionMatrix()),gQ.prototype.updateMatrices.call(this,a)}}),gS.prototype=Object.assign(Object.create(gO.prototype),{constructor:gS,isSpotLight:!0,copy:function(a){return gO.prototype.copy.call(this,a),this.distance=a.distance,this.angle=a.angle,this.penumbra=a.penumbra,this.decay=a.decay,this.target=a.target.clone(),this.shadow=a.shadow.clone(),this}}),gT.prototype=Object.assign(Object.create(gQ.prototype),{constructor:gT,isPointLightShadow:!0,updateMatrices:function(a,b){void 0===b&&(b=0);let c=this.camera,d=this.matrix,e=this._lightPositionWorld,f=this._lookTarget,g=this._projScreenMatrix;e.setFromMatrixPosition(a.matrixWorld),c.position.copy(e),f.copy(c.position),f.add(this._cubeDirections[b]),c.up.copy(this._cubeUps[b]),c.lookAt(f),c.updateMatrixWorld(),d.makeTranslation(-e.x,-e.y,-e.z),g.multiplyMatrices(c.projectionMatrix,c.matrixWorldInverse),this._frustum.setFromProjectionMatrix(g)}}),gU.prototype=Object.assign(Object.create(gO.prototype),{constructor:gU,isPointLight:!0,copy:function(a){return gO.prototype.copy.call(this,a),this.distance=a.distance,this.decay=a.decay,this.shadow=a.shadow.clone(),this}}),gV.prototype=Object.assign(Object.create(bX.prototype),{constructor:gV,isOrthographicCamera:!0,copy:function(a,b){return bX.prototype.copy.call(this,a,b),this.left=a.left,this.right=a.right,this.top=a.top,this.bottom=a.bottom,this.near=a.near,this.far=a.far,this.zoom=a.zoom,this.view=null===a.view?null:Object.assign({},a.view),this},setViewOffset:function(a,b,c,d,e,f){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=a,this.view.fullHeight=b,this.view.offsetX=c,this.view.offsetY=d,this.view.width=e,this.view.height=f,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){let a=(this.right-this.left)/(2*this.zoom),b=(this.top-this.bottom)/(2*this.zoom),c=(this.right+this.left)/2,d=(this.top+this.bottom)/2,e=c-a,f=c+a,g=d+b,h=d-b;if(null!==this.view&&this.view.enabled){let i=(this.right-this.left)/this.view.fullWidth/this.zoom,j=(this.top-this.bottom)/this.view.fullHeight/this.zoom;e+=i*this.view.offsetX,f=e+i*this.view.width,g-=j*this.view.offsetY,h=g-j*this.view.height}this.projectionMatrix.makeOrthographic(e,f,g,h,this.near,this.far),this.projectionMatrixInverse.getInverse(this.projectionMatrix)},toJSON:function(a){let b=aN.prototype.toJSON.call(this,a);return b.object.zoom=this.zoom,b.object.left=this.left,b.object.right=this.right,b.object.top=this.top,b.object.bottom=this.bottom,b.object.near=this.near,b.object.far=this.far,null!==this.view&&(b.object.view=Object.assign({},this.view)),b}}),gW.prototype=Object.assign(Object.create(gQ.prototype),{constructor:gW,isDirectionalLightShadow:!0,updateMatrices:function(a){gQ.prototype.updateMatrices.call(this,a)}}),gX.prototype=Object.assign(Object.create(gO.prototype),{constructor:gX,isDirectionalLight:!0,copy:function(a){return gO.prototype.copy.call(this,a),this.target=a.target.clone(),this.shadow=a.shadow.clone(),this}}),gY.prototype=Object.assign(Object.create(gO.prototype),{constructor:gY,isAmbientLight:!0}),gZ.prototype=Object.assign(Object.create(gO.prototype),{constructor:gZ,isRectAreaLight:!0,copy:function(a){return gO.prototype.copy.call(this,a),this.width=a.width,this.height=a.height,this},toJSON:function(a){let b=gO.prototype.toJSON.call(this,a);return b.object.width=this.width,b.object.height=this.height,b}});class g${constructor(){Object.defineProperty(this,"isSphericalHarmonics3",{value:!0}),this.coefficients=[];for(let a=0;a<9;a++)this.coefficients.push(new O)}set(a){for(let b=0;b<9;b++)this.coefficients[b].copy(a[b]);return this}zero(){for(let a=0;a<9;a++)this.coefficients[a].set(0,0,0);return this}getAt(a,b){let c=a.x,d=a.y,e=a.z,f=this.coefficients;return b.copy(f[0]).multiplyScalar(.282095),b.addScaledVector(f[1],.488603*d),b.addScaledVector(f[2],.488603*e),b.addScaledVector(f[3],.488603*c),b.addScaledVector(f[4],1.092548*(c*d)),b.addScaledVector(f[5],1.092548*(d*e)),b.addScaledVector(f[6],.315392*(3*e*e-1)),b.addScaledVector(f[7],1.092548*(c*e)),b.addScaledVector(f[8],.546274*(c*c-d*d)),b}getIrradianceAt(a,b){let c=a.x,d=a.y,e=a.z,f=this.coefficients;return b.copy(f[0]).multiplyScalar(.886227),b.addScaledVector(f[1],1.023328*d),b.addScaledVector(f[2],1.023328*e),b.addScaledVector(f[3],1.023328*c),b.addScaledVector(f[4],.858086*c*d),b.addScaledVector(f[5],.858086*d*e),b.addScaledVector(f[6],.743125*e*e-.247708),b.addScaledVector(f[7],.858086*c*e),b.addScaledVector(f[8],.429043*(c*c-d*d)),b}add(a){for(let b=0;b<9;b++)this.coefficients[b].add(a.coefficients[b]);return this}addScaledSH(a,b){for(let c=0;c<9;c++)this.coefficients[c].addScaledVector(a.coefficients[c],b);return this}scale(a){for(let b=0;b<9;b++)this.coefficients[b].multiplyScalar(a);return this}lerp(a,b){for(let c=0;c<9;c++)this.coefficients[c].lerp(a.coefficients[c],b);return this}equals(a){for(let b=0;b<9;b++)if(!this.coefficients[b].equals(a.coefficients[b]))return!1;return!0}copy(a){return this.set(a.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(a,b){void 0===b&&(b=0);let c=this.coefficients;for(let d=0;d<9;d++)c[d].fromArray(a,b+3*d);return this}toArray(a,b){void 0===a&&(a=[]),void 0===b&&(b=0);let c=this.coefficients;for(let d=0;d<9;d++)c[d].toArray(a,b+3*d);return a}static getBasisAt(a,b){let c=a.x,d=a.y,e=a.z;b[0]=.282095,b[1]=.488603*d,b[2]=.488603*e,b[3]=.488603*c,b[4]=1.092548*c*d,b[5]=1.092548*d*e,b[6]=.315392*(3*e*e-1),b[7]=1.092548*c*e,b[8]=.546274*(c*c-d*d)}}function g_(a,b){gO.call(this,void 0,b),this.type="LightProbe",this.sh=void 0!==a?a:new g$}function g0(a){gi.call(this,a),this.textures={}}g_.prototype=Object.assign(Object.create(gO.prototype),{constructor:g_,isLightProbe:!0,copy:function(a){return gO.prototype.copy.call(this,a),this.sh.copy(a.sh),this},fromJSON:function(a){return this.intensity=a.intensity,this.sh.fromArray(a.sh),this},toJSON:function(a){let b=gO.prototype.toJSON.call(this,a);return b.object.sh=this.sh.toArray(),b}}),g0.prototype=Object.assign(Object.create(gi.prototype),{constructor:g0,load:function(a,b,c,d){let e=this,f=new gk(e.manager);f.setPath(e.path),f.setRequestHeader(e.requestHeader),f.setWithCredentials(e.withCredentials),f.load(a,function(c){try{b(e.parse(JSON.parse(c)))}catch(f){d?d(f):console.error(f),e.manager.itemError(a)}},c,d)},parse:function(a){let b=this.textures;function c(a){return void 0===b[a]&&console.warn("THREE.MaterialLoader: Undefined texture",a),b[a]}let d=new f0[a.type];if(void 0!==a.uuid&&(d.uuid=a.uuid),void 0!==a.name&&(d.name=a.name),void 0!==a.color&&d.color.setHex(a.color),void 0!==a.roughness&&(d.roughness=a.roughness),void 0!==a.metalness&&(d.metalness=a.metalness),void 0!==a.sheen&&(d.sheen=new a7().setHex(a.sheen)),void 0!==a.emissive&&d.emissive.setHex(a.emissive),void 0!==a.specular&&d.specular.setHex(a.specular),void 0!==a.shininess&&(d.shininess=a.shininess),void 0!==a.clearcoat&&(d.clearcoat=a.clearcoat),void 0!==a.clearcoatRoughness&&(d.clearcoatRoughness=a.clearcoatRoughness),void 0!==a.fog&&(d.fog=a.fog),void 0!==a.flatShading&&(d.flatShading=a.flatShading),void 0!==a.blending&&(d.blending=a.blending),void 0!==a.combine&&(d.combine=a.combine),void 0!==a.side&&(d.side=a.side),void 0!==a.opacity&&(d.opacity=a.opacity),void 0!==a.transparent&&(d.transparent=a.transparent),void 0!==a.alphaTest&&(d.alphaTest=a.alphaTest),void 0!==a.depthTest&&(d.depthTest=a.depthTest),void 0!==a.depthWrite&&(d.depthWrite=a.depthWrite),void 0!==a.colorWrite&&(d.colorWrite=a.colorWrite),void 0!==a.stencilWrite&&(d.stencilWrite=a.stencilWrite),void 0!==a.stencilWriteMask&&(d.stencilWriteMask=a.stencilWriteMask),void 0!==a.stencilFunc&&(d.stencilFunc=a.stencilFunc),void 0!==a.stencilRef&&(d.stencilRef=a.stencilRef),void 0!==a.stencilFuncMask&&(d.stencilFuncMask=a.stencilFuncMask),void 0!==a.stencilFail&&(d.stencilFail=a.stencilFail),void 0!==a.stencilZFail&&(d.stencilZFail=a.stencilZFail),void 0!==a.stencilZPass&&(d.stencilZPass=a.stencilZPass),void 0!==a.wireframe&&(d.wireframe=a.wireframe),void 0!==a.wireframeLinewidth&&(d.wireframeLinewidth=a.wireframeLinewidth),void 0!==a.wireframeLinecap&&(d.wireframeLinecap=a.wireframeLinecap),void 0!==a.wireframeLinejoin&&(d.wireframeLinejoin=a.wireframeLinejoin),void 0!==a.rotation&&(d.rotation=a.rotation),1!==a.linewidth&&(d.linewidth=a.linewidth),void 0!==a.dashSize&&(d.dashSize=a.dashSize),void 0!==a.gapSize&&(d.gapSize=a.gapSize),void 0!==a.scale&&(d.scale=a.scale),void 0!==a.polygonOffset&&(d.polygonOffset=a.polygonOffset),void 0!==a.polygonOffsetFactor&&(d.polygonOffsetFactor=a.polygonOffsetFactor),void 0!==a.polygonOffsetUnits&&(d.polygonOffsetUnits=a.polygonOffsetUnits),void 0!==a.skinning&&(d.skinning=a.skinning),void 0!==a.morphTargets&&(d.morphTargets=a.morphTargets),void 0!==a.morphNormals&&(d.morphNormals=a.morphNormals),void 0!==a.dithering&&(d.dithering=a.dithering),void 0!==a.vertexTangents&&(d.vertexTangents=a.vertexTangents),void 0!==a.visible&&(d.visible=a.visible),void 0!==a.toneMapped&&(d.toneMapped=a.toneMapped),void 0!==a.userData&&(d.userData=a.userData),void 0!==a.vertexColors&&("number"==typeof a.vertexColors?d.vertexColors=a.vertexColors>0:d.vertexColors=a.vertexColors),void 0!==a.uniforms)for(let e in a.uniforms){let f=a.uniforms[e];switch(d.uniforms[e]={},f.type){case"t":d.uniforms[e].value=c(f.value);break;case"c":d.uniforms[e].value=new a7().setHex(f.value);break;case"v2":d.uniforms[e].value=new E().fromArray(f.value);break;case"v3":d.uniforms[e].value=new O().fromArray(f.value);break;case"v4":d.uniforms[e].value=new K().fromArray(f.value);break;case"m3":d.uniforms[e].value=new F().fromArray(f.value);break;case"m4":d.uniforms[e].value=new ao().fromArray(f.value);break;default:d.uniforms[e].value=f.value}}if(void 0!==a.defines&&(d.defines=a.defines),void 0!==a.vertexShader&&(d.vertexShader=a.vertexShader),void 0!==a.fragmentShader&&(d.fragmentShader=a.fragmentShader),void 0!==a.extensions)for(let g in a.extensions)d.extensions[g]=a.extensions[g];if(void 0!==a.shading&&(d.flatShading=1===a.shading),void 0!==a.size&&(d.size=a.size),void 0!==a.sizeAttenuation&&(d.sizeAttenuation=a.sizeAttenuation),void 0!==a.map&&(d.map=c(a.map)),void 0!==a.matcap&&(d.matcap=c(a.matcap)),void 0!==a.alphaMap&&(d.alphaMap=c(a.alphaMap)),void 0!==a.bumpMap&&(d.bumpMap=c(a.bumpMap)),void 0!==a.bumpScale&&(d.bumpScale=a.bumpScale),void 0!==a.normalMap&&(d.normalMap=c(a.normalMap)),void 0!==a.normalMapType&&(d.normalMapType=a.normalMapType),void 0!==a.normalScale){let h=a.normalScale;!1===Array.isArray(h)&&(h=[h,h]),d.normalScale=new E().fromArray(h)}return void 0!==a.displacementMap&&(d.displacementMap=c(a.displacementMap)),void 0!==a.displacementScale&&(d.displacementScale=a.displacementScale),void 0!==a.displacementBias&&(d.displacementBias=a.displacementBias),void 0!==a.roughnessMap&&(d.roughnessMap=c(a.roughnessMap)),void 0!==a.metalnessMap&&(d.metalnessMap=c(a.metalnessMap)),void 0!==a.emissiveMap&&(d.emissiveMap=c(a.emissiveMap)),void 0!==a.emissiveIntensity&&(d.emissiveIntensity=a.emissiveIntensity),void 0!==a.specularMap&&(d.specularMap=c(a.specularMap)),void 0!==a.envMap&&(d.envMap=c(a.envMap)),void 0!==a.envMapIntensity&&(d.envMapIntensity=a.envMapIntensity),void 0!==a.reflectivity&&(d.reflectivity=a.reflectivity),void 0!==a.refractionRatio&&(d.refractionRatio=a.refractionRatio),void 0!==a.lightMap&&(d.lightMap=c(a.lightMap)),void 0!==a.lightMapIntensity&&(d.lightMapIntensity=a.lightMapIntensity),void 0!==a.aoMap&&(d.aoMap=c(a.aoMap)),void 0!==a.aoMapIntensity&&(d.aoMapIntensity=a.aoMapIntensity),void 0!==a.gradientMap&&(d.gradientMap=c(a.gradientMap)),void 0!==a.clearcoatMap&&(d.clearcoatMap=c(a.clearcoatMap)),void 0!==a.clearcoatRoughnessMap&&(d.clearcoatRoughnessMap=c(a.clearcoatRoughnessMap)),void 0!==a.clearcoatNormalMap&&(d.clearcoatNormalMap=c(a.clearcoatNormalMap)),void 0!==a.clearcoatNormalScale&&(d.clearcoatNormalScale=new E().fromArray(a.clearcoatNormalScale)),void 0!==a.transmission&&(d.transmission=a.transmission),void 0!==a.transmissionMap&&(d.transmissionMap=c(a.transmissionMap)),d},setTextures:function(a){return this.textures=a,this}});let g1={decodeText:function(a){if("undefined"!=typeof TextDecoder)return new TextDecoder().decode(a);let b="";for(let c=0,d=a.length;c<d;c++)b+=String.fromCharCode(a[c]);try{return decodeURIComponent(escape(b))}catch(e){return b}},extractUrlBase:function(a){let b=a.lastIndexOf("/");return -1===b?"./":a.substr(0,b+1)}};function g2(){bx.call(this),this.type="InstancedBufferGeometry",this.instanceCount=1/0}function g3(a,b,c,d){"number"==typeof c&&(d=c,c=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),be.call(this,a,b,c),this.meshPerAttribute=d||1}function g4(a){gi.call(this,a)}g2.prototype=Object.assign(Object.create(bx.prototype),{constructor:g2,isInstancedBufferGeometry:!0,copy:function(a){return bx.prototype.copy.call(this,a),this.instanceCount=a.instanceCount,this},clone:function(){return new this.constructor().copy(this)},toJSON:function(){let a=bx.prototype.toJSON.call(this);return a.instanceCount=this.instanceCount,a.isInstancedBufferGeometry=!0,a}}),g3.prototype=Object.assign(Object.create(be.prototype),{constructor:g3,isInstancedBufferAttribute:!0,copy:function(a){return be.prototype.copy.call(this,a),this.meshPerAttribute=a.meshPerAttribute,this},toJSON:function(){let a=be.prototype.toJSON.call(this);return a.meshPerAttribute=this.meshPerAttribute,a.isInstancedBufferAttribute=!0,a}}),g4.prototype=Object.assign(Object.create(gi.prototype),{constructor:g4,load:function(a,b,c,d){let e=this,f=new gk(e.manager);f.setPath(e.path),f.setRequestHeader(e.requestHeader),f.setWithCredentials(e.withCredentials),f.load(a,function(c){try{b(e.parse(JSON.parse(c)))}catch(f){d?d(f):console.error(f),e.manager.itemError(a)}},c,d)},parse:function(a){let b={},c={};function d(a,c){if(void 0!==b[c])return b[c];let d=a.interleavedBuffers,f=d[c],g=e(a,f.buffer),h=new g5[f.type](g),i=new dW(h,f.stride);return i.uuid=f.uuid,b[c]=i,i}function e(a,b){if(void 0!==c[b])return c[b];let d=a.arrayBuffers,e=d[b],f=new Uint32Array(e).buffer;return c[b]=f,f}let f=a.isInstancedBufferGeometry?new g2:new bx,g=a.data.index;if(void 0!==g){let h=new g5[g.type](g.array);f.setIndex(new be(h,1))}let i=a.data.attributes;for(let j in i){let k=i[j],l;if(k.isInterleavedBufferAttribute){let m=d(a.data,k.data);l=new dY(m,k.itemSize,k.offset,k.normalized)}else{let n=new g5[k.type](k.array),o=k.isInstancedBufferAttribute?g3:be;l=new o(n,k.itemSize,k.normalized)}void 0!==k.name&&(l.name=k.name),f.setAttribute(j,l)}let p=a.data.morphAttributes;if(p)for(let q in p){let r=p[q],s=[];for(let t=0,u=r.length;t<u;t++){let v=r[t],w;if(v.isInterleavedBufferAttribute){let x=d(a.data,v.data);w=new dY(x,v.itemSize,v.offset,v.normalized)}else{let y=new g5[v.type](v.array);w=new be(y,v.itemSize,v.normalized)}void 0!==v.name&&(w.name=v.name),s.push(w)}f.morphAttributes[q]=s}let z=a.data.morphTargetsRelative;z&&(f.morphTargetsRelative=!0);let A=a.data.groups||a.data.drawcalls||a.data.offsets;if(void 0!==A)for(let B=0,C=A.length;B!==C;++B){let D=A[B];f.addGroup(D.start,D.count,D.materialIndex)}let E=a.data.boundingSphere;if(void 0!==E){let F=new O;void 0!==E.center&&F.fromArray(E.center),f.boundingSphere=new af(F,E.radius)}return a.name&&(f.name=a.name),a.userData&&(f.userData=a.userData),f}});let g5={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:"undefined"!=typeof Uint8ClampedArray?Uint8ClampedArray:Uint8Array,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function g6(a){"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),gi.call(this,a),this.options={premultiplyAlpha:"none"}}function g7(){this.type="ShapePath",this.color=new a7,this.subPaths=[],this.currentPath=null}function g8(a){this.type="Font",this.data=a}function g9(a,b,c,d,e){let f=e.glyphs[a]||e.glyphs["?"];if(!f){console.error('THREE.Font: character "'+a+'" does not exists in font family '+e.familyName+".");return}let g=new g7,h,i,j,k,l,m,n,o;if(f.o){let p=f._cachedOutline||(f._cachedOutline=f.o.split(" "));for(let q=0,r=p.length;q<r;){let s=p[q++];switch(s){case"m":h=p[q++]*b+c,i=p[q++]*b+d,g.moveTo(h,i);break;case"l":h=p[q++]*b+c,i=p[q++]*b+d,g.lineTo(h,i);break;case"q":j=p[q++]*b+c,k=p[q++]*b+d,l=p[q++]*b+c,m=p[q++]*b+d,g.quadraticCurveTo(l,m,j,k);break;case"b":j=p[q++]*b+c,k=p[q++]*b+d,l=p[q++]*b+c,m=p[q++]*b+d,n=p[q++]*b+c,o=p[q++]*b+d,g.bezierCurveTo(l,m,n,o,j,k)}}}return{offsetX:f.ha*b,path:g}}function ha(a){gi.call(this,a)}g6.prototype=Object.assign(Object.create(gi.prototype),{constructor:g6,isImageBitmapLoader:!0,setOptions:function(a){return this.options=a,this},load:function(a,b,c,d){void 0===a&&(a=""),void 0!==this.path&&(a=this.path+a),a=this.manager.resolveURL(a);let e=this,f=gg.get(a);if(void 0!==f)return e.manager.itemStart(a),setTimeout(function(){b&&b(f),e.manager.itemEnd(a)},0),f;let g={};g.credentials="anonymous"===this.crossOrigin?"same-origin":"include",fetch(a,g).then(function(a){return a.blob()}).then(function(a){return createImageBitmap(a,e.options)}).then(function(c){gg.add(a,c),b&&b(c),e.manager.itemEnd(a)}).catch(function(b){d&&d(b),e.manager.itemError(a),e.manager.itemEnd(a)}),e.manager.itemStart(a)}}),Object.assign(g7.prototype,{moveTo:function(a,b){return this.currentPath=new gM,this.subPaths.push(this.currentPath),this.currentPath.moveTo(a,b),this},lineTo:function(a,b){return this.currentPath.lineTo(a,b),this},quadraticCurveTo:function(a,b,c,d){return this.currentPath.quadraticCurveTo(a,b,c,d),this},bezierCurveTo:function(a,b,c,d,e,f){return this.currentPath.bezierCurveTo(a,b,c,d,e,f),this},splineThru:function(a){return this.currentPath.splineThru(a),this},toShapes:function(a,b){function c(a){let b=[];for(let c=0,d=a.length;c<d;c++){let e=a[c],f=new gN;f.curves=e.curves,b.push(f)}return b}function d(a,b){let c=b.length,d=!1;for(let e=c-1,f=0;f<c;e=f++){let g=b[e],h=b[f],i=h.x-g.x,j=h.y-g.y;if(Math.abs(j)>Number.EPSILON){if(j<0&&(g=b[f],i=-i,h=b[e],j=-j),a.y<g.y||a.y>h.y)continue;if(a.y===g.y){if(a.x===g.x)return!0}else{let k=j*(a.x-g.x)-i*(a.y-g.y);if(0===k)return!0;if(k<0)continue;d=!d}}else{if(a.y!==g.y)continue;if(h.x<=a.x&&a.x<=g.x||g.x<=a.x&&a.x<=h.x)return!0}}return d}let e=fu.isClockWise,f=this.subPaths;if(0===f.length)return[];if(!0===b)return c(f);let g,h,i,j=[];if(1===f.length)return h=f[0],(i=new gN).curves=h.curves,j.push(i),j;let k=!e(f[0].getPoints());k=a?!k:k;let l=[],m=[],n=[],o=0,p;m[o]=void 0,n[o]=[];for(let q=0,r=f.length;q<r;q++)g=e(p=(h=f[q]).getPoints()),(g=a?!g:g)?(!k&&m[o]&&o++,m[o]={s:new gN,p:p},m[o].s.curves=h.curves,k&&o++,n[o]=[]):n[o].push({h:h,p:p[0]});if(!m[0])return c(f);if(m.length>1){let s=!1,t=[];for(let u=0,v=m.length;u<v;u++)l[u]=[];for(let w=0,x=m.length;w<x;w++){let y=n[w];for(let z=0;z<y.length;z++){let A=y[z],B=!0;for(let C=0;C<m.length;C++)d(A.p,m[C].p)&&(w!==C&&t.push({froms:w,tos:C,hole:z}),B?(B=!1,l[C].push(A)):s=!0);B&&l[w].push(A)}}t.length>0&&!s&&(n=l)}let D;for(let E=0,F=m.length;E<F;E++){i=m[E].s,j.push(i),D=n[E];for(let G=0,H=D.length;G<H;G++)i.holes.push(D[G].h)}return j}}),Object.assign(g8.prototype,{isFont:!0,generateShapes:function(a,b){void 0===b&&(b=100);let c=[],d=function a(b,c,d){let e=Array.from?Array.from(b):String(b).split(""),f=c/d.resolution,g=(d.boundingBox.yMax-d.boundingBox.yMin+d.underlineThickness)*f,h=[],i=0,j=0;for(let k=0;k<e.length;k++){let l=e[k];if("\n"===l)i=0,j-=g;else{let m=g9(l,f,i,j,d);i+=m.offsetX,h.push(m.path)}}return h}(a,b,this.data);for(let e=0,f=d.length;e<f;e++)Array.prototype.push.apply(c,d[e].toShapes());return c}}),ha.prototype=Object.assign(Object.create(gi.prototype),{constructor:ha,load:function(a,b,c,d){let e=this,f=new gk(this.manager);f.setPath(this.path),f.setRequestHeader(this.requestHeader),f.setWithCredentials(e.withCredentials),f.load(a,function(a){let c;try{c=JSON.parse(a)}catch(d){console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),c=JSON.parse(a.substring(65,a.length-2))}let f=e.parse(c);b&&b(f)},c,d)},parse:function(a){return new g8(a)}});let hb,hc={getContext:function(){return void 0===hb&&(hb=new(window.AudioContext||window.webkitAudioContext)),hb},setContext:function(a){hb=a}};function hd(a){gi.call(this,a)}function he(a,b,c){g_.call(this,void 0,c);let d=new a7().set(a),e=new a7().set(b),f=new O(d.r,d.g,d.b),g=new O(e.r,e.g,e.b),h=Math.sqrt(Math.PI);this.sh.coefficients[0].copy(f).add(g).multiplyScalar(h),this.sh.coefficients[1].copy(f).sub(g).multiplyScalar(h*Math.sqrt(.75))}function hf(a,b){g_.call(this,void 0,b);let c=new a7().set(a);this.sh.coefficients[0].set(c.r,c.g,c.b).multiplyScalar(2*Math.sqrt(Math.PI))}hd.prototype=Object.assign(Object.create(gi.prototype),{constructor:hd,load:function(a,b,c,d){let e=this,f=new gk(e.manager);f.setResponseType("arraybuffer"),f.setPath(e.path),f.setRequestHeader(e.requestHeader),f.setWithCredentials(e.withCredentials),f.load(a,function(c){try{let f=c.slice(0),g=hc.getContext();g.decodeAudioData(f,function(a){b(a)})}catch(h){d?d(h):console.error(h),e.manager.itemError(a)}},c,d)}}),he.prototype=Object.assign(Object.create(g_.prototype),{constructor:he,isHemisphereLightProbe:!0,copy:function(a){return g_.prototype.copy.call(this,a),this},toJSON:function(a){let b=g_.prototype.toJSON.call(this,a);return b}}),hf.prototype=Object.assign(Object.create(g_.prototype),{constructor:hf,isAmbientLightProbe:!0,copy:function(a){return g_.prototype.copy.call(this,a),this},toJSON:function(a){let b=g_.prototype.toJSON.call(this,a);return b}});let hg=new ao,hh=new ao;function hi(a,b,c){this.binding=a,this.valueSize=c;let d,e,f;switch(b){case"quaternion":d=this._slerp,e=this._slerpAdditive,f=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*c),this._workIndex=5;break;case"string":case"bool":d=this._select,e=this._select,f=this._setAdditiveIdentityOther,this.buffer=Array(5*c);break;default:d=this._lerp,e=this._lerpAdditive,f=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*c)}this._mixBufferRegion=d,this._mixBufferRegionAdditive=e,this._setIdentity=f,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}Object.assign((function(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new bY,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new bY,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}).prototype,{update:function(a){let b=this._cache,c=b.focus!==a.focus||b.fov!==a.fov||b.aspect!==a.aspect*this.aspect||b.near!==a.near||b.far!==a.far||b.zoom!==a.zoom||b.eyeSep!==this.eyeSep;if(c){b.focus=a.focus,b.fov=a.fov,b.aspect=a.aspect*this.aspect,b.near=a.near,b.far=a.far,b.zoom=a.zoom,b.eyeSep=this.eyeSep;let d=a.projectionMatrix.clone(),e=b.eyeSep/2,f=e*b.near/b.focus,g=b.near*Math.tan(D.DEG2RAD*b.fov*.5)/b.zoom,h,i;hh.elements[12]=-e,hg.elements[12]=e,h=-g*b.aspect+f,i=g*b.aspect+f,d.elements[0]=2*b.near/(i-h),d.elements[8]=(i+h)/(i-h),this.cameraL.projectionMatrix.copy(d),h=-g*b.aspect-f,i=g*b.aspect-f,d.elements[0]=2*b.near/(i-h),d.elements[8]=(i+h)/(i-h),this.cameraR.projectionMatrix.copy(d)}this.cameraL.matrixWorld.copy(a.matrixWorld).multiply(hh),this.cameraR.matrixWorld.copy(a.matrixWorld).multiply(hg)}}),new O,new N,new O,new O,new O,new N,new O,new O,Object.assign(hi.prototype,{accumulate:function(a,b){let c=this.buffer,d=this.valueSize,e=a*d+d,f=this.cumulativeWeight;if(0===f){for(let g=0;g!==d;++g)c[e+g]=c[g];f=b}else{f+=b;let h=b/f;this._mixBufferRegion(c,e,0,h,d)}this.cumulativeWeight=f},accumulateAdditive:function(a){let b=this.buffer,c=this.valueSize,d=c*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(b,d,0,a,c),this.cumulativeWeightAdditive+=a},apply:function(a){let b=this.valueSize,c=this.buffer,d=a*b+b,e=this.cumulativeWeight,f=this.cumulativeWeightAdditive,g=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,e<1){let h=b*this._origIndex;this._mixBufferRegion(c,d,h,1-e,b)}f>0&&this._mixBufferRegionAdditive(c,d,this._addIndex*b,1,b);for(let i=b,j=b+b;i!==j;++i)if(c[i]!==c[i+b]){g.setValue(c,d);break}},saveOriginalState:function(){let a=this.binding,b=this.buffer,c=this.valueSize,d=c*this._origIndex;a.getValue(b,d);for(let e=c,f=d;e!==f;++e)b[e]=b[d+e%c];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0},restoreOriginalState:function(){let a=3*this.valueSize;this.binding.setValue(this.buffer,a)},_setAdditiveIdentityNumeric:function(){let a=this._addIndex*this.valueSize,b=a+this.valueSize;for(let c=a;c<b;c++)this.buffer[c]=0},_setAdditiveIdentityQuaternion:function(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1},_setAdditiveIdentityOther:function(){let a=this._origIndex*this.valueSize,b=this._addIndex*this.valueSize;for(let c=0;c<this.valueSize;c++)this.buffer[b+c]=this.buffer[a+c]},_select:function(a,b,c,d,e){if(d>=.5)for(let f=0;f!==e;++f)a[b+f]=a[c+f]},_slerp:function(a,b,c,d){N.slerpFlat(a,b,a,b,a,c,d)},_slerpAdditive:function(a,b,c,d,e){let f=this._workIndex*e;N.multiplyQuaternionsFlat(a,f,a,b,a,c),N.slerpFlat(a,b,a,b,a,f,d)},_lerp:function(a,b,c,d,e){let f=1-d;for(let g=0;g!==e;++g){let h=b+g;a[h]=a[h]*f+a[c+g]*d}},_lerpAdditive:function(a,b,c,d,e){for(let f=0;f!==e;++f){let g=b+f;a[g]=a[g]+a[c+f]*d}}});let hj="\\[\\]\\.:\\/",hk=RegExp("["+hj+"]","g"),hl="[^"+hj+"]",hm="[^"+hj.replace("\\.","")+"]",hn=/((?:WC+[\/:])*)/.source.replace("WC",hl),ho=/(WCOD+)?/.source.replace("WCOD",hm),hp=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",hl),hq=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",hl),hr=RegExp("^"+hn+ho+hp+hq+"$"),hs=["material","materials","bones"];function ht(a,b,c){let d=c||hu.parseTrackName(b);this._targetGroup=a,this._bindings=a.subscribe_(b,d)}function hu(a,b,c){this.path=b,this.parsedPath=c||hu.parseTrackName(b),this.node=hu.findNode(a,this.parsedPath.nodeName)||a,this.rootNode=a}Object.assign(ht.prototype,{getValue:function(a,b){this.bind();let c=this._targetGroup.nCachedObjects_,d=this._bindings[c];void 0!==d&&d.getValue(a,b)},setValue:function(a,b){let c=this._bindings;for(let d=this._targetGroup.nCachedObjects_,e=c.length;d!==e;++d)c[d].setValue(a,b)},bind:function(){let a=this._bindings;for(let b=this._targetGroup.nCachedObjects_,c=a.length;b!==c;++b)a[b].bind()},unbind:function(){let a=this._bindings;for(let b=this._targetGroup.nCachedObjects_,c=a.length;b!==c;++b)a[b].unbind()}}),Object.assign(hu,{Composite:ht,create:function(a,b,c){return a&&a.isAnimationObjectGroup?new hu.Composite(a,b,c):new hu(a,b,c)},sanitizeNodeName:function(a){return a.replace(/\s/g,"_").replace(hk,"")},parseTrackName:function(a){let b=hr.exec(a);if(!b)throw Error("PropertyBinding: Cannot parse trackName: "+a);let c={nodeName:b[2],objectName:b[3],objectIndex:b[4],propertyName:b[5],propertyIndex:b[6]},d=c.nodeName&&c.nodeName.lastIndexOf(".");if(void 0!==d&& -1!==d){let e=c.nodeName.substring(d+1);-1!==hs.indexOf(e)&&(c.nodeName=c.nodeName.substring(0,d),c.objectName=e)}if(null===c.propertyName||0===c.propertyName.length)throw Error("PropertyBinding: can not parse propertyName from trackName: "+a);return c},findNode:function(a,b){if(!b||""===b||"."===b|| -1===b||b===a.name||b===a.uuid)return a;if(a.skeleton){let c=a.skeleton.getBoneByName(b);if(void 0!==c)return c}if(a.children){let d=function(a){for(let c=0;c<a.length;c++){let e=a[c];if(e.name===b||e.uuid===b)return e;let f=d(e.children);if(f)return f}return null},e=d(a.children);if(e)return e}return null}}),Object.assign(hu.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(a,b){a[b]=this.node[this.propertyName]},function(a,b){let c=this.resolvedProperty;for(let d=0,e=c.length;d!==e;++d)a[b++]=c[d]},function(a,b){a[b]=this.resolvedProperty[this.propertyIndex]},function(a,b){this.resolvedProperty.toArray(a,b)}],SetterByBindingTypeAndVersioning:[[function(a,b){this.targetObject[this.propertyName]=a[b]},function(a,b){this.targetObject[this.propertyName]=a[b],this.targetObject.needsUpdate=!0},function(a,b){this.targetObject[this.propertyName]=a[b],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(a,b){let c=this.resolvedProperty;for(let d=0,e=c.length;d!==e;++d)c[d]=a[b++]},function(a,b){let c=this.resolvedProperty;for(let d=0,e=c.length;d!==e;++d)c[d]=a[b++];this.targetObject.needsUpdate=!0},function(a,b){let c=this.resolvedProperty;for(let d=0,e=c.length;d!==e;++d)c[d]=a[b++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(a,b){this.resolvedProperty[this.propertyIndex]=a[b]},function(a,b){this.resolvedProperty[this.propertyIndex]=a[b],this.targetObject.needsUpdate=!0},function(a,b){this.resolvedProperty[this.propertyIndex]=a[b],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(a,b){this.resolvedProperty.fromArray(a,b)},function(a,b){this.resolvedProperty.fromArray(a,b),this.targetObject.needsUpdate=!0},function(a,b){this.resolvedProperty.fromArray(a,b),this.targetObject.matrixWorldNeedsUpdate=!0}]],getValue:function(a,b){this.bind(),this.getValue(a,b)},setValue:function(a,b){this.bind(),this.setValue(a,b)},bind:function(){let a=this.node,b=this.parsedPath,c=b.objectName,d=b.propertyName,e=b.propertyIndex;if(a||(a=hu.findNode(this.rootNode,b.nodeName)||this.rootNode,this.node=a),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!a){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(c){let f=b.objectIndex;switch(c){case"materials":if(!a.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!a.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}a=a.material.materials;break;case"bones":if(!a.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}a=a.skeleton.bones;for(let g=0;g<a.length;g++)if(a[g].name===f){f=g;break}break;default:if(void 0===a[c]){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}a=a[c]}if(void 0!==f){if(void 0===a[f]){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,a);return}a=a[f]}}let h=a[d];if(void 0===h){let i=b.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+i+"."+d+" but it wasn't found.",a);return}let j=this.Versioning.None;this.targetObject=a,void 0!==a.needsUpdate?j=this.Versioning.NeedsUpdate:void 0!==a.matrixWorldNeedsUpdate&&(j=this.Versioning.MatrixWorldNeedsUpdate);let k=this.BindingType.Direct;if(void 0!==e){if("morphTargetInfluences"===d){if(!a.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(a.geometry.isBufferGeometry){if(!a.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}void 0!==a.morphTargetDictionary[e]&&(e=a.morphTargetDictionary[e])}else{console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);return}}k=this.BindingType.ArrayElement,this.resolvedProperty=h,this.propertyIndex=e}else void 0!==h.fromArray&& void 0!==h.toArray?(k=this.BindingType.HasFromToArray,this.resolvedProperty=h):Array.isArray(h)?(k=this.BindingType.EntireArray,this.resolvedProperty=h):this.propertyName=d;this.getValue=this.GetterByBindingType[k],this.setValue=this.SetterByBindingTypeAndVersioning[k][j]},unbind:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}),Object.assign(hu.prototype,{_getValue_unbound:hu.prototype.getValue,_setValue_unbound:hu.prototype.setValue}),Object.assign((function(){this.uuid=D.generateUUID(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;let a={};this._indicesByUUID=a;for(let b=0,c=arguments.length;b!==c;++b)a[arguments[b].uuid]=b;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={},this.stats={objects:{get total(){return this._objects.length},get inUse(){return this.total-this.nCachedObjects_}},get bindingsPerObject(){return this._bindings.length}}}).prototype,{isAnimationObjectGroup:!0,add:function(){let a=this._objects,b=this._indicesByUUID,c=this._paths,d=this._parsedPaths,e=this._bindings,f=e.length,g,h=a.length,i=this.nCachedObjects_;for(let j=0,k=arguments.length;j!==k;++j){let l=arguments[j],m=l.uuid,n=b[m];if(void 0===n){n=h++,b[m]=n,a.push(l);for(let o=0,p=f;o!==p;++o)e[o].push(new hu(l,c[o],d[o]))}else if(n<i){g=a[n];let q=--i,r=a[q];b[r.uuid]=n,a[n]=r,b[m]=q,a[q]=l;for(let s=0,t=f;s!==t;++s){let u=e[s],v=u[q],w=u[n];u[n]=v,void 0===w&&(w=new hu(l,c[s],d[s])),u[q]=w}}else a[n]!==g&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=i},remove:function(){let a=this._objects,b=this._indicesByUUID,c=this._bindings,d=c.length,e=this.nCachedObjects_;for(let f=0,g=arguments.length;f!==g;++f){let h=arguments[f],i=h.uuid,j=b[i];if(void 0!==j&&j>=e){let k=e++,l=a[k];b[l.uuid]=j,a[j]=l,b[i]=k,a[k]=h;for(let m=0,n=d;m!==n;++m){let o=c[m],p=o[k],q=o[j];o[j]=p,o[k]=q}}}this.nCachedObjects_=e},uncache:function(){let a=this._objects,b=this._indicesByUUID,c=this._bindings,d=c.length,e=this.nCachedObjects_,f=a.length;for(let g=0,h=arguments.length;g!==h;++g){let i=arguments[g],j=i.uuid,k=b[j];if(void 0!==k){if(delete b[j],k<e){let l=--e,m=a[l],n=--f,o=a[n];b[m.uuid]=k,a[k]=m,b[o.uuid]=l,a[l]=o,a.pop();for(let p=0,q=d;p!==q;++p){let r=c[p],s=r[l],t=r[n];r[k]=s,r[l]=t,r.pop()}}else{let u=--f,v=a[u];b[v.uuid]=k,a[k]=v,a.pop();for(let w=0,x=d;w!==x;++w){let y=c[w];y[k]=y[u],y.pop()}}}}this.nCachedObjects_=e},subscribe_:function(a,b){let c=this._bindingsIndicesByPath,d=c[a],e=this._bindings;if(void 0!==d)return e[d];let f=this._paths,g=this._parsedPaths,h=this._objects,i=h.length,j=this.nCachedObjects_,k=Array(i);d=e.length,c[a]=d,f.push(a),g.push(b),e.push(k);for(let l=j,m=h.length;l!==m;++l){let n=h[l];k[l]=new hu(n,a,b)}return k},unsubscribe_:function(a){let b=this._bindingsIndicesByPath,c=b[a];if(void 0!==c){let d=this._paths,e=this._parsedPaths,f=this._bindings,g=f.length-1,h=f[g],i=a[g];b[i]=c,f[c]=h,f.pop(),e[c]=e[g],e.pop(),d[c]=d[g],d.pop()}}});class hv{constructor(a,b,c,d){this._mixer=a,this._clip=b,this._localRoot=c||null,this.blendMode=d||b.blendMode;let e=b.tracks,f=e.length,g=Array(f),h={endingStart:2400,endingEnd:2400};for(let i=0;i!==f;++i){let j=e[i].createInterpolant(null);g[i]=j,j.settings=h}this._interpolantSettings=h,this._interpolants=g,this._propertyBindings=Array(f),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=2201,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(a){return this._startTime=a,this}setLoop(a,b){return this.loop=a,this.repetitions=b,this}setEffectiveWeight(a){return this.weight=a,this._effectiveWeight=this.enabled?a:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(a){return this._scheduleFading(a,0,1)}fadeOut(a){return this._scheduleFading(a,1,0)}crossFadeFrom(a,b,c){if(a.fadeOut(b),this.fadeIn(b),c){let d=this._clip.duration,e=a._clip.duration,f=e/d,g=d/e;a.warp(1,f,b),this.warp(g,1,b)}return this}crossFadeTo(a,b,c){return a.crossFadeFrom(this,b,c)}stopFading(){let a=this._weightInterpolant;return null!==a&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(a)),this}setEffectiveTimeScale(a){return this.timeScale=a,this._effectiveTimeScale=this.paused?0:a,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(a){return this.timeScale=this._clip.duration/a,this.stopWarping()}syncWith(a){return this.time=a.time,this.timeScale=a.timeScale,this.stopWarping()}halt(a){return this.warp(this._effectiveTimeScale,0,a)}warp(a,b,c){let d=this._mixer,e=d.time,f=this.timeScale,g=this._timeScaleInterpolant;null===g&&(g=d._lendControlInterpolant(),this._timeScaleInterpolant=g);let h=g.parameterPositions,i=g.sampleValues;return h[0]=e,h[1]=e+c,i[0]=a/f,i[1]=b/f,this}stopWarping(){let a=this._timeScaleInterpolant;return null!==a&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(a)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(a,b,c,d){if(!this.enabled){this._updateWeight(a);return}let e=this._startTime;if(null!==e){let f=(a-e)*c;if(f<0||0===c)return;this._startTime=null,b=c*f}b*=this._updateTimeScale(a);let g=this._updateTime(b),h=this._updateWeight(a);if(h>0){let i=this._interpolants,j=this._propertyBindings;if(2501===this.blendMode)for(let k=0,l=i.length;k!==l;++k)i[k].evaluate(g),j[k].accumulateAdditive(h);else for(let m=0,n=i.length;m!==n;++m)i[m].evaluate(g),j[m].accumulate(d,h)}}_updateWeight(a){let b=0;if(this.enabled){b=this.weight;let c=this._weightInterpolant;if(null!==c){let d=c.evaluate(a)[0];b*=d,a>c.parameterPositions[1]&&(this.stopFading(),0===d&&(this.enabled=!1))}}return this._effectiveWeight=b,b}_updateTimeScale(a){let b=0;if(!this.paused){b=this.timeScale;let c=this._timeScaleInterpolant;if(null!==c){let d=c.evaluate(a)[0];b*=d,a>c.parameterPositions[1]&&(this.stopWarping(),0===b?this.paused=!0:this.timeScale=b)}}return this._effectiveTimeScale=b,b}_updateTime(a){let b=this._clip.duration,c=this.loop,d=this.time+a,e=this._loopCount,f=2202===c;if(0===a)return -1===e?d:f&&(1&e)==1?b-d:d;if(2200===c){-1===e&&(this._loopCount=0,this._setEndings(!0,!0,!1));handle_stop:{if(d>=b)d=b;else if(d<0)d=0;else{this.time=d;break handle_stop}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=d,this._mixer.dispatchEvent({type:"finished",action:this,direction:a<0?-1:1})}}else{if(-1===e&&(a>=0?(e=0,this._setEndings(!0,0===this.repetitions,f)):this._setEndings(0===this.repetitions,!0,f)),d>=b||d<0){let g=Math.floor(d/b);d-=b*g,e+=Math.abs(g);let h=this.repetitions-e;if(h<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,d=a>0?b:0,this.time=d,this._mixer.dispatchEvent({type:"finished",action:this,direction:a>0?1:-1});else{if(1===h){let i=a<0;this._setEndings(i,!i,f)}else this._setEndings(!1,!1,f);this._loopCount=e,this.time=d,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:g})}}else this.time=d;if(f&&(1&e)==1)return b-d}return d}_setEndings(a,b,c){let d=this._interpolantSettings;c?(d.endingStart=2401,d.endingEnd=2401):(a?d.endingStart=this.zeroSlopeAtStart?2401:2400:d.endingStart=2402,b?d.endingEnd=this.zeroSlopeAtEnd?2401:2400:d.endingEnd=2402)}_scheduleFading(a,b,c){let d=this._mixer,e=d.time,f=this._weightInterpolant;null===f&&(f=d._lendControlInterpolant(),this._weightInterpolant=f);let g=f.parameterPositions,h=f.sampleValues;return g[0]=e,h[0]=b,g[1]=e+a,h[1]=c,this}}function hw(a){this._root=a,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}hw.prototype=Object.assign(Object.create(z.prototype),{constructor:hw,_bindAction:function(a,b){let c=a._localRoot||this._root,d=a._clip.tracks,e=d.length,f=a._propertyBindings,g=a._interpolants,h=c.uuid,i=this._bindingsByRootAndName,j=i[h];void 0===j&&(j={},i[h]=j);for(let k=0;k!==e;++k){let l=d[k],m=l.name,n=j[m];if(void 0!==n)f[k]=n;else{if(void 0!==(n=f[k])){null===n._cacheIndex&&(++n.referenceCount,this._addInactiveBinding(n,h,m));continue}let o=b&&b._propertyBindings[k].binding.parsedPath;n=new hi(hu.create(c,m,o),l.ValueTypeName,l.getValueSize()),++n.referenceCount,this._addInactiveBinding(n,h,m),f[k]=n}g[k].resultBuffer=n.buffer}},_activateAction:function(a){if(!this._isActiveAction(a)){if(null===a._cacheIndex){let b=(a._localRoot||this._root).uuid,c=a._clip.uuid,d=this._actionsByClip[c];this._bindAction(a,d&&d.knownActions[0]),this._addInactiveAction(a,c,b)}let e=a._propertyBindings;for(let f=0,g=e.length;f!==g;++f){let h=e[f];0==h.useCount++&&(this._lendBinding(h),h.saveOriginalState())}this._lendAction(a)}},_deactivateAction:function(a){if(this._isActiveAction(a)){let b=a._propertyBindings;for(let c=0,d=b.length;c!==d;++c){let e=b[c];0== --e.useCount&&(e.restoreOriginalState(),this._takeBackBinding(e))}this._takeBackAction(a)}},_initMemoryManager:function(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0,this.stats={actions:{get total(){return this._actions.length},get inUse(){return this._nActiveActions}},bindings:{get total(){return this._bindings.length},get inUse(){return this._nActiveBindings}},controlInterpolants:{get total(){return this._controlInterpolants.length},get inUse(){return this._nActiveControlInterpolants}}}},_isActiveAction:function(a){let b=a._cacheIndex;return null!==b&&b<this._nActiveActions},_addInactiveAction:function(a,b,c){let d=this._actions,e=this._actionsByClip,f=e[b];if(void 0===f)f={knownActions:[a],actionByRoot:{}},a._byClipCacheIndex=0,e[b]=f;else{let g=f.knownActions;a._byClipCacheIndex=g.length,g.push(a)}a._cacheIndex=d.length,d.push(a),f.actionByRoot[c]=a},_removeInactiveAction:function(a){let b=this._actions,c=b[b.length-1],d=a._cacheIndex;c._cacheIndex=d,b[d]=c,b.pop(),a._cacheIndex=null;let e=a._clip.uuid,f=this._actionsByClip,g=f[e],h=g.knownActions,i=h[h.length-1],j=a._byClipCacheIndex;i._byClipCacheIndex=j,h[j]=i,h.pop(),a._byClipCacheIndex=null;let k=g.actionByRoot,l=(a._localRoot||this._root).uuid;delete k[l],0===h.length&&delete f[e],this._removeInactiveBindingsForAction(a)},_removeInactiveBindingsForAction:function(a){let b=a._propertyBindings;for(let c=0,d=b.length;c!==d;++c){let e=b[c];0== --e.referenceCount&&this._removeInactiveBinding(e)}},_lendAction:function(a){let b=this._actions,c=a._cacheIndex,d=this._nActiveActions++,e=b[d];a._cacheIndex=d,b[d]=a,e._cacheIndex=c,b[c]=e},_takeBackAction:function(a){let b=this._actions,c=a._cacheIndex,d=--this._nActiveActions,e=b[d];a._cacheIndex=d,b[d]=a,e._cacheIndex=c,b[c]=e},_addInactiveBinding:function(a,b,c){let d=this._bindingsByRootAndName,e=this._bindings,f=d[b];void 0===f&&(f={},d[b]=f),f[c]=a,a._cacheIndex=e.length,e.push(a)},_removeInactiveBinding:function(a){let b=this._bindings,c=a.binding,d=c.rootNode.uuid,e=c.path,f=this._bindingsByRootAndName,g=f[d],h=b[b.length-1],i=a._cacheIndex;h._cacheIndex=i,b[i]=h,b.pop(),delete g[e],0===Object.keys(g).length&&delete f[d]},_lendBinding:function(a){let b=this._bindings,c=a._cacheIndex,d=this._nActiveBindings++,e=b[d];a._cacheIndex=d,b[d]=a,e._cacheIndex=c,b[c]=e},_takeBackBinding:function(a){let b=this._bindings,c=a._cacheIndex,d=--this._nActiveBindings,e=b[d];a._cacheIndex=d,b[d]=a,e._cacheIndex=c,b[c]=e},_lendControlInterpolant:function(){let a=this._controlInterpolants,b=this._nActiveControlInterpolants++,c=a[b];return void 0===c&&((c=new f4(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer)).__cacheIndex=b,a[b]=c),c},_takeBackControlInterpolant:function(a){let b=this._controlInterpolants,c=a.__cacheIndex,d=--this._nActiveControlInterpolants,e=b[d];a.__cacheIndex=d,b[d]=a,e.__cacheIndex=c,b[c]=e},_controlInterpolantsResultBuffer:new Float32Array(1),clipAction:function(a,b,c){let d=b||this._root,e=d.uuid,f="string"==typeof a?ge.findByName(d,a):a,g=null!==f?f.uuid:a,h=this._actionsByClip[g],i=null;if(void 0===c&&(c=null!==f?f.blendMode:2500),void 0!==h){let j=h.actionByRoot[e];if(void 0!==j&&j.blendMode===c)return j;i=h.knownActions[0],null===f&&(f=i._clip)}if(null===f)return null;let k=new hv(this,f,b,c);return this._bindAction(k,i),this._addInactiveAction(k,g,e),k},existingAction:function(a,b){let c=b||this._root,d=c.uuid,e="string"==typeof a?ge.findByName(c,a):a,f=e?e.uuid:a,g=this._actionsByClip[f];return void 0!==g&&g.actionByRoot[d]||null},stopAllAction:function(){let a=this._actions,b=this._nActiveActions;for(let c=b-1;c>=0;--c)a[c].stop();return this},update:function(a){a*=this.timeScale;let b=this._actions,c=this._nActiveActions,d=this.time+=a,e=Math.sign(a),f=this._accuIndex^=1;for(let g=0;g!==c;++g){let h=b[g];h._update(d,a,e,f)}let i=this._bindings,j=this._nActiveBindings;for(let k=0;k!==j;++k)i[k].apply(f);return this},setTime:function(a){this.time=0;for(let b=0;b<this._actions.length;b++)this._actions[b].time=0;return this.update(a)},getRoot:function(){return this._root},uncacheClip:function(a){let b=this._actions,c=a.uuid,d=this._actionsByClip,e=d[c];if(void 0!==e){let f=e.knownActions;for(let g=0,h=f.length;g!==h;++g){let i=f[g];this._deactivateAction(i);let j=i._cacheIndex,k=b[b.length-1];i._cacheIndex=null,i._byClipCacheIndex=null,k._cacheIndex=j,b[j]=k,b.pop(),this._removeInactiveBindingsForAction(i)}delete d[c]}},uncacheRoot:function(a){let b=a.uuid,c=this._actionsByClip;for(let d in c){let e=c[d].actionByRoot,f=e[b];void 0!==f&&(this._deactivateAction(f),this._removeInactiveAction(f))}let g=this._bindingsByRootAndName,h=g[b];if(void 0!==h)for(let i in h){let j=h[i];j.restoreOriginalState(),this._removeInactiveBinding(j)}},uncacheAction:function(a,b){let c=this.existingAction(a,b);null!==c&&(this._deactivateAction(c),this._removeInactiveAction(c))}});class hx{constructor(a){"string"==typeof a&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),a=arguments[1]),this.value=a}clone(){return new hx(void 0===this.value.clone?this.value:this.value.clone())}}function hy(a,b,c){dW.call(this,a,b),this.meshPerAttribute=c||1}function hz(a,b,c,d,e){this.buffer=a,this.type=b,this.itemSize=c,this.elementSize=d,this.count=e,this.version=0}function hA(a,b,c,d){this.ray=new an(a,b),this.near=c||0,this.far=d||1/0,this.camera=null,this.layers=new az,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})}function hB(a,b){return a.distance-b.distance}function hC(a,b,c,d){if(a.layers.test(b.layers)&&a.raycast(b,c),!0===d){let e=a.children;for(let f=0,g=e.length;f<g;f++)hC(e[f],b,c,!0)}}hy.prototype=Object.assign(Object.create(dW.prototype),{constructor:hy,isInstancedInterleavedBuffer:!0,copy:function(a){return dW.prototype.copy.call(this,a),this.meshPerAttribute=a.meshPerAttribute,this},clone:function(a){let b=dW.prototype.clone.call(this,a);return b.meshPerAttribute=this.meshPerAttribute,b},toJSON:function(a){let b=dW.prototype.toJSON.call(this,a);return b.isInstancedInterleavedBuffer=!0,b.meshPerAttribute=this.meshPerAttribute,b}}),Object.defineProperty(hz.prototype,"needsUpdate",{set:function(a){!0===a&&this.version++}}),Object.assign(hz.prototype,{isGLBufferAttribute:!0,setBuffer:function(a){return this.buffer=a,this},setType:function(a,b){return this.type=a,this.elementSize=b,this},setItemSize:function(a){return this.itemSize=a,this},setCount:function(a){return this.count=a,this}}),Object.assign(hA.prototype,{set:function(a,b){this.ray.set(a,b)},setFromCamera:function(a,b){b&&b.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(b.matrixWorld),this.ray.direction.set(a.x,a.y,.5).unproject(b).sub(this.ray.origin).normalize(),this.camera=b):b&&b.isOrthographicCamera?(this.ray.origin.set(a.x,a.y,(b.near+b.far)/(b.near-b.far)).unproject(b),this.ray.direction.set(0,0,-1).transformDirection(b.matrixWorld),this.camera=b):console.error("THREE.Raycaster: Unsupported camera type.")},intersectObject:function(a,b,c){let d=c||[];return hC(a,this,d,b),d.sort(hB),d},intersectObjects:function(a,b,c){let d=c||[];if(!1===Array.isArray(a))return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),d;for(let e=0,f=a.length;e<f;e++)hC(a[e],this,d,b);return d.sort(hB),d}});class hD{constructor(a=1,b=0,c=0){return this.radius=a,this.phi=b,this.theta=c,this}set(a,b,c){return this.radius=a,this.phi=b,this.theta=c,this}clone(){return new this.constructor().copy(this)}copy(a){return this.radius=a.radius,this.phi=a.phi,this.theta=a.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(a){return this.setFromCartesianCoords(a.x,a.y,a.z)}setFromCartesianCoords(a,b,c){return this.radius=Math.sqrt(a*a+b*b+c*c),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(a,c),this.phi=Math.acos(D.clamp(b/this.radius,-1,1))),this}}let hE=new E,hF=new O,hG=new O;function hH(a){aN.call(this),this.material=a,this.render=function(){},this.hasPositions=!1,this.hasNormals=!1,this.hasColors=!1,this.hasUvs=!1,this.positionArray=null,this.normalArray=null,this.colorArray=null,this.uvArray=null,this.count=0}hH.prototype=Object.create(aN.prototype),hH.prototype.constructor=hH,hH.prototype.isImmediateRenderObject=!0,new O;let hI=new O,hJ=new ao,hK=new ao;function hL(a){let b=[];a&&a.isBone&&b.push(a);for(let c=0;c<a.children.length;c++)b.push.apply(b,hL(a.children[c]));return b}new O,new a7,new a7,new O,new O,new O;let hM=new O;new bX;let hN=new R;new O;let hO=[.125,.215,.35,.446,.526,.582],hP=5+hO.length,hQ={3e3:0,[w]:1,3002:2,3004:3,3005:4,3006:5,3007:6},{_lodPlanes:hR,_sizeLods:hS,_sigmas:hT}=(new gV,function(){let a=[],b=[],c=[],d=8;for(let e=0;e<hP;e++){let f=Math.pow(2,d);b.push(f);let g=1/f;e>4?g=hO[e-8+4-1]:0==e&&(g=0),c.push(g);let h=1/(f-1),i=-h/2,j=1+h/2,k=[i,i,j,i,j,j,i,i,j,j,i,j],l=6,m=6,n=3,o=2,p=1,q=new Float32Array(n*m*l),r=new Float32Array(o*m*l),s=new Float32Array(p*m*l);for(let t=0;t<l;t++){let u=t%3*2/3-1,v=t>2?0:-1,w=[u,v,0,u+2/3,v,0,u+2/3,v+1,0,u,v,0,u+2/3,v+1,0,u,v+1,0];q.set(w,n*m*t),r.set(k,o*m*t);let x=[t,t,t,t,t,t];s.set(x,p*m*t)}let y=new bx;y.setAttribute("position",new be(q,n)),y.setAttribute("uv",new be(r,o)),y.setAttribute("faceIndex",new be(s,p)),a.push(y),d>4&&d--}return{_lodPlanes:a,_sizeLods:b,_sigmas:c}}()),hU=(1+Math.sqrt(5))/2,hV=1/hU;new O(1,1,1),new O(-1,1,1),new O(1,1,-1),new O(-1,1,-1),new O(0,hU,hV),new O(0,hU,-hV),new O(hV,0,hU),new O(-hV,0,hU),new O(hU,hV,0),new O(-hU,hV,0);function hW(){return`

		precision mediump float;
		precision mediump int;

		attribute vec3 position;
		attribute vec2 uv;
		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function hX(){return`

		uniform int inputEncoding;
		uniform int outputEncoding;

		#include <encodings_pars_fragment>

		vec4 inputTexelToLinear( vec4 value ) {

			if ( inputEncoding == 0 ) {

				return value;

			} else if ( inputEncoding == 1 ) {

				return sRGBToLinear( value );

			} else if ( inputEncoding == 2 ) {

				return RGBEToLinear( value );

			} else if ( inputEncoding == 3 ) {

				return RGBMToLinear( value, 7.0 );

			} else if ( inputEncoding == 4 ) {

				return RGBMToLinear( value, 16.0 );

			} else if ( inputEncoding == 5 ) {

				return RGBDToLinear( value, 256.0 );

			} else {

				return GammaToLinear( value, 2.2 );

			}

		}

		vec4 linearToOutputTexel( vec4 value ) {

			if ( outputEncoding == 0 ) {

				return value;

			} else if ( outputEncoding == 1 ) {

				return LinearTosRGB( value );

			} else if ( outputEncoding == 2 ) {

				return LinearToRGBE( value );

			} else if ( outputEncoding == 3 ) {

				return LinearToRGBM( value, 7.0 );

			} else if ( outputEncoding == 4 ) {

				return LinearToRGBM( value, 16.0 );

			} else if ( outputEncoding == 5 ) {

				return LinearToRGBD( value, 256.0 );

			} else {

				return LinearToGamma( value, 2.2 );

			}

		}

		vec4 envMapTexelToLinear( vec4 color ) {

			return inputTexelToLinear( color );

		}
	`}function hY(a){console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."),gz.call(this,a),this.type="catmullrom"}gr.create=function(a,b){return console.log("THREE.Curve.create() has been deprecated"),a.prototype=Object.create(gr.prototype),a.prototype.constructor=a,a.prototype.getPoint=b,a},Object.assign(gL.prototype,{createPointsGeometry:function(a){console.warn("THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");let b=this.getPoints(a);return this.createGeometry(b)},createSpacedPointsGeometry:function(a){console.warn("THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");let b=this.getSpacedPoints(a);return this.createGeometry(b)},createGeometry:function(a){console.warn("THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");let b=new eQ;for(let c=0,d=a.length;c<d;c++){let e=a[c];b.vertices.push(new O(e.x,e.y,e.z||0))}return b}}),Object.assign(gM.prototype,{fromPoints:function(a){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(a)}}),(function(a){console.warn("THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),gz.call(this,a),this.type="catmullrom",this.closed=!0}).prototype=Object.create(gz.prototype),(function(a){console.warn("THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),gz.call(this,a),this.type="catmullrom"}).prototype=Object.create(gz.prototype),hY.prototype=Object.create(gz.prototype),Object.assign(hY.prototype,{initFromArray:function(){console.error("THREE.Spline: .initFromArray() has been removed.")},getControlPointsArray:function(){console.error("THREE.Spline: .getControlPointsArray() has been removed.")},reparametrizeByArcLength:function(){console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.")}}),(class extends ez{constructor(a,b,c,d){a=a||10,b=b||10,c=new a7(void 0!==c?c:4473924),d=new a7(void 0!==d?d:8947848);let e=b/2,f=a/b,g=a/2,h=[],i=[];for(let j=0,k=0,l=-g;j<=b;j++,l+=f){h.push(-g,0,l,g,0,l),h.push(l,0,-g,l,0,g);let m=j===e?c:d;m.toArray(i,k),k+=3,m.toArray(i,k),k+=3,m.toArray(i,k),k+=3,m.toArray(i,k),k+=3}let n=new bx;n.setAttribute("position",new bm(h,3)),n.setAttribute("color",new bm(i,3));let o=new eq({vertexColors:!0,toneMapped:!1});super(n,o),this.type="GridHelper"}}).prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},(class extends ez{constructor(a){let b=hL(a),c=new bx,d=[],e=[],f=new a7(0,0,1),g=new a7(0,1,0);for(let h=0;h<b.length;h++){let i=b[h];i.parent&&i.parent.isBone&&(d.push(0,0,0),d.push(0,0,0),e.push(f.r,f.g,f.b),e.push(g.r,g.g,g.b))}c.setAttribute("position",new bm(d,3)),c.setAttribute("color",new bm(e,3));let j=new eq({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(c,j),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=a,this.bones=b,this.matrix=a.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(a){let b=this.bones,c=this.geometry,d=c.getAttribute("position");hK.getInverse(this.root.matrixWorld);for(let e=0,f=0;e<b.length;e++){let g=b[e];g.parent&&g.parent.isBone&&(hJ.multiplyMatrices(hK,g.matrixWorld),hI.setFromMatrixPosition(hJ),d.setXYZ(f,hI.x,hI.y,hI.z),hJ.multiplyMatrices(hK,g.parent.matrixWorld),hI.setFromMatrixPosition(hJ),d.setXYZ(f+1,hI.x,hI.y,hI.z),f+=2)}c.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(a)}}).prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},Object.assign(gi.prototype,{extractUrlBase:function(a){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),g1.extractUrlBase(a)}}),gi.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}},Object.assign((class{constructor(a,b){Object.defineProperty(this,"isBox2",{value:!0}),this.min=void 0!==a?a:new E(Infinity,Infinity),this.max=void 0!==b?b:new E(-1/0,-1/0)}set(a,b){return this.min.copy(a),this.max.copy(b),this}setFromPoints(a){this.makeEmpty();for(let b=0,c=a.length;b<c;b++)this.expandByPoint(a[b]);return this}setFromCenterAndSize(a,b){let c=hE.copy(b).multiplyScalar(.5);return this.min.copy(a).sub(c),this.max.copy(a).add(c),this}clone(){return new this.constructor().copy(this)}copy(a){return this.min.copy(a.min),this.max.copy(a.max),this}makeEmpty(){return this.min.x=this.min.y=Infinity,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(a){return void 0===a&&(console.warn("THREE.Box2: .getCenter() target is now required"),a=new E),this.isEmpty()?a.set(0,0):a.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(a){return void 0===a&&(console.warn("THREE.Box2: .getSize() target is now required"),a=new E),this.isEmpty()?a.set(0,0):a.subVectors(this.max,this.min)}expandByPoint(a){return this.min.min(a),this.max.max(a),this}expandByVector(a){return this.min.sub(a),this.max.add(a),this}expandByScalar(a){return this.min.addScalar(-a),this.max.addScalar(a),this}containsPoint(a){return!(a.x<this.min.x)&&!(a.x>this.max.x)&&!(a.y<this.min.y)&&!(a.y>this.max.y)}containsBox(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y}getParameter(a,b){return void 0===b&&(console.warn("THREE.Box2: .getParameter() target is now required"),b=new E),b.set((a.x-this.min.x)/(this.max.x-this.min.x),(a.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(a){return!(a.max.x<this.min.x)&&!(a.min.x>this.max.x)&&!(a.max.y<this.min.y)&&!(a.min.y>this.max.y)}clampPoint(a,b){return void 0===b&&(console.warn("THREE.Box2: .clampPoint() target is now required"),b=new E),b.copy(a).clamp(this.min,this.max)}distanceToPoint(a){let b=hE.copy(a).clamp(this.min,this.max);return b.sub(a).length()}intersect(a){return this.min.max(a.min),this.max.min(a.max),this}union(a){return this.min.min(a.min),this.max.max(a.max),this}translate(a){return this.min.add(a),this.max.add(a),this}equals(a){return a.min.equals(this.min)&&a.max.equals(this.max)}}).prototype,{center:function(a){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(a)},empty:function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(a){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(a)},size:function(a){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(a)}}),Object.assign(R.prototype,{center:function(a){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(a)},empty:function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(a){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(a)},isIntersectionSphere:function(a){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(a)},size:function(a){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(a)}}),Object.assign(af.prototype,{empty:function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()}}),b3.prototype.setFromMatrix=function(a){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(a)},(class{constructor(a,b){this.start=void 0!==a?a:new O,this.end=void 0!==b?b:new O}set(a,b){return this.start.copy(a),this.end.copy(b),this}clone(){return new this.constructor().copy(this)}copy(a){return this.start.copy(a.start),this.end.copy(a.end),this}getCenter(a){return void 0===a&&(console.warn("THREE.Line3: .getCenter() target is now required"),a=new O),a.addVectors(this.start,this.end).multiplyScalar(.5)}delta(a){return void 0===a&&(console.warn("THREE.Line3: .delta() target is now required"),a=new O),a.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(a,b){return void 0===b&&(console.warn("THREE.Line3: .at() target is now required"),b=new O),this.delta(b).multiplyScalar(a).add(this.start)}closestPointToPointParameter(a,b){hF.subVectors(a,this.start),hG.subVectors(this.end,this.start);let c=hG.dot(hG),d=hG.dot(hF),e=d/c;return b&&(e=D.clamp(e,0,1)),e}closestPointToPoint(a,b,c){let d=this.closestPointToPointParameter(a,b);return void 0===c&&(console.warn("THREE.Line3: .closestPointToPoint() target is now required"),c=new O),this.delta(c).multiplyScalar(d).add(this.start)}applyMatrix4(a){return this.start.applyMatrix4(a),this.end.applyMatrix4(a),this}equals(a){return a.start.equals(this.start)&&a.end.equals(this.end)}}).prototype.center=function(a){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(a)},Object.assign(D,{random16:function(){return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."),Math.random()},nearestPowerOfTwo:function(a){return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."),D.floorPowerOfTwo(a)},nextPowerOfTwo:function(a){return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."),D.ceilPowerOfTwo(a)}}),Object.assign(F.prototype,{flattenToArrayOffset:function(a,b){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(a,b)},multiplyVector3:function(a){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),a.applyMatrix3(this)},multiplyVector3Array:function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},applyToBufferAttribute:function(a){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),a.applyMatrix3(this)},applyToVector3Array:function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")}}),Object.assign(ao.prototype,{extractPosition:function(a){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(a)},flattenToArrayOffset:function(a,b){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(a,b)},getPosition:function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),new O().setFromMatrixColumn(this,3)},setRotationFromQuaternion:function(a){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(a)},multiplyToArray:function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},multiplyVector3:function(a){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),a.applyMatrix4(this)},multiplyVector4:function(a){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),a.applyMatrix4(this)},multiplyVector3Array:function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},rotateAxis:function(a){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),a.transformDirection(this)},crossVector:function(a){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),a.applyMatrix4(this)},translate:function(){console.error("THREE.Matrix4: .translate() has been removed.")},rotateX:function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},applyToBufferAttribute:function(a){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),a.applyMatrix4(this)},applyToVector3Array:function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},makeFrustum:function(a,b,c,d,e,f){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(a,b,d,c,e,f)}}),aR.prototype.isIntersectionLine=function(a){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(a)},N.prototype.multiplyVector3=function(a){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),a.applyQuaternion(this)},Object.assign(an.prototype,{isIntersectionBox:function(a){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(a)},isIntersectionPlane:function(a){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(a)},isIntersectionSphere:function(a){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(a)}}),Object.assign(a0.prototype,{area:function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},barycoordFromPoint:function(a,b){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(a,b)},midpoint:function(a){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(a)},normal:function(a){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(a)},plane:function(a){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(a)}}),Object.assign(a0,{barycoordFromPoint:function(a,b,c,d,e){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),a0.getBarycoord(a,b,c,d,e)},normal:function(a,b,c,d){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),a0.getNormal(a,b,c,d)}}),Object.assign(gN.prototype,{extractAllPoints:function(a){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(a)},extrude:function(a){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new fA(this,a)},makeGeometry:function(a){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new fK(this,a)}}),Object.assign(E.prototype,{fromAttribute:function(a,b,c){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(a,b,c)},distanceToManhattan:function(a){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(a)},lengthManhattan:function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(O.prototype,{setEulerFromRotationMatrix:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(a){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(a)},getScaleFromMatrix:function(a){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(a)},getColumnFromMatrix:function(a,b){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(b,a)},applyProjection:function(a){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(a)},fromAttribute:function(a,b,c){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(a,b,c)},distanceToManhattan:function(a){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(a)},lengthManhattan:function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(K.prototype,{fromAttribute:function(a,b,c){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(a,b,c)},lengthManhattan:function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(eQ.prototype,{computeTangents:function(){console.error("THREE.Geometry: .computeTangents() has been removed.")},computeLineDistances:function(){console.error("THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.")},applyMatrix:function(a){return console.warn("THREE.Geometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(a)}}),Object.assign(aN.prototype,{getChildByName:function(a){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(a)},renderDepth:function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},translate:function(a,b){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(b,a)},getWorldRotation:function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},applyMatrix:function(a){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(a)}}),Object.defineProperties(aN.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(a){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=a}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),Object.assign(bP.prototype,{setDrawMode:function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}),Object.defineProperties(bP.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),0},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),Object.defineProperties(ef.prototype,{objects:{get:function(){return console.warn("THREE.LOD: .objects has been renamed to .levels."),this.levels}}}),Object.defineProperty(ej.prototype,"useVertexTexture",{get:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")},set:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")}}),eg.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},Object.defineProperty(gr.prototype,"__arcLengthDivisions",{get:function(){return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions},set:function(a){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions=a}}),bY.prototype.setLens=function(a,b){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==b&&(this.filmGauge=b),this.setFocalLength(a)},Object.defineProperties(gO.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(a){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=a}},shadowCameraLeft:{set:function(a){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=a}},shadowCameraRight:{set:function(a){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=a}},shadowCameraTop:{set:function(a){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=a}},shadowCameraBottom:{set:function(a){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=a}},shadowCameraNear:{set:function(a){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=a}},shadowCameraFar:{set:function(a){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=a}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(a){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=a}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(a){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=a}},shadowMapHeight:{set:function(a){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=a}}}),Object.defineProperties(be.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),35048===this.usage},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(35048)}}}),Object.assign(be.prototype,{setDynamic:function(a){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===a?35048:35044),this},copyIndicesArray:function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},setArray:function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}}),Object.assign(bx.prototype,{addIndex:function(a){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(a)},addAttribute:function(a,b){return(console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),b&&b.isBufferAttribute||b&&b.isInterleavedBufferAttribute)?"index"===a?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(b),this):this.setAttribute(a,b):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(a,new be(arguments[1],arguments[2])))},addDrawCall:function(a,b,c){void 0!==c&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(a,b)},clearDrawCalls:function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},computeTangents:function(){console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")},computeOffsets:function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},removeAttribute:function(a){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(a)},applyMatrix:function(a){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(a)}}),Object.defineProperties(bx.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),Object.defineProperties(g2.prototype,{maxInstancedCount:{get:function(){return console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount},set:function(a){console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount=a}}}),Object.defineProperties(hA.prototype,{linePrecision:{get:function(){return console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold},set:function(a){console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold=a}}}),Object.defineProperties(dW.prototype,{dynamic:{get:function(){return console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),35048===this.usage},set:function(a){console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.setUsage(a)}}}),Object.assign(dW.prototype,{setDynamic:function(a){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===a?35048:35044),this},setArray:function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}}),Object.assign(fx.prototype,{getArrays:function(){console.error("THREE.ExtrudeBufferGeometry: .getArrays() has been removed.")},addShapeList:function(){console.error("THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.")},addShape:function(){console.error("THREE.ExtrudeBufferGeometry: .addShape() has been removed.")}}),Object.assign(dV.prototype,{dispose:function(){console.error("THREE.Scene: .dispose() has been removed.")}}),Object.defineProperties(hx.prototype,{dynamic:{set:function(){console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.")}},onUpdate:{value:function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this}}}),Object.defineProperties(ba.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new a7}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(a){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===a}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(a){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=a}}}),Object.defineProperties(fW.prototype,{metal:{get:function(){return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."),!1},set:function(){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")}}}),Object.defineProperties(fV.prototype,{transparency:{get:function(){return console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission."),this.transmission},set:function(a){console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission."),this.transmission=a}}}),Object.defineProperties(bW.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(a){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=a}}}),Object.assign(dR.prototype,{clearTarget:function(a,b,c,d){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(a),this.clear(b,c,d)},animate:function(a){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(a)},getCurrentRenderTarget:function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},getMaxAnisotropy:function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},getPrecision:function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},resetGLState:function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},supportsFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},supportsHalfFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},supportsStandardDerivatives:function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},supportsCompressedTextureS3TC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},supportsCompressedTexturePVRTC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},supportsBlendMinMax:function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},supportsVertexTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},supportsInstancedArrays:function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},enableScissorTest:function(a){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(a)},initMaterial:function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},addPrePlugin:function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},addPostPlugin:function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},updateShadowMap:function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},setFaceCulling:function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},allocTextureUnit:function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},setTexture:function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},setTexture2D:function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},setTextureCube:function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},getActiveMipMapLevel:function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()}}),Object.defineProperties(dR.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(a){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=a}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(a){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=a}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(a){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=!0===a?w:3e3}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}}}),Object.defineProperties(dI.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}}),Object.defineProperties(L.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(a){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=a}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(a){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=a}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(a){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=a}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(a){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=a}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(a){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=a}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(a){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=a}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(a){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=a}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(a){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=a}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(a){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=a}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(a){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=a}}}),Object.defineProperties((class extends aN{constructor(a){super(),this.type="Audio",this.listener=a,this.context=a.context,this.gain=this.context.createGain(),this.gain.connect(a.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(a){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=a,this.connect(),this}setMediaElementSource(a){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(a),this.connect(),this}setMediaStreamSource(a){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(a),this.connect(),this}setBuffer(a){return this.buffer=a,this.sourceType="buffer",this.autoplay&&this.play(),this}play(a){if(void 0===a&&(a=0),!0===this.isPlaying){console.warn("THREE.Audio: Audio is already playing.");return}if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+a;let b=this.context.createBufferSource();return b.buffer=this.buffer,b.loop=this.loop,b.loopStart=this.loopStart,b.loopEnd=this.loopEnd,b.onended=this.onEnded.bind(this),b.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=b,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let a=1,b=this.filters.length;a<b;a++)this.filters[a-1].connect(this.filters[a]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let a=1,b=this.filters.length;a<b;a++)this.filters[a-1].disconnect(this.filters[a]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(a){return a||(a=[]),!0===this._connected?(this.disconnect(),this.filters=a,this.connect()):this.filters=a,this}setDetune(a){if(this.detune=a,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(a){return this.setFilters(a?[a]:[])}setPlaybackRate(a){if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=a,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(a){if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=a,!0===this.isPlaying&&(this.source.loop=this.loop),this}setLoopStart(a){return this.loopStart=a,this}setLoopEnd(a){return this.loopEnd=a,this}getVolume(){return this.gain.gain.value}setVolume(a){return this.gain.gain.setTargetAtTime(a,this.context.currentTime,.01),this}}).prototype,{load:{value:function(a){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");let b=this,c=new hd;return c.load(a,function(a){b.setBuffer(a)}),this}},startTime:{set:function(){console.warn("THREE.Audio: .startTime is now .play( delay ).")}}}),(class{constructor(a,b){this.analyser=a.context.createAnalyser(),this.analyser.fftSize=void 0!==b?b:2048,this.data=new Uint8Array(this.analyser.frequencyBinCount),a.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let a=0,b=this.getFrequencyData();for(let c=0;c<b.length;c++)a+=b[c];return a/b.length}}).prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()},bZ.prototype.updateCubeMap=function(a,b){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(a,b)},H.crossOrigin=void 0,H.loadTexture=function(a,b,c,d){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");let e=new gq;e.setCrossOrigin(this.crossOrigin);let f=e.load(a,c,void 0,d);return b&&(f.mapping=b),f},H.loadTextureCube=function(a,b,c,d){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");let e=new go;e.setCrossOrigin(this.crossOrigin);let f=e.load(a,c,void 0,d);return b&&(f.mapping=b),f},H.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},H.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:"121"}}))}}])